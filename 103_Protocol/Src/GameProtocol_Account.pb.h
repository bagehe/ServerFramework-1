// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol_Account.proto

#ifndef PROTOBUF_GameProtocol_5fAccount_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_5fAccount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol_Common.pb.h"
#include "GameProtocol_USERDB.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

class CreateRole_Account_Request;
class CreateRole_Account_Response;
class Account_ListZone_Request;
class Account_ListZone_Response;
class DeleteRole_Account_Request;
class DeleteRole_Account_Response;
class Account_ListRole_Request;
class Account_ListRole_Response;

// ===================================================================

class CreateRole_Account_Request : public ::google::protobuf::Message {
 public:
  CreateRole_Account_Request();
  virtual ~CreateRole_Account_Request();

  CreateRole_Account_Request(const CreateRole_Account_Request& from);

  inline CreateRole_Account_Request& operator=(const CreateRole_Account_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRole_Account_Request& default_instance();

  void Swap(CreateRole_Account_Request* other);

  // implements Message ----------------------------------------------

  CreateRole_Account_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRole_Account_Request& from);
  void MergeFrom(const CreateRole_Account_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szNickName = 4;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 4;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // @@protoc_insertion_point(class_scope:CreateRole_Account_Request)
 private:
  inline void set_has_sznickname();
  inline void clear_has_sznickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sznickname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static CreateRole_Account_Request* default_instance_;
};
// -------------------------------------------------------------------

class CreateRole_Account_Response : public ::google::protobuf::Message {
 public:
  CreateRole_Account_Response();
  virtual ~CreateRole_Account_Response();

  CreateRole_Account_Response(const CreateRole_Account_Response& from);

  inline CreateRole_Account_Response& operator=(const CreateRole_Account_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRole_Account_Response& default_instance();

  void Swap(CreateRole_Account_Response* other);

  // implements Message ----------------------------------------------

  CreateRole_Account_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRole_Account_Response& from);
  void MergeFrom(const CreateRole_Account_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uWorldID = 2;
  inline bool has_uworldid() const;
  inline void clear_uworldid();
  static const int kUWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 uworldid() const;
  inline void set_uworldid(::google::protobuf::uint32 value);

  // optional .RoleID stRoleID = 3;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 3;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // @@protoc_insertion_point(class_scope:CreateRole_Account_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uworldid();
  inline void clear_has_uworldid();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uworldid_;
  ::RoleID* stroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static CreateRole_Account_Response* default_instance_;
};
// -------------------------------------------------------------------

class Account_ListZone_Request : public ::google::protobuf::Message {
 public:
  Account_ListZone_Request();
  virtual ~Account_ListZone_Request();

  Account_ListZone_Request(const Account_ListZone_Request& from);

  inline Account_ListZone_Request& operator=(const Account_ListZone_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Account_ListZone_Request& default_instance();

  void Swap(Account_ListZone_Request* other);

  // implements Message ----------------------------------------------

  Account_ListZone_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Account_ListZone_Request& from);
  void MergeFrom(const Account_ListZone_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);

  // optional uint32 uISPInfo = 2;
  inline bool has_uispinfo() const;
  inline void clear_uispinfo();
  static const int kUISPInfoFieldNumber = 2;
  inline ::google::protobuf::uint32 uispinfo() const;
  inline void set_uispinfo(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Account_ListZone_Request)
 private:
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_uispinfo();
  inline void clear_has_uispinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 uispinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static Account_ListZone_Request* default_instance_;
};
// -------------------------------------------------------------------

class Account_ListZone_Response : public ::google::protobuf::Message {
 public:
  Account_ListZone_Response();
  virtual ~Account_ListZone_Response();

  Account_ListZone_Response(const Account_ListZone_Response& from);

  inline Account_ListZone_Response& operator=(const Account_ListZone_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Account_ListZone_Response& default_instance();

  void Swap(Account_ListZone_Response* other);

  // implements Message ----------------------------------------------

  Account_ListZone_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Account_ListZone_Response& from);
  void MergeFrom(const Account_ListZone_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uWorldID = 2;
  inline bool has_uworldid() const;
  inline void clear_uworldid();
  static const int kUWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 uworldid() const;
  inline void set_uworldid(::google::protobuf::uint32 value);

  // optional .ZoneList stZoneList = 3;
  inline bool has_stzonelist() const;
  inline void clear_stzonelist();
  static const int kStZoneListFieldNumber = 3;
  inline const ::ZoneList& stzonelist() const;
  inline ::ZoneList* mutable_stzonelist();
  inline ::ZoneList* release_stzonelist();
  inline void set_allocated_stzonelist(::ZoneList* stzonelist);

  // @@protoc_insertion_point(class_scope:Account_ListZone_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uworldid();
  inline void clear_has_uworldid();
  inline void set_has_stzonelist();
  inline void clear_has_stzonelist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uworldid_;
  ::ZoneList* stzonelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static Account_ListZone_Response* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRole_Account_Request : public ::google::protobuf::Message {
 public:
  DeleteRole_Account_Request();
  virtual ~DeleteRole_Account_Request();

  DeleteRole_Account_Request(const DeleteRole_Account_Request& from);

  inline DeleteRole_Account_Request& operator=(const DeleteRole_Account_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRole_Account_Request& default_instance();

  void Swap(DeleteRole_Account_Request* other);

  // implements Message ----------------------------------------------

  DeleteRole_Account_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRole_Account_Request& from);
  void MergeFrom(const DeleteRole_Account_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // @@protoc_insertion_point(class_scope:DeleteRole_Account_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static DeleteRole_Account_Request* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRole_Account_Response : public ::google::protobuf::Message {
 public:
  DeleteRole_Account_Response();
  virtual ~DeleteRole_Account_Response();

  DeleteRole_Account_Response(const DeleteRole_Account_Response& from);

  inline DeleteRole_Account_Response& operator=(const DeleteRole_Account_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRole_Account_Response& default_instance();

  void Swap(DeleteRole_Account_Response* other);

  // implements Message ----------------------------------------------

  DeleteRole_Account_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRole_Account_Response& from);
  void MergeFrom(const DeleteRole_Account_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional uint32 uProfession = 4;
  inline bool has_uprofession() const;
  inline void clear_uprofession();
  static const int kUProfessionFieldNumber = 4;
  inline ::google::protobuf::uint32 uprofession() const;
  inline void set_uprofession(::google::protobuf::uint32 value);

  // optional uint32 uLevel = 6;
  inline bool has_ulevel() const;
  inline void clear_ulevel();
  static const int kULevelFieldNumber = 6;
  inline ::google::protobuf::uint32 ulevel() const;
  inline void set_ulevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DeleteRole_Account_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_uprofession();
  inline void clear_has_uprofession();
  inline void set_has_ulevel();
  inline void clear_has_ulevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uprofession_;
  ::google::protobuf::uint32 ulevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static DeleteRole_Account_Response* default_instance_;
};
// -------------------------------------------------------------------

class Account_ListRole_Request : public ::google::protobuf::Message {
 public:
  Account_ListRole_Request();
  virtual ~Account_ListRole_Request();

  Account_ListRole_Request(const Account_ListRole_Request& from);

  inline Account_ListRole_Request& operator=(const Account_ListRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Account_ListRole_Request& default_instance();

  void Swap(Account_ListRole_Request* other);

  // implements Message ----------------------------------------------

  Account_ListRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Account_ListRole_Request& from);
  void MergeFrom(const Account_ListRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 world = 2;
  inline bool has_world() const;
  inline void clear_world();
  static const int kWorldFieldNumber = 2;
  inline ::google::protobuf::uint32 world() const;
  inline void set_world(::google::protobuf::uint32 value);

  // optional string sessionKey = 3;
  inline bool has_sessionkey() const;
  inline void clear_sessionkey();
  static const int kSessionKeyFieldNumber = 3;
  inline const ::std::string& sessionkey() const;
  inline void set_sessionkey(const ::std::string& value);
  inline void set_sessionkey(const char* value);
  inline void set_sessionkey(const char* value, size_t size);
  inline ::std::string* mutable_sessionkey();
  inline ::std::string* release_sessionkey();
  inline void set_allocated_sessionkey(::std::string* sessionkey);

  // @@protoc_insertion_point(class_scope:Account_ListRole_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_world();
  inline void clear_has_world();
  inline void set_has_sessionkey();
  inline void clear_has_sessionkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 world_;
  ::std::string* sessionkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static Account_ListRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class Account_ListRole_Response : public ::google::protobuf::Message {
 public:
  Account_ListRole_Response();
  virtual ~Account_ListRole_Response();

  Account_ListRole_Response(const Account_ListRole_Response& from);

  inline Account_ListRole_Response& operator=(const Account_ListRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Account_ListRole_Response& default_instance();

  void Swap(Account_ListRole_Response* other);

  // implements Message ----------------------------------------------

  Account_ListRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Account_ListRole_Response& from);
  void MergeFrom(const Account_ListRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional uint32 world = 4;
  inline bool has_world() const;
  inline void clear_world();
  static const int kWorldFieldNumber = 4;
  inline ::google::protobuf::uint32 world() const;
  inline void set_world(::google::protobuf::uint32 value);

  // optional bool bExist = 5;
  inline bool has_bexist() const;
  inline void clear_bexist();
  static const int kBExistFieldNumber = 5;
  inline bool bexist() const;
  inline void set_bexist(bool value);

  // @@protoc_insertion_point(class_scope:Account_ListRole_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_world();
  inline void clear_has_world();
  inline void set_has_bexist();
  inline void clear_has_bexist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 world_;
  bool bexist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fAccount_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fAccount_2eproto();

  void InitAsDefaultInstance();
  static Account_ListRole_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateRole_Account_Request

// optional string szNickName = 4;
inline bool CreateRole_Account_Request::has_sznickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRole_Account_Request::set_has_sznickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRole_Account_Request::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRole_Account_Request::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::kEmptyString) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& CreateRole_Account_Request::sznickname() const {
  return *sznickname_;
}
inline void CreateRole_Account_Request::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
}
inline void CreateRole_Account_Request::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
}
inline void CreateRole_Account_Request::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateRole_Account_Request::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  return sznickname_;
}
inline ::std::string* CreateRole_Account_Request::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateRole_Account_Request::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::kEmptyString) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CreateRole_Account_Response

// optional int32 iResult = 1;
inline bool CreateRole_Account_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRole_Account_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRole_Account_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRole_Account_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 CreateRole_Account_Response::iresult() const {
  return iresult_;
}
inline void CreateRole_Account_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uWorldID = 2;
inline bool CreateRole_Account_Response::has_uworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRole_Account_Response::set_has_uworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRole_Account_Response::clear_has_uworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRole_Account_Response::clear_uworldid() {
  uworldid_ = 0u;
  clear_has_uworldid();
}
inline ::google::protobuf::uint32 CreateRole_Account_Response::uworldid() const {
  return uworldid_;
}
inline void CreateRole_Account_Response::set_uworldid(::google::protobuf::uint32 value) {
  set_has_uworldid();
  uworldid_ = value;
}

// optional .RoleID stRoleID = 3;
inline bool CreateRole_Account_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRole_Account_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRole_Account_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRole_Account_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& CreateRole_Account_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* CreateRole_Account_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* CreateRole_Account_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void CreateRole_Account_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// -------------------------------------------------------------------

// Account_ListZone_Request

// optional uint32 worldID = 1;
inline bool Account_ListZone_Request::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Account_ListZone_Request::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Account_ListZone_Request::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Account_ListZone_Request::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 Account_ListZone_Request::worldid() const {
  return worldid_;
}
inline void Account_ListZone_Request::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional uint32 uISPInfo = 2;
inline bool Account_ListZone_Request::has_uispinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Account_ListZone_Request::set_has_uispinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Account_ListZone_Request::clear_has_uispinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Account_ListZone_Request::clear_uispinfo() {
  uispinfo_ = 0u;
  clear_has_uispinfo();
}
inline ::google::protobuf::uint32 Account_ListZone_Request::uispinfo() const {
  return uispinfo_;
}
inline void Account_ListZone_Request::set_uispinfo(::google::protobuf::uint32 value) {
  set_has_uispinfo();
  uispinfo_ = value;
}

// -------------------------------------------------------------------

// Account_ListZone_Response

// optional int32 iResult = 1;
inline bool Account_ListZone_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Account_ListZone_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Account_ListZone_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Account_ListZone_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Account_ListZone_Response::iresult() const {
  return iresult_;
}
inline void Account_ListZone_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uWorldID = 2;
inline bool Account_ListZone_Response::has_uworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Account_ListZone_Response::set_has_uworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Account_ListZone_Response::clear_has_uworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Account_ListZone_Response::clear_uworldid() {
  uworldid_ = 0u;
  clear_has_uworldid();
}
inline ::google::protobuf::uint32 Account_ListZone_Response::uworldid() const {
  return uworldid_;
}
inline void Account_ListZone_Response::set_uworldid(::google::protobuf::uint32 value) {
  set_has_uworldid();
  uworldid_ = value;
}

// optional .ZoneList stZoneList = 3;
inline bool Account_ListZone_Response::has_stzonelist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Account_ListZone_Response::set_has_stzonelist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Account_ListZone_Response::clear_has_stzonelist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Account_ListZone_Response::clear_stzonelist() {
  if (stzonelist_ != NULL) stzonelist_->::ZoneList::Clear();
  clear_has_stzonelist();
}
inline const ::ZoneList& Account_ListZone_Response::stzonelist() const {
  return stzonelist_ != NULL ? *stzonelist_ : *default_instance_->stzonelist_;
}
inline ::ZoneList* Account_ListZone_Response::mutable_stzonelist() {
  set_has_stzonelist();
  if (stzonelist_ == NULL) stzonelist_ = new ::ZoneList;
  return stzonelist_;
}
inline ::ZoneList* Account_ListZone_Response::release_stzonelist() {
  clear_has_stzonelist();
  ::ZoneList* temp = stzonelist_;
  stzonelist_ = NULL;
  return temp;
}
inline void Account_ListZone_Response::set_allocated_stzonelist(::ZoneList* stzonelist) {
  delete stzonelist_;
  stzonelist_ = stzonelist;
  if (stzonelist) {
    set_has_stzonelist();
  } else {
    clear_has_stzonelist();
  }
}

// -------------------------------------------------------------------

// DeleteRole_Account_Request

// optional .RoleID stRoleID = 1;
inline bool DeleteRole_Account_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRole_Account_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRole_Account_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRole_Account_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& DeleteRole_Account_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* DeleteRole_Account_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* DeleteRole_Account_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void DeleteRole_Account_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// -------------------------------------------------------------------

// DeleteRole_Account_Response

// optional int32 iResult = 1;
inline bool DeleteRole_Account_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRole_Account_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRole_Account_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRole_Account_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 DeleteRole_Account_Response::iresult() const {
  return iresult_;
}
inline void DeleteRole_Account_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool DeleteRole_Account_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteRole_Account_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteRole_Account_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteRole_Account_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& DeleteRole_Account_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* DeleteRole_Account_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* DeleteRole_Account_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void DeleteRole_Account_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional uint32 uProfession = 4;
inline bool DeleteRole_Account_Response::has_uprofession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteRole_Account_Response::set_has_uprofession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteRole_Account_Response::clear_has_uprofession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteRole_Account_Response::clear_uprofession() {
  uprofession_ = 0u;
  clear_has_uprofession();
}
inline ::google::protobuf::uint32 DeleteRole_Account_Response::uprofession() const {
  return uprofession_;
}
inline void DeleteRole_Account_Response::set_uprofession(::google::protobuf::uint32 value) {
  set_has_uprofession();
  uprofession_ = value;
}

// optional uint32 uLevel = 6;
inline bool DeleteRole_Account_Response::has_ulevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeleteRole_Account_Response::set_has_ulevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeleteRole_Account_Response::clear_has_ulevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeleteRole_Account_Response::clear_ulevel() {
  ulevel_ = 0u;
  clear_has_ulevel();
}
inline ::google::protobuf::uint32 DeleteRole_Account_Response::ulevel() const {
  return ulevel_;
}
inline void DeleteRole_Account_Response::set_ulevel(::google::protobuf::uint32 value) {
  set_has_ulevel();
  ulevel_ = value;
}

// -------------------------------------------------------------------

// Account_ListRole_Request

// optional uint32 uin = 1;
inline bool Account_ListRole_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Account_ListRole_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Account_ListRole_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Account_ListRole_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Account_ListRole_Request::uin() const {
  return uin_;
}
inline void Account_ListRole_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 world = 2;
inline bool Account_ListRole_Request::has_world() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Account_ListRole_Request::set_has_world() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Account_ListRole_Request::clear_has_world() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Account_ListRole_Request::clear_world() {
  world_ = 0u;
  clear_has_world();
}
inline ::google::protobuf::uint32 Account_ListRole_Request::world() const {
  return world_;
}
inline void Account_ListRole_Request::set_world(::google::protobuf::uint32 value) {
  set_has_world();
  world_ = value;
}

// optional string sessionKey = 3;
inline bool Account_ListRole_Request::has_sessionkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Account_ListRole_Request::set_has_sessionkey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Account_ListRole_Request::clear_has_sessionkey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Account_ListRole_Request::clear_sessionkey() {
  if (sessionkey_ != &::google::protobuf::internal::kEmptyString) {
    sessionkey_->clear();
  }
  clear_has_sessionkey();
}
inline const ::std::string& Account_ListRole_Request::sessionkey() const {
  return *sessionkey_;
}
inline void Account_ListRole_Request::set_sessionkey(const ::std::string& value) {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::kEmptyString) {
    sessionkey_ = new ::std::string;
  }
  sessionkey_->assign(value);
}
inline void Account_ListRole_Request::set_sessionkey(const char* value) {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::kEmptyString) {
    sessionkey_ = new ::std::string;
  }
  sessionkey_->assign(value);
}
inline void Account_ListRole_Request::set_sessionkey(const char* value, size_t size) {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::kEmptyString) {
    sessionkey_ = new ::std::string;
  }
  sessionkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Account_ListRole_Request::mutable_sessionkey() {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::kEmptyString) {
    sessionkey_ = new ::std::string;
  }
  return sessionkey_;
}
inline ::std::string* Account_ListRole_Request::release_sessionkey() {
  clear_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sessionkey_;
    sessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Account_ListRole_Request::set_allocated_sessionkey(::std::string* sessionkey) {
  if (sessionkey_ != &::google::protobuf::internal::kEmptyString) {
    delete sessionkey_;
  }
  if (sessionkey) {
    set_has_sessionkey();
    sessionkey_ = sessionkey;
  } else {
    clear_has_sessionkey();
    sessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Account_ListRole_Response

// optional int32 iResult = 1;
inline bool Account_ListRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Account_ListRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Account_ListRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Account_ListRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Account_ListRole_Response::iresult() const {
  return iresult_;
}
inline void Account_ListRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool Account_ListRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Account_ListRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Account_ListRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Account_ListRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Account_ListRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Account_ListRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Account_ListRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Account_ListRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional uint32 world = 4;
inline bool Account_ListRole_Response::has_world() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Account_ListRole_Response::set_has_world() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Account_ListRole_Response::clear_has_world() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Account_ListRole_Response::clear_world() {
  world_ = 0u;
  clear_has_world();
}
inline ::google::protobuf::uint32 Account_ListRole_Response::world() const {
  return world_;
}
inline void Account_ListRole_Response::set_world(::google::protobuf::uint32 value) {
  set_has_world();
  world_ = value;
}

// optional bool bExist = 5;
inline bool Account_ListRole_Response::has_bexist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Account_ListRole_Response::set_has_bexist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Account_ListRole_Response::clear_has_bexist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Account_ListRole_Response::clear_bexist() {
  bexist_ = false;
  clear_has_bexist();
}
inline bool Account_ListRole_Response::bexist() const {
  return bexist_;
}
inline void Account_ListRole_Response::set_bexist(bool value) {
  set_has_bexist();
  bexist_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_5fAccount_2eproto__INCLUDED
