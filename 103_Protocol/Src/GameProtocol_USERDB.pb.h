// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol_USERDB.proto

#ifndef PROTOBUF_GameProtocol_5fUSERDB_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_5fUSERDB_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol_Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

class GameUserInfo;
class WeaponInfo;
class ExpLineInfo;
class BASEDBINFO;
class OneQuest;
class QUESTDBINFO;
class OneSlotInfo;
class ItemSlotInfo;
class ITEMDBINFO;
class FRIENDDBINFO;
class MailAppendix;
class OneMailInfo;
class MAILDBINFO;
class PAYOFFLINEDBINFO;
class AddResInfo;
class RESOFFLINEDBINFO;
class MAILOFFLINEDBINFO;
class RESERVED1DBINFO;
class ExchangeOrder;
class ExchangeUser;
class EXCHANGEDBINFO;
class RechargeRecord;
class RECHARGEDBINFO;
class RESERVED2DBINFO;

enum FirstRewardType {
  FIRST_REWARD_NOTOK = 0,
  FIRST_REWARD_OK = 1,
  FIRST_REWARD_GET = 2
};
bool FirstRewardType_IsValid(int value);
const FirstRewardType FirstRewardType_MIN = FIRST_REWARD_NOTOK;
const FirstRewardType FirstRewardType_MAX = FIRST_REWARD_GET;
const int FirstRewardType_ARRAYSIZE = FirstRewardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FirstRewardType_descriptor();
inline const ::std::string& FirstRewardType_Name(FirstRewardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FirstRewardType_descriptor(), value);
}
inline bool FirstRewardType_Parse(
    const ::std::string& name, FirstRewardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FirstRewardType>(
    FirstRewardType_descriptor(), name, value);
}
// ===================================================================

class GameUserInfo : public ::google::protobuf::Message {
 public:
  GameUserInfo();
  virtual ~GameUserInfo();

  GameUserInfo(const GameUserInfo& from);

  inline GameUserInfo& operator=(const GameUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameUserInfo& default_instance();

  void Swap(GameUserInfo* other);

  // implements Message ----------------------------------------------

  GameUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameUserInfo& from);
  void MergeFrom(const GameUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 uiSeq = 2;
  inline bool has_uiseq() const;
  inline void clear_uiseq();
  static const int kUiSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 uiseq() const;
  inline void set_uiseq(::google::protobuf::uint32 value);

  // optional bytes strBaseInfo = 3;
  inline bool has_strbaseinfo() const;
  inline void clear_strbaseinfo();
  static const int kStrBaseInfoFieldNumber = 3;
  inline const ::std::string& strbaseinfo() const;
  inline void set_strbaseinfo(const ::std::string& value);
  inline void set_strbaseinfo(const char* value);
  inline void set_strbaseinfo(const void* value, size_t size);
  inline ::std::string* mutable_strbaseinfo();
  inline ::std::string* release_strbaseinfo();
  inline void set_allocated_strbaseinfo(::std::string* strbaseinfo);

  // optional bytes strQuestInfo = 4;
  inline bool has_strquestinfo() const;
  inline void clear_strquestinfo();
  static const int kStrQuestInfoFieldNumber = 4;
  inline const ::std::string& strquestinfo() const;
  inline void set_strquestinfo(const ::std::string& value);
  inline void set_strquestinfo(const char* value);
  inline void set_strquestinfo(const void* value, size_t size);
  inline ::std::string* mutable_strquestinfo();
  inline ::std::string* release_strquestinfo();
  inline void set_allocated_strquestinfo(::std::string* strquestinfo);

  // optional bytes strItemInfo = 5;
  inline bool has_striteminfo() const;
  inline void clear_striteminfo();
  static const int kStrItemInfoFieldNumber = 5;
  inline const ::std::string& striteminfo() const;
  inline void set_striteminfo(const ::std::string& value);
  inline void set_striteminfo(const char* value);
  inline void set_striteminfo(const void* value, size_t size);
  inline ::std::string* mutable_striteminfo();
  inline ::std::string* release_striteminfo();
  inline void set_allocated_striteminfo(::std::string* striteminfo);

  // optional bytes strFriendInfo = 6;
  inline bool has_strfriendinfo() const;
  inline void clear_strfriendinfo();
  static const int kStrFriendInfoFieldNumber = 6;
  inline const ::std::string& strfriendinfo() const;
  inline void set_strfriendinfo(const ::std::string& value);
  inline void set_strfriendinfo(const char* value);
  inline void set_strfriendinfo(const void* value, size_t size);
  inline ::std::string* mutable_strfriendinfo();
  inline ::std::string* release_strfriendinfo();
  inline void set_allocated_strfriendinfo(::std::string* strfriendinfo);

  // optional bytes strMailInfo = 7;
  inline bool has_strmailinfo() const;
  inline void clear_strmailinfo();
  static const int kStrMailInfoFieldNumber = 7;
  inline const ::std::string& strmailinfo() const;
  inline void set_strmailinfo(const ::std::string& value);
  inline void set_strmailinfo(const char* value);
  inline void set_strmailinfo(const void* value, size_t size);
  inline ::std::string* mutable_strmailinfo();
  inline ::std::string* release_strmailinfo();
  inline void set_allocated_strmailinfo(::std::string* strmailinfo);

  // optional bytes strReserved1 = 8;
  inline bool has_strreserved1() const;
  inline void clear_strreserved1();
  static const int kStrReserved1FieldNumber = 8;
  inline const ::std::string& strreserved1() const;
  inline void set_strreserved1(const ::std::string& value);
  inline void set_strreserved1(const char* value);
  inline void set_strreserved1(const void* value, size_t size);
  inline ::std::string* mutable_strreserved1();
  inline ::std::string* release_strreserved1();
  inline void set_allocated_strreserved1(::std::string* strreserved1);

  // optional bytes strReserved2 = 9;
  inline bool has_strreserved2() const;
  inline void clear_strreserved2();
  static const int kStrReserved2FieldNumber = 9;
  inline const ::std::string& strreserved2() const;
  inline void set_strreserved2(const ::std::string& value);
  inline void set_strreserved2(const char* value);
  inline void set_strreserved2(const void* value, size_t size);
  inline ::std::string* mutable_strreserved2();
  inline ::std::string* release_strreserved2();
  inline void set_allocated_strreserved2(::std::string* strreserved2);

  // @@protoc_insertion_point(class_scope:GameUserInfo)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_uiseq();
  inline void clear_has_uiseq();
  inline void set_has_strbaseinfo();
  inline void clear_has_strbaseinfo();
  inline void set_has_strquestinfo();
  inline void clear_has_strquestinfo();
  inline void set_has_striteminfo();
  inline void clear_has_striteminfo();
  inline void set_has_strfriendinfo();
  inline void clear_has_strfriendinfo();
  inline void set_has_strmailinfo();
  inline void clear_has_strmailinfo();
  inline void set_has_strreserved1();
  inline void clear_has_strreserved1();
  inline void set_has_strreserved2();
  inline void clear_has_strreserved2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 uiseq_;
  ::std::string* strbaseinfo_;
  ::std::string* strquestinfo_;
  ::std::string* striteminfo_;
  ::std::string* strfriendinfo_;
  ::std::string* strmailinfo_;
  ::std::string* strreserved1_;
  ::std::string* strreserved2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static GameUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class WeaponInfo : public ::google::protobuf::Message {
 public:
  WeaponInfo();
  virtual ~WeaponInfo();

  WeaponInfo(const WeaponInfo& from);

  inline WeaponInfo& operator=(const WeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponInfo& default_instance();

  void Swap(WeaponInfo* other);

  // implements Message ----------------------------------------------

  WeaponInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeaponInfo& from);
  void MergeFrom(const WeaponInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWeaponID = 1;
  inline bool has_iweaponid() const;
  inline void clear_iweaponid();
  static const int kIWeaponIDFieldNumber = 1;
  inline ::google::protobuf::int32 iweaponid() const;
  inline void set_iweaponid(::google::protobuf::int32 value);

  // optional int32 iWeaponStyleID = 2;
  inline bool has_iweaponstyleid() const;
  inline void clear_iweaponstyleid();
  static const int kIWeaponStyleIDFieldNumber = 2;
  inline ::google::protobuf::int32 iweaponstyleid() const;
  inline void set_iweaponstyleid(::google::protobuf::int32 value);

  // repeated int32 iUnlockStyleIDs = 3;
  inline int iunlockstyleids_size() const;
  inline void clear_iunlockstyleids();
  static const int kIUnlockStyleIDsFieldNumber = 3;
  inline ::google::protobuf::int32 iunlockstyleids(int index) const;
  inline void set_iunlockstyleids(int index, ::google::protobuf::int32 value);
  inline void add_iunlockstyleids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      iunlockstyleids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_iunlockstyleids();

  // @@protoc_insertion_point(class_scope:WeaponInfo)
 private:
  inline void set_has_iweaponid();
  inline void clear_has_iweaponid();
  inline void set_has_iweaponstyleid();
  inline void clear_has_iweaponstyleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iweaponid_;
  ::google::protobuf::int32 iweaponstyleid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > iunlockstyleids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static WeaponInfo* default_instance_;
};
// -------------------------------------------------------------------

class ExpLineInfo : public ::google::protobuf::Message {
 public:
  ExpLineInfo();
  virtual ~ExpLineInfo();

  ExpLineInfo(const ExpLineInfo& from);

  inline ExpLineInfo& operator=(const ExpLineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpLineInfo& default_instance();

  void Swap(ExpLineInfo* other);

  // implements Message ----------------------------------------------

  ExpLineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpLineInfo& from);
  void MergeFrom(const ExpLineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iExpLineID = 1;
  inline bool has_iexplineid() const;
  inline void clear_iexplineid();
  static const int kIExpLineIDFieldNumber = 1;
  inline ::google::protobuf::int32 iexplineid() const;
  inline void set_iexplineid(::google::protobuf::int32 value);

  // optional int32 iExpLineType = 2;
  inline bool has_iexplinetype() const;
  inline void clear_iexplinetype();
  static const int kIExpLineTypeFieldNumber = 2;
  inline ::google::protobuf::int32 iexplinetype() const;
  inline void set_iexplinetype(::google::protobuf::int32 value);

  // optional int64 lUserWinNum = 3;
  inline bool has_luserwinnum() const;
  inline void clear_luserwinnum();
  static const int kLUserWinNumFieldNumber = 3;
  inline ::google::protobuf::int64 luserwinnum() const;
  inline void set_luserwinnum(::google::protobuf::int64 value);

  // optional int32 iBulletNum = 4;
  inline bool has_ibulletnum() const;
  inline void clear_ibulletnum();
  static const int kIBulletNumFieldNumber = 4;
  inline ::google::protobuf::int32 ibulletnum() const;
  inline void set_ibulletnum(::google::protobuf::int32 value);

  // optional int64 lUserCostNum = 5;
  inline bool has_lusercostnum() const;
  inline void clear_lusercostnum();
  static const int kLUserCostNumFieldNumber = 5;
  inline ::google::protobuf::int64 lusercostnum() const;
  inline void set_lusercostnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ExpLineInfo)
 private:
  inline void set_has_iexplineid();
  inline void clear_has_iexplineid();
  inline void set_has_iexplinetype();
  inline void clear_has_iexplinetype();
  inline void set_has_luserwinnum();
  inline void clear_has_luserwinnum();
  inline void set_has_ibulletnum();
  inline void clear_has_ibulletnum();
  inline void set_has_lusercostnum();
  inline void clear_has_lusercostnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iexplineid_;
  ::google::protobuf::int32 iexplinetype_;
  ::google::protobuf::int64 luserwinnum_;
  ::google::protobuf::int64 lusercostnum_;
  ::google::protobuf::int32 ibulletnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static ExpLineInfo* default_instance_;
};
// -------------------------------------------------------------------

class BASEDBINFO : public ::google::protobuf::Message {
 public:
  BASEDBINFO();
  virtual ~BASEDBINFO();

  BASEDBINFO(const BASEDBINFO& from);

  inline BASEDBINFO& operator=(const BASEDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BASEDBINFO& default_instance();

  void Swap(BASEDBINFO* other);

  // implements Message ----------------------------------------------

  BASEDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BASEDBINFO& from);
  void MergeFrom(const BASEDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes szNickName = 1;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 1;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const void* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // repeated int64 iResources = 2;
  inline int iresources_size() const;
  inline void clear_iresources();
  static const int kIResourcesFieldNumber = 2;
  inline ::google::protobuf::int64 iresources(int index) const;
  inline void set_iresources(int index, ::google::protobuf::int64 value);
  inline void add_iresources(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      iresources() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_iresources();

  // optional uint32 uStatus = 3;
  inline bool has_ustatus() const;
  inline void clear_ustatus();
  static const int kUStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 ustatus() const;
  inline void set_ustatus(::google::protobuf::uint32 value);

  // optional int32 iLastLogin = 4;
  inline bool has_ilastlogin() const;
  inline void clear_ilastlogin();
  static const int kILastLoginFieldNumber = 4;
  inline ::google::protobuf::int32 ilastlogin() const;
  inline void set_ilastlogin(::google::protobuf::int32 value);

  // optional int32 iLastLogout = 5;
  inline bool has_ilastlogout() const;
  inline void clear_ilastlogout();
  static const int kILastLogoutFieldNumber = 5;
  inline ::google::protobuf::int32 ilastlogout() const;
  inline void set_ilastlogout(::google::protobuf::int32 value);

  // optional int32 iCreateTime = 6;
  inline bool has_icreatetime() const;
  inline void clear_icreatetime();
  static const int kICreateTimeFieldNumber = 6;
  inline ::google::protobuf::int32 icreatetime() const;
  inline void set_icreatetime(::google::protobuf::int32 value);

  // optional int32 iOnlineTime = 7;
  inline bool has_ionlinetime() const;
  inline void clear_ionlinetime();
  static const int kIOnlineTimeFieldNumber = 7;
  inline ::google::protobuf::int32 ionlinetime() const;
  inline void set_ionlinetime(::google::protobuf::int32 value);

  // optional int32 iLoginCount = 8;
  inline bool has_ilogincount() const;
  inline void clear_ilogincount();
  static const int kILoginCountFieldNumber = 8;
  inline ::google::protobuf::int32 ilogincount() const;
  inline void set_ilogincount(::google::protobuf::int32 value);

  // optional int32 iLoginTime = 9;
  inline bool has_ilogintime() const;
  inline void clear_ilogintime();
  static const int kILoginTimeFieldNumber = 9;
  inline ::google::protobuf::int32 ilogintime() const;
  inline void set_ilogintime(::google::protobuf::int32 value);

  // optional int32 iLogoutTime = 10;
  inline bool has_ilogouttime() const;
  inline void clear_ilogouttime();
  static const int kILogoutTimeFieldNumber = 10;
  inline ::google::protobuf::int32 ilogouttime() const;
  inline void set_ilogouttime(::google::protobuf::int32 value);

  // optional .WeaponInfo stWeapon = 11;
  inline bool has_stweapon() const;
  inline void clear_stweapon();
  static const int kStWeaponFieldNumber = 11;
  inline const ::WeaponInfo& stweapon() const;
  inline ::WeaponInfo* mutable_stweapon();
  inline ::WeaponInfo* release_stweapon();
  inline void set_allocated_stweapon(::WeaponInfo* stweapon);

  // optional int32 iLotteryNum = 13;
  inline bool has_ilotterynum() const;
  inline void clear_ilotterynum();
  static const int kILotteryNumFieldNumber = 13;
  inline ::google::protobuf::int32 ilotterynum() const;
  inline void set_ilotterynum(::google::protobuf::int32 value);

  // repeated .ExpLineInfo stExpLines = 14;
  inline int stexplines_size() const;
  inline void clear_stexplines();
  static const int kStExpLinesFieldNumber = 14;
  inline const ::ExpLineInfo& stexplines(int index) const;
  inline ::ExpLineInfo* mutable_stexplines(int index);
  inline ::ExpLineInfo* add_stexplines();
  inline const ::google::protobuf::RepeatedPtrField< ::ExpLineInfo >&
      stexplines() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExpLineInfo >*
      mutable_stexplines();

  // optional int32 iLastScoreUpdate = 15;
  inline bool has_ilastscoreupdate() const;
  inline void clear_ilastscoreupdate();
  static const int kILastScoreUpdateFieldNumber = 15;
  inline ::google::protobuf::int32 ilastscoreupdate() const;
  inline void set_ilastscoreupdate(::google::protobuf::int32 value);

  // optional int64 iDayScore = 16;
  inline bool has_idayscore() const;
  inline void clear_idayscore();
  static const int kIDayScoreFieldNumber = 16;
  inline ::google::protobuf::int64 idayscore() const;
  inline void set_idayscore(::google::protobuf::int64 value);

  // optional int64 iWeekScore = 17;
  inline bool has_iweekscore() const;
  inline void clear_iweekscore();
  static const int kIWeekScoreFieldNumber = 17;
  inline ::google::protobuf::int64 iweekscore() const;
  inline void set_iweekscore(::google::protobuf::int64 value);

  // optional int32 iVIPLevel = 18;
  inline bool has_iviplevel() const;
  inline void clear_iviplevel();
  static const int kIVIPLevelFieldNumber = 18;
  inline ::google::protobuf::int32 iviplevel() const;
  inline void set_iviplevel(::google::protobuf::int32 value);

  // optional int64 lVIPExp = 19;
  inline bool has_lvipexp() const;
  inline void clear_lvipexp();
  static const int kLVIPExpFieldNumber = 19;
  inline ::google::protobuf::int64 lvipexp() const;
  inline void set_lvipexp(::google::protobuf::int64 value);

  // optional int32 iVIPPriv = 20;
  inline bool has_ivippriv() const;
  inline void clear_ivippriv();
  static const int kIVIPPrivFieldNumber = 20;
  inline ::google::protobuf::int32 ivippriv() const;
  inline void set_ivippriv(::google::protobuf::int32 value);

  // optional int32 iNextAlmsTime = 21;
  inline bool has_inextalmstime() const;
  inline void clear_inextalmstime();
  static const int kINextAlmsTimeFieldNumber = 21;
  inline ::google::protobuf::int32 inextalmstime() const;
  inline void set_inextalmstime(::google::protobuf::int32 value);

  // optional int32 iAlmsNum = 22;
  inline bool has_ialmsnum() const;
  inline void clear_ialmsnum();
  static const int kIAlmsNumFieldNumber = 22;
  inline ::google::protobuf::int32 ialmsnum() const;
  inline void set_ialmsnum(::google::protobuf::int32 value);

  // optional int32 iLastAlmsUpdateTime = 23;
  inline bool has_ilastalmsupdatetime() const;
  inline void clear_ilastalmsupdatetime();
  static const int kILastAlmsUpdateTimeFieldNumber = 23;
  inline ::google::protobuf::int32 ilastalmsupdatetime() const;
  inline void set_ilastalmsupdatetime(::google::protobuf::int32 value);

  // repeated int32 iRechargeLotteryIDs = 24;
  inline int irechargelotteryids_size() const;
  inline void clear_irechargelotteryids();
  static const int kIRechargeLotteryIDsFieldNumber = 24;
  inline ::google::protobuf::int32 irechargelotteryids(int index) const;
  inline void set_irechargelotteryids(int index, ::google::protobuf::int32 value);
  inline void add_irechargelotteryids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      irechargelotteryids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_irechargelotteryids();

  // optional int32 iLoginDays = 25;
  inline bool has_ilogindays() const;
  inline void clear_ilogindays();
  static const int kILoginDaysFieldNumber = 25;
  inline ::google::protobuf::int32 ilogindays() const;
  inline void set_ilogindays(::google::protobuf::int32 value);

  // optional int32 iGetLoginReward = 26;
  inline bool has_igetloginreward() const;
  inline void clear_igetloginreward();
  static const int kIGetLoginRewardFieldNumber = 26;
  inline ::google::protobuf::int32 igetloginreward() const;
  inline void set_igetloginreward(::google::protobuf::int32 value);

  // optional int32 iRemainNewRedNum = 27;
  inline bool has_iremainnewrednum() const;
  inline void clear_iremainnewrednum();
  static const int kIRemainNewRedNumFieldNumber = 27;
  inline ::google::protobuf::int32 iremainnewrednum() const;
  inline void set_iremainnewrednum(::google::protobuf::int32 value);

  // optional int32 iNowNewRedNum = 28;
  inline bool has_inownewrednum() const;
  inline void clear_inownewrednum();
  static const int kINowNewRedNumFieldNumber = 28;
  inline ::google::protobuf::int32 inownewrednum() const;
  inline void set_inownewrednum(::google::protobuf::int32 value);

  // optional int32 iMonthEndTime = 29;
  inline bool has_imonthendtime() const;
  inline void clear_imonthendtime();
  static const int kIMonthEndTimeFieldNumber = 29;
  inline ::google::protobuf::int32 imonthendtime() const;
  inline void set_imonthendtime(::google::protobuf::int32 value);

  // optional int32 iLastGetMonthTime = 30;
  inline bool has_ilastgetmonthtime() const;
  inline void clear_ilastgetmonthtime();
  static const int kILastGetMonthTimeFieldNumber = 30;
  inline ::google::protobuf::int32 ilastgetmonthtime() const;
  inline void set_ilastgetmonthtime(::google::protobuf::int32 value);

  // optional string strChannel = 31;
  inline bool has_strchannel() const;
  inline void clear_strchannel();
  static const int kStrChannelFieldNumber = 31;
  inline const ::std::string& strchannel() const;
  inline void set_strchannel(const ::std::string& value);
  inline void set_strchannel(const char* value);
  inline void set_strchannel(const char* value, size_t size);
  inline ::std::string* mutable_strchannel();
  inline ::std::string* release_strchannel();
  inline void set_allocated_strchannel(::std::string* strchannel);

  // optional string strPicID = 32;
  inline bool has_strpicid() const;
  inline void clear_strpicid();
  static const int kStrPicIDFieldNumber = 32;
  inline const ::std::string& strpicid() const;
  inline void set_strpicid(const ::std::string& value);
  inline void set_strpicid(const char* value);
  inline void set_strpicid(const char* value, size_t size);
  inline ::std::string* mutable_strpicid();
  inline ::std::string* release_strpicid();
  inline void set_allocated_strpicid(::std::string* strpicid);

  // optional bool bUpdateRank = 33;
  inline bool has_bupdaterank() const;
  inline void clear_bupdaterank();
  static const int kBUpdateRankFieldNumber = 33;
  inline bool bupdaterank() const;
  inline void set_bupdaterank(bool value);

  // optional bool bGetVIPCoins = 34;
  inline bool has_bgetvipcoins() const;
  inline void clear_bgetvipcoins();
  static const int kBGetVIPCoinsFieldNumber = 34;
  inline bool bgetvipcoins() const;
  inline void set_bgetvipcoins(bool value);

  // optional int32 iDayOnlineTime = 35;
  inline bool has_idayonlinetime() const;
  inline void clear_idayonlinetime();
  static const int kIDayOnlineTimeFieldNumber = 35;
  inline ::google::protobuf::int32 idayonlinetime() const;
  inline void set_idayonlinetime(::google::protobuf::int32 value);

  // optional int32 iLastOnlineUpdate = 36;
  inline bool has_ilastonlineupdate() const;
  inline void clear_ilastonlineupdate();
  static const int kILastOnlineUpdateFieldNumber = 36;
  inline ::google::protobuf::int32 ilastonlineupdate() const;
  inline void set_ilastonlineupdate(::google::protobuf::int32 value);

  // optional uint32 uFinGuideIndexes = 37;
  inline bool has_ufinguideindexes() const;
  inline void clear_ufinguideindexes();
  static const int kUFinGuideIndexesFieldNumber = 37;
  inline ::google::protobuf::uint32 ufinguideindexes() const;
  inline void set_ufinguideindexes(::google::protobuf::uint32 value);

  // optional bool bNameChanged = 38;
  inline bool has_bnamechanged() const;
  inline void clear_bnamechanged();
  static const int kBNameChangedFieldNumber = 38;
  inline bool bnamechanged() const;
  inline void set_bnamechanged(bool value);

  // optional int64 lUserWinNum = 39;
  inline bool has_luserwinnum() const;
  inline void clear_luserwinnum();
  static const int kLUserWinNumFieldNumber = 39;
  inline ::google::protobuf::int64 luserwinnum() const;
  inline void set_luserwinnum(::google::protobuf::int64 value);

  // optional string strSign = 40;
  inline bool has_strsign() const;
  inline void clear_strsign();
  static const int kStrSignFieldNumber = 40;
  inline const ::std::string& strsign() const;
  inline void set_strsign(const ::std::string& value);
  inline void set_strsign(const char* value);
  inline void set_strsign(const char* value, size_t size);
  inline ::std::string* mutable_strsign();
  inline ::std::string* release_strsign();
  inline void set_allocated_strsign(::std::string* strsign);

  // @@protoc_insertion_point(class_scope:BASEDBINFO)
 private:
  inline void set_has_sznickname();
  inline void clear_has_sznickname();
  inline void set_has_ustatus();
  inline void clear_has_ustatus();
  inline void set_has_ilastlogin();
  inline void clear_has_ilastlogin();
  inline void set_has_ilastlogout();
  inline void clear_has_ilastlogout();
  inline void set_has_icreatetime();
  inline void clear_has_icreatetime();
  inline void set_has_ionlinetime();
  inline void clear_has_ionlinetime();
  inline void set_has_ilogincount();
  inline void clear_has_ilogincount();
  inline void set_has_ilogintime();
  inline void clear_has_ilogintime();
  inline void set_has_ilogouttime();
  inline void clear_has_ilogouttime();
  inline void set_has_stweapon();
  inline void clear_has_stweapon();
  inline void set_has_ilotterynum();
  inline void clear_has_ilotterynum();
  inline void set_has_ilastscoreupdate();
  inline void clear_has_ilastscoreupdate();
  inline void set_has_idayscore();
  inline void clear_has_idayscore();
  inline void set_has_iweekscore();
  inline void clear_has_iweekscore();
  inline void set_has_iviplevel();
  inline void clear_has_iviplevel();
  inline void set_has_lvipexp();
  inline void clear_has_lvipexp();
  inline void set_has_ivippriv();
  inline void clear_has_ivippriv();
  inline void set_has_inextalmstime();
  inline void clear_has_inextalmstime();
  inline void set_has_ialmsnum();
  inline void clear_has_ialmsnum();
  inline void set_has_ilastalmsupdatetime();
  inline void clear_has_ilastalmsupdatetime();
  inline void set_has_ilogindays();
  inline void clear_has_ilogindays();
  inline void set_has_igetloginreward();
  inline void clear_has_igetloginreward();
  inline void set_has_iremainnewrednum();
  inline void clear_has_iremainnewrednum();
  inline void set_has_inownewrednum();
  inline void clear_has_inownewrednum();
  inline void set_has_imonthendtime();
  inline void clear_has_imonthendtime();
  inline void set_has_ilastgetmonthtime();
  inline void clear_has_ilastgetmonthtime();
  inline void set_has_strchannel();
  inline void clear_has_strchannel();
  inline void set_has_strpicid();
  inline void clear_has_strpicid();
  inline void set_has_bupdaterank();
  inline void clear_has_bupdaterank();
  inline void set_has_bgetvipcoins();
  inline void clear_has_bgetvipcoins();
  inline void set_has_idayonlinetime();
  inline void clear_has_idayonlinetime();
  inline void set_has_ilastonlineupdate();
  inline void clear_has_ilastonlineupdate();
  inline void set_has_ufinguideindexes();
  inline void clear_has_ufinguideindexes();
  inline void set_has_bnamechanged();
  inline void clear_has_bnamechanged();
  inline void set_has_luserwinnum();
  inline void clear_has_luserwinnum();
  inline void set_has_strsign();
  inline void clear_has_strsign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sznickname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > iresources_;
  ::google::protobuf::uint32 ustatus_;
  ::google::protobuf::int32 ilastlogin_;
  ::google::protobuf::int32 ilastlogout_;
  ::google::protobuf::int32 icreatetime_;
  ::google::protobuf::int32 ionlinetime_;
  ::google::protobuf::int32 ilogincount_;
  ::google::protobuf::int32 ilogintime_;
  ::google::protobuf::int32 ilogouttime_;
  ::WeaponInfo* stweapon_;
  ::google::protobuf::int32 ilotterynum_;
  ::google::protobuf::int32 ilastscoreupdate_;
  ::google::protobuf::RepeatedPtrField< ::ExpLineInfo > stexplines_;
  ::google::protobuf::int64 idayscore_;
  ::google::protobuf::int64 iweekscore_;
  ::google::protobuf::int64 lvipexp_;
  ::google::protobuf::int32 iviplevel_;
  ::google::protobuf::int32 ivippriv_;
  ::google::protobuf::int32 inextalmstime_;
  ::google::protobuf::int32 ialmsnum_;
  ::google::protobuf::int32 ilastalmsupdatetime_;
  ::google::protobuf::int32 ilogindays_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > irechargelotteryids_;
  ::google::protobuf::int32 igetloginreward_;
  ::google::protobuf::int32 iremainnewrednum_;
  ::google::protobuf::int32 inownewrednum_;
  ::google::protobuf::int32 imonthendtime_;
  ::std::string* strchannel_;
  ::std::string* strpicid_;
  ::google::protobuf::int32 ilastgetmonthtime_;
  ::google::protobuf::int32 idayonlinetime_;
  bool bupdaterank_;
  bool bgetvipcoins_;
  bool bnamechanged_;
  ::google::protobuf::int32 ilastonlineupdate_;
  ::google::protobuf::int64 luserwinnum_;
  ::std::string* strsign_;
  ::google::protobuf::uint32 ufinguideindexes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(39 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static BASEDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class OneQuest : public ::google::protobuf::Message {
 public:
  OneQuest();
  virtual ~OneQuest();

  OneQuest(const OneQuest& from);

  inline OneQuest& operator=(const OneQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneQuest& default_instance();

  void Swap(OneQuest* other);

  // implements Message ----------------------------------------------

  OneQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneQuest& from);
  void MergeFrom(const OneQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iQuestID = 1;
  inline bool has_iquestid() const;
  inline void clear_iquestid();
  static const int kIQuestIDFieldNumber = 1;
  inline ::google::protobuf::int32 iquestid() const;
  inline void set_iquestid(::google::protobuf::int32 value);

  // optional int32 iQuestType = 2;
  inline bool has_iquesttype() const;
  inline void clear_iquesttype();
  static const int kIQuestTypeFieldNumber = 2;
  inline ::google::protobuf::int32 iquesttype() const;
  inline void set_iquesttype(::google::protobuf::int32 value);

  // optional int32 iNeedType = 3;
  inline bool has_ineedtype() const;
  inline void clear_ineedtype();
  static const int kINeedTypeFieldNumber = 3;
  inline ::google::protobuf::int32 ineedtype() const;
  inline void set_ineedtype(::google::protobuf::int32 value);

  // optional int64 iNum = 4;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 4;
  inline ::google::protobuf::int64 inum() const;
  inline void set_inum(::google::protobuf::int64 value);

  // optional bool bIsFin = 5;
  inline bool has_bisfin() const;
  inline void clear_bisfin();
  static const int kBIsFinFieldNumber = 5;
  inline bool bisfin() const;
  inline void set_bisfin(bool value);

  // @@protoc_insertion_point(class_scope:OneQuest)
 private:
  inline void set_has_iquestid();
  inline void clear_has_iquestid();
  inline void set_has_iquesttype();
  inline void clear_has_iquesttype();
  inline void set_has_ineedtype();
  inline void clear_has_ineedtype();
  inline void set_has_inum();
  inline void clear_has_inum();
  inline void set_has_bisfin();
  inline void clear_has_bisfin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iquestid_;
  ::google::protobuf::int32 iquesttype_;
  ::google::protobuf::int64 inum_;
  ::google::protobuf::int32 ineedtype_;
  bool bisfin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static OneQuest* default_instance_;
};
// -------------------------------------------------------------------

class QUESTDBINFO : public ::google::protobuf::Message {
 public:
  QUESTDBINFO();
  virtual ~QUESTDBINFO();

  QUESTDBINFO(const QUESTDBINFO& from);

  inline QUESTDBINFO& operator=(const QUESTDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QUESTDBINFO& default_instance();

  void Swap(QUESTDBINFO* other);

  // implements Message ----------------------------------------------

  QUESTDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QUESTDBINFO& from);
  void MergeFrom(const QUESTDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneQuest stQuestInfos = 1;
  inline int stquestinfos_size() const;
  inline void clear_stquestinfos();
  static const int kStQuestInfosFieldNumber = 1;
  inline const ::OneQuest& stquestinfos(int index) const;
  inline ::OneQuest* mutable_stquestinfos(int index);
  inline ::OneQuest* add_stquestinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::OneQuest >&
      stquestinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneQuest >*
      mutable_stquestinfos();

  // optional int32 iAdventureEndTime = 2;
  inline bool has_iadventureendtime() const;
  inline void clear_iadventureendtime();
  static const int kIAdventureEndTimeFieldNumber = 2;
  inline ::google::protobuf::int32 iadventureendtime() const;
  inline void set_iadventureendtime(::google::protobuf::int32 value);

  // optional int32 iAdventureNum = 3;
  inline bool has_iadventurenum() const;
  inline void clear_iadventurenum();
  static const int kIAdventureNumFieldNumber = 3;
  inline ::google::protobuf::int32 iadventurenum() const;
  inline void set_iadventurenum(::google::protobuf::int32 value);

  // optional int32 iDailyNextUpdateTime = 4;
  inline bool has_idailynextupdatetime() const;
  inline void clear_idailynextupdatetime();
  static const int kIDailyNextUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::int32 idailynextupdatetime() const;
  inline void set_idailynextupdatetime(::google::protobuf::int32 value);

  // optional int32 iAdventNextUpdateTime = 5;
  inline bool has_iadventnextupdatetime() const;
  inline void clear_iadventnextupdatetime();
  static const int kIAdventNextUpdateTimeFieldNumber = 5;
  inline ::google::protobuf::int32 iadventnextupdatetime() const;
  inline void set_iadventnextupdatetime(::google::protobuf::int32 value);

  // optional int32 iAdventUserCost = 6;
  inline bool has_iadventusercost() const;
  inline void clear_iadventusercost();
  static const int kIAdventUserCostFieldNumber = 6;
  inline ::google::protobuf::int32 iadventusercost() const;
  inline void set_iadventusercost(::google::protobuf::int32 value);

  // optional int32 iAdventShootNum = 7;
  inline bool has_iadventshootnum() const;
  inline void clear_iadventshootnum();
  static const int kIAdventShootNumFieldNumber = 7;
  inline ::google::protobuf::int32 iadventshootnum() const;
  inline void set_iadventshootnum(::google::protobuf::int32 value);

  // repeated int32 iGetLiveRewardIDs = 8;
  inline int igetliverewardids_size() const;
  inline void clear_igetliverewardids();
  static const int kIGetLiveRewardIDsFieldNumber = 8;
  inline ::google::protobuf::int32 igetliverewardids(int index) const;
  inline void set_igetliverewardids(int index, ::google::protobuf::int32 value);
  inline void add_igetliverewardids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      igetliverewardids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_igetliverewardids();

  // @@protoc_insertion_point(class_scope:QUESTDBINFO)
 private:
  inline void set_has_iadventureendtime();
  inline void clear_has_iadventureendtime();
  inline void set_has_iadventurenum();
  inline void clear_has_iadventurenum();
  inline void set_has_idailynextupdatetime();
  inline void clear_has_idailynextupdatetime();
  inline void set_has_iadventnextupdatetime();
  inline void clear_has_iadventnextupdatetime();
  inline void set_has_iadventusercost();
  inline void clear_has_iadventusercost();
  inline void set_has_iadventshootnum();
  inline void clear_has_iadventshootnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneQuest > stquestinfos_;
  ::google::protobuf::int32 iadventureendtime_;
  ::google::protobuf::int32 iadventurenum_;
  ::google::protobuf::int32 idailynextupdatetime_;
  ::google::protobuf::int32 iadventnextupdatetime_;
  ::google::protobuf::int32 iadventusercost_;
  ::google::protobuf::int32 iadventshootnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > igetliverewardids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static QUESTDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class OneSlotInfo : public ::google::protobuf::Message {
 public:
  OneSlotInfo();
  virtual ~OneSlotInfo();

  OneSlotInfo(const OneSlotInfo& from);

  inline OneSlotInfo& operator=(const OneSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneSlotInfo& default_instance();

  void Swap(OneSlotInfo* other);

  // implements Message ----------------------------------------------

  OneSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneSlotInfo& from);
  void MergeFrom(const OneSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iItemID = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // optional int32 iItemNum = 2;
  inline bool has_iitemnum() const;
  inline void clear_iitemnum();
  static const int kIItemNumFieldNumber = 2;
  inline ::google::protobuf::int32 iitemnum() const;
  inline void set_iitemnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OneSlotInfo)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_iitemnum();
  inline void clear_has_iitemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 iitemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static OneSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemSlotInfo : public ::google::protobuf::Message {
 public:
  ItemSlotInfo();
  virtual ~ItemSlotInfo();

  ItemSlotInfo(const ItemSlotInfo& from);

  inline ItemSlotInfo& operator=(const ItemSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSlotInfo& default_instance();

  void Swap(ItemSlotInfo* other);

  // implements Message ----------------------------------------------

  ItemSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSlotInfo& from);
  void MergeFrom(const ItemSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneSlotInfo stSlots = 1;
  inline int stslots_size() const;
  inline void clear_stslots();
  static const int kStSlotsFieldNumber = 1;
  inline const ::OneSlotInfo& stslots(int index) const;
  inline ::OneSlotInfo* mutable_stslots(int index);
  inline ::OneSlotInfo* add_stslots();
  inline const ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >&
      stslots() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >*
      mutable_stslots();

  // @@protoc_insertion_point(class_scope:ItemSlotInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneSlotInfo > stslots_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static ItemSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class ITEMDBINFO : public ::google::protobuf::Message {
 public:
  ITEMDBINFO();
  virtual ~ITEMDBINFO();

  ITEMDBINFO(const ITEMDBINFO& from);

  inline ITEMDBINFO& operator=(const ITEMDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ITEMDBINFO& default_instance();

  void Swap(ITEMDBINFO* other);

  // implements Message ----------------------------------------------

  ITEMDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ITEMDBINFO& from);
  void MergeFrom(const ITEMDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ItemSlotInfo stItemSlot = 1;
  inline bool has_stitemslot() const;
  inline void clear_stitemslot();
  static const int kStItemSlotFieldNumber = 1;
  inline const ::ItemSlotInfo& stitemslot() const;
  inline ::ItemSlotInfo* mutable_stitemslot();
  inline ::ItemSlotInfo* release_stitemslot();
  inline void set_allocated_stitemslot(::ItemSlotInfo* stitemslot);

  // @@protoc_insertion_point(class_scope:ITEMDBINFO)
 private:
  inline void set_has_stitemslot();
  inline void clear_has_stitemslot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ItemSlotInfo* stitemslot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static ITEMDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class FRIENDDBINFO : public ::google::protobuf::Message {
 public:
  FRIENDDBINFO();
  virtual ~FRIENDDBINFO();

  FRIENDDBINFO(const FRIENDDBINFO& from);

  inline FRIENDDBINFO& operator=(const FRIENDDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FRIENDDBINFO& default_instance();

  void Swap(FRIENDDBINFO* other);

  // implements Message ----------------------------------------------

  FRIENDDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FRIENDDBINFO& from);
  void MergeFrom(const FRIENDDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:FRIENDDBINFO)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static FRIENDDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class MailAppendix : public ::google::protobuf::Message {
 public:
  MailAppendix();
  virtual ~MailAppendix();

  MailAppendix(const MailAppendix& from);

  inline MailAppendix& operator=(const MailAppendix& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailAppendix& default_instance();

  void Swap(MailAppendix* other);

  // implements Message ----------------------------------------------

  MailAppendix* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailAppendix& from);
  void MergeFrom(const MailAppendix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iType = 1;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 1;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional int32 iID = 2;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIDFieldNumber = 2;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // optional int32 iNum = 3;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 3;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MailAppendix)
 private:
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_inum();
  inline void clear_has_inum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itype_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 inum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static MailAppendix* default_instance_;
};
// -------------------------------------------------------------------

class OneMailInfo : public ::google::protobuf::Message {
 public:
  OneMailInfo();
  virtual ~OneMailInfo();

  OneMailInfo(const OneMailInfo& from);

  inline OneMailInfo& operator=(const OneMailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneMailInfo& default_instance();

  void Swap(OneMailInfo* other);

  // implements Message ----------------------------------------------

  OneMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneMailInfo& from);
  void MergeFrom(const OneMailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uUniqID = 1;
  inline bool has_uuniqid() const;
  inline void clear_uuniqid();
  static const int kUUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uuniqid() const;
  inline void set_uuniqid(::google::protobuf::uint32 value);

  // optional int32 iMailID = 2;
  inline bool has_imailid() const;
  inline void clear_imailid();
  static const int kIMailIDFieldNumber = 2;
  inline ::google::protobuf::int32 imailid() const;
  inline void set_imailid(::google::protobuf::int32 value);

  // optional int32 iSendTime = 3;
  inline bool has_isendtime() const;
  inline void clear_isendtime();
  static const int kISendTimeFieldNumber = 3;
  inline ::google::protobuf::int32 isendtime() const;
  inline void set_isendtime(::google::protobuf::int32 value);

  // optional int32 iMailStat = 4;
  inline bool has_imailstat() const;
  inline void clear_imailstat();
  static const int kIMailStatFieldNumber = 4;
  inline ::google::protobuf::int32 imailstat() const;
  inline void set_imailstat(::google::protobuf::int32 value);

  // optional bytes strTitle = 5;
  inline bool has_strtitle() const;
  inline void clear_strtitle();
  static const int kStrTitleFieldNumber = 5;
  inline const ::std::string& strtitle() const;
  inline void set_strtitle(const ::std::string& value);
  inline void set_strtitle(const char* value);
  inline void set_strtitle(const void* value, size_t size);
  inline ::std::string* mutable_strtitle();
  inline ::std::string* release_strtitle();
  inline void set_allocated_strtitle(::std::string* strtitle);

  // repeated bytes strParams = 6;
  inline int strparams_size() const;
  inline void clear_strparams();
  static const int kStrParamsFieldNumber = 6;
  inline const ::std::string& strparams(int index) const;
  inline ::std::string* mutable_strparams(int index);
  inline void set_strparams(int index, const ::std::string& value);
  inline void set_strparams(int index, const char* value);
  inline void set_strparams(int index, const void* value, size_t size);
  inline ::std::string* add_strparams();
  inline void add_strparams(const ::std::string& value);
  inline void add_strparams(const char* value);
  inline void add_strparams(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strparams();

  // repeated .MailAppendix stAppendixs = 7;
  inline int stappendixs_size() const;
  inline void clear_stappendixs();
  static const int kStAppendixsFieldNumber = 7;
  inline const ::MailAppendix& stappendixs(int index) const;
  inline ::MailAppendix* mutable_stappendixs(int index);
  inline ::MailAppendix* add_stappendixs();
  inline const ::google::protobuf::RepeatedPtrField< ::MailAppendix >&
      stappendixs() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailAppendix >*
      mutable_stappendixs();

  // @@protoc_insertion_point(class_scope:OneMailInfo)
 private:
  inline void set_has_uuniqid();
  inline void clear_has_uuniqid();
  inline void set_has_imailid();
  inline void clear_has_imailid();
  inline void set_has_isendtime();
  inline void clear_has_isendtime();
  inline void set_has_imailstat();
  inline void clear_has_imailstat();
  inline void set_has_strtitle();
  inline void clear_has_strtitle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uuniqid_;
  ::google::protobuf::int32 imailid_;
  ::google::protobuf::int32 isendtime_;
  ::google::protobuf::int32 imailstat_;
  ::std::string* strtitle_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strparams_;
  ::google::protobuf::RepeatedPtrField< ::MailAppendix > stappendixs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static OneMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class MAILDBINFO : public ::google::protobuf::Message {
 public:
  MAILDBINFO();
  virtual ~MAILDBINFO();

  MAILDBINFO(const MAILDBINFO& from);

  inline MAILDBINFO& operator=(const MAILDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MAILDBINFO& default_instance();

  void Swap(MAILDBINFO* other);

  // implements Message ----------------------------------------------

  MAILDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MAILDBINFO& from);
  void MergeFrom(const MAILDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uSystemMaxID = 1;
  inline bool has_usystemmaxid() const;
  inline void clear_usystemmaxid();
  static const int kUSystemMaxIDFieldNumber = 1;
  inline ::google::protobuf::uint32 usystemmaxid() const;
  inline void set_usystemmaxid(::google::protobuf::uint32 value);

  // optional uint32 uPersonalMaxID = 2;
  inline bool has_upersonalmaxid() const;
  inline void clear_upersonalmaxid();
  static const int kUPersonalMaxIDFieldNumber = 2;
  inline ::google::protobuf::uint32 upersonalmaxid() const;
  inline void set_upersonalmaxid(::google::protobuf::uint32 value);

  // repeated .OneMailInfo stMails = 3;
  inline int stmails_size() const;
  inline void clear_stmails();
  static const int kStMailsFieldNumber = 3;
  inline const ::OneMailInfo& stmails(int index) const;
  inline ::OneMailInfo* mutable_stmails(int index);
  inline ::OneMailInfo* add_stmails();
  inline const ::google::protobuf::RepeatedPtrField< ::OneMailInfo >&
      stmails() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneMailInfo >*
      mutable_stmails();

  // @@protoc_insertion_point(class_scope:MAILDBINFO)
 private:
  inline void set_has_usystemmaxid();
  inline void clear_has_usystemmaxid();
  inline void set_has_upersonalmaxid();
  inline void clear_has_upersonalmaxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 usystemmaxid_;
  ::google::protobuf::uint32 upersonalmaxid_;
  ::google::protobuf::RepeatedPtrField< ::OneMailInfo > stmails_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static MAILDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class PAYOFFLINEDBINFO : public ::google::protobuf::Message {
 public:
  PAYOFFLINEDBINFO();
  virtual ~PAYOFFLINEDBINFO();

  PAYOFFLINEDBINFO(const PAYOFFLINEDBINFO& from);

  inline PAYOFFLINEDBINFO& operator=(const PAYOFFLINEDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PAYOFFLINEDBINFO& default_instance();

  void Swap(PAYOFFLINEDBINFO* other);

  // implements Message ----------------------------------------------

  PAYOFFLINEDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PAYOFFLINEDBINFO& from);
  void MergeFrom(const PAYOFFLINEDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RechargeRecord stRecords = 1;
  inline int strecords_size() const;
  inline void clear_strecords();
  static const int kStRecordsFieldNumber = 1;
  inline const ::RechargeRecord& strecords(int index) const;
  inline ::RechargeRecord* mutable_strecords(int index);
  inline ::RechargeRecord* add_strecords();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeRecord >&
      strecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeRecord >*
      mutable_strecords();

  // @@protoc_insertion_point(class_scope:PAYOFFLINEDBINFO)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RechargeRecord > strecords_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static PAYOFFLINEDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class AddResInfo : public ::google::protobuf::Message {
 public:
  AddResInfo();
  virtual ~AddResInfo();

  AddResInfo(const AddResInfo& from);

  inline AddResInfo& operator=(const AddResInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddResInfo& default_instance();

  void Swap(AddResInfo* other);

  // implements Message ----------------------------------------------

  AddResInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddResInfo& from);
  void MergeFrom(const AddResInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResType = 1;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 1;
  inline ::google::protobuf::int32 irestype() const;
  inline void set_irestype(::google::protobuf::int32 value);

  // optional int32 iAddNum = 2;
  inline bool has_iaddnum() const;
  inline void clear_iaddnum();
  static const int kIAddNumFieldNumber = 2;
  inline ::google::protobuf::int32 iaddnum() const;
  inline void set_iaddnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AddResInfo)
 private:
  inline void set_has_irestype();
  inline void clear_has_irestype();
  inline void set_has_iaddnum();
  inline void clear_has_iaddnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irestype_;
  ::google::protobuf::int32 iaddnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static AddResInfo* default_instance_;
};
// -------------------------------------------------------------------

class RESOFFLINEDBINFO : public ::google::protobuf::Message {
 public:
  RESOFFLINEDBINFO();
  virtual ~RESOFFLINEDBINFO();

  RESOFFLINEDBINFO(const RESOFFLINEDBINFO& from);

  inline RESOFFLINEDBINFO& operator=(const RESOFFLINEDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RESOFFLINEDBINFO& default_instance();

  void Swap(RESOFFLINEDBINFO* other);

  // implements Message ----------------------------------------------

  RESOFFLINEDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RESOFFLINEDBINFO& from);
  void MergeFrom(const RESOFFLINEDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AddResInfo stAddRes = 1;
  inline int staddres_size() const;
  inline void clear_staddres();
  static const int kStAddResFieldNumber = 1;
  inline const ::AddResInfo& staddres(int index) const;
  inline ::AddResInfo* mutable_staddres(int index);
  inline ::AddResInfo* add_staddres();
  inline const ::google::protobuf::RepeatedPtrField< ::AddResInfo >&
      staddres() const;
  inline ::google::protobuf::RepeatedPtrField< ::AddResInfo >*
      mutable_staddres();

  // @@protoc_insertion_point(class_scope:RESOFFLINEDBINFO)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::AddResInfo > staddres_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static RESOFFLINEDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class MAILOFFLINEDBINFO : public ::google::protobuf::Message {
 public:
  MAILOFFLINEDBINFO();
  virtual ~MAILOFFLINEDBINFO();

  MAILOFFLINEDBINFO(const MAILOFFLINEDBINFO& from);

  inline MAILOFFLINEDBINFO& operator=(const MAILOFFLINEDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MAILOFFLINEDBINFO& default_instance();

  void Swap(MAILOFFLINEDBINFO* other);

  // implements Message ----------------------------------------------

  MAILOFFLINEDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MAILOFFLINEDBINFO& from);
  void MergeFrom(const MAILOFFLINEDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneMailInfo stMails = 1;
  inline int stmails_size() const;
  inline void clear_stmails();
  static const int kStMailsFieldNumber = 1;
  inline const ::OneMailInfo& stmails(int index) const;
  inline ::OneMailInfo* mutable_stmails(int index);
  inline ::OneMailInfo* add_stmails();
  inline const ::google::protobuf::RepeatedPtrField< ::OneMailInfo >&
      stmails() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneMailInfo >*
      mutable_stmails();

  // @@protoc_insertion_point(class_scope:MAILOFFLINEDBINFO)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneMailInfo > stmails_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static MAILOFFLINEDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class RESERVED1DBINFO : public ::google::protobuf::Message {
 public:
  RESERVED1DBINFO();
  virtual ~RESERVED1DBINFO();

  RESERVED1DBINFO(const RESERVED1DBINFO& from);

  inline RESERVED1DBINFO& operator=(const RESERVED1DBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RESERVED1DBINFO& default_instance();

  void Swap(RESERVED1DBINFO* other);

  // implements Message ----------------------------------------------

  RESERVED1DBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RESERVED1DBINFO& from);
  void MergeFrom(const RESERVED1DBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PAYOFFLINEDBINFO stPayInfo = 1;
  inline bool has_stpayinfo() const;
  inline void clear_stpayinfo();
  static const int kStPayInfoFieldNumber = 1;
  inline const ::PAYOFFLINEDBINFO& stpayinfo() const;
  inline ::PAYOFFLINEDBINFO* mutable_stpayinfo();
  inline ::PAYOFFLINEDBINFO* release_stpayinfo();
  inline void set_allocated_stpayinfo(::PAYOFFLINEDBINFO* stpayinfo);

  // optional .RESOFFLINEDBINFO stResInfo = 2;
  inline bool has_stresinfo() const;
  inline void clear_stresinfo();
  static const int kStResInfoFieldNumber = 2;
  inline const ::RESOFFLINEDBINFO& stresinfo() const;
  inline ::RESOFFLINEDBINFO* mutable_stresinfo();
  inline ::RESOFFLINEDBINFO* release_stresinfo();
  inline void set_allocated_stresinfo(::RESOFFLINEDBINFO* stresinfo);

  // optional .ItemSlotInfo stItemInfo = 3;
  inline bool has_stiteminfo() const;
  inline void clear_stiteminfo();
  static const int kStItemInfoFieldNumber = 3;
  inline const ::ItemSlotInfo& stiteminfo() const;
  inline ::ItemSlotInfo* mutable_stiteminfo();
  inline ::ItemSlotInfo* release_stiteminfo();
  inline void set_allocated_stiteminfo(::ItemSlotInfo* stiteminfo);

  // optional .MAILOFFLINEDBINFO stMailInfo = 4;
  inline bool has_stmailinfo() const;
  inline void clear_stmailinfo();
  static const int kStMailInfoFieldNumber = 4;
  inline const ::MAILOFFLINEDBINFO& stmailinfo() const;
  inline ::MAILOFFLINEDBINFO* mutable_stmailinfo();
  inline ::MAILOFFLINEDBINFO* release_stmailinfo();
  inline void set_allocated_stmailinfo(::MAILOFFLINEDBINFO* stmailinfo);

  // @@protoc_insertion_point(class_scope:RESERVED1DBINFO)
 private:
  inline void set_has_stpayinfo();
  inline void clear_has_stpayinfo();
  inline void set_has_stresinfo();
  inline void clear_has_stresinfo();
  inline void set_has_stiteminfo();
  inline void clear_has_stiteminfo();
  inline void set_has_stmailinfo();
  inline void clear_has_stmailinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PAYOFFLINEDBINFO* stpayinfo_;
  ::RESOFFLINEDBINFO* stresinfo_;
  ::ItemSlotInfo* stiteminfo_;
  ::MAILOFFLINEDBINFO* stmailinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static RESERVED1DBINFO* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeOrder : public ::google::protobuf::Message {
 public:
  ExchangeOrder();
  virtual ~ExchangeOrder();

  ExchangeOrder(const ExchangeOrder& from);

  inline ExchangeOrder& operator=(const ExchangeOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeOrder& default_instance();

  void Swap(ExchangeOrder* other);

  // implements Message ----------------------------------------------

  ExchangeOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeOrder& from);
  void MergeFrom(const ExchangeOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iExchangeID = 1;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 1;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // optional string strOrderID = 2;
  inline bool has_strorderid() const;
  inline void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  inline const ::std::string& strorderid() const;
  inline void set_strorderid(const ::std::string& value);
  inline void set_strorderid(const char* value);
  inline void set_strorderid(const char* value, size_t size);
  inline ::std::string* mutable_strorderid();
  inline ::std::string* release_strorderid();
  inline void set_allocated_strorderid(::std::string* strorderid);

  // optional string strPhone = 3;
  inline bool has_strphone() const;
  inline void clear_strphone();
  static const int kStrPhoneFieldNumber = 3;
  inline const ::std::string& strphone() const;
  inline void set_strphone(const ::std::string& value);
  inline void set_strphone(const char* value);
  inline void set_strphone(const char* value, size_t size);
  inline ::std::string* mutable_strphone();
  inline ::std::string* release_strphone();
  inline void set_allocated_strphone(::std::string* strphone);

  // optional int32 iExchangeTime = 4;
  inline bool has_iexchangetime() const;
  inline void clear_iexchangetime();
  static const int kIExchangeTimeFieldNumber = 4;
  inline ::google::protobuf::int32 iexchangetime() const;
  inline void set_iexchangetime(::google::protobuf::int32 value);

  // optional int32 iStat = 5;
  inline bool has_istat() const;
  inline void clear_istat();
  static const int kIStatFieldNumber = 5;
  inline ::google::protobuf::int32 istat() const;
  inline void set_istat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ExchangeOrder)
 private:
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();
  inline void set_has_strorderid();
  inline void clear_has_strorderid();
  inline void set_has_strphone();
  inline void clear_has_strphone();
  inline void set_has_iexchangetime();
  inline void clear_has_iexchangetime();
  inline void set_has_istat();
  inline void clear_has_istat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strorderid_;
  ::google::protobuf::int32 iexchangeid_;
  ::google::protobuf::int32 iexchangetime_;
  ::std::string* strphone_;
  ::google::protobuf::int32 istat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static ExchangeOrder* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeUser : public ::google::protobuf::Message {
 public:
  ExchangeUser();
  virtual ~ExchangeUser();

  ExchangeUser(const ExchangeUser& from);

  inline ExchangeUser& operator=(const ExchangeUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeUser& default_instance();

  void Swap(ExchangeUser* other);

  // implements Message ----------------------------------------------

  ExchangeUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeUser& from);
  void MergeFrom(const ExchangeUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // optional string strPhone = 2;
  inline bool has_strphone() const;
  inline void clear_strphone();
  static const int kStrPhoneFieldNumber = 2;
  inline const ::std::string& strphone() const;
  inline void set_strphone(const ::std::string& value);
  inline void set_strphone(const char* value);
  inline void set_strphone(const char* value, size_t size);
  inline ::std::string* mutable_strphone();
  inline ::std::string* release_strphone();
  inline void set_allocated_strphone(::std::string* strphone);

  // optional string strMailNum = 3;
  inline bool has_strmailnum() const;
  inline void clear_strmailnum();
  static const int kStrMailNumFieldNumber = 3;
  inline const ::std::string& strmailnum() const;
  inline void set_strmailnum(const ::std::string& value);
  inline void set_strmailnum(const char* value);
  inline void set_strmailnum(const char* value, size_t size);
  inline ::std::string* mutable_strmailnum();
  inline ::std::string* release_strmailnum();
  inline void set_allocated_strmailnum(::std::string* strmailnum);

  // optional string strAddress = 4;
  inline bool has_straddress() const;
  inline void clear_straddress();
  static const int kStrAddressFieldNumber = 4;
  inline const ::std::string& straddress() const;
  inline void set_straddress(const ::std::string& value);
  inline void set_straddress(const char* value);
  inline void set_straddress(const char* value, size_t size);
  inline ::std::string* mutable_straddress();
  inline ::std::string* release_straddress();
  inline void set_allocated_straddress(::std::string* straddress);

  // optional string strRemarks = 5;
  inline bool has_strremarks() const;
  inline void clear_strremarks();
  static const int kStrRemarksFieldNumber = 5;
  inline const ::std::string& strremarks() const;
  inline void set_strremarks(const ::std::string& value);
  inline void set_strremarks(const char* value);
  inline void set_strremarks(const char* value, size_t size);
  inline ::std::string* mutable_strremarks();
  inline ::std::string* release_strremarks();
  inline void set_allocated_strremarks(::std::string* strremarks);

  // optional string strQQNum = 6;
  inline bool has_strqqnum() const;
  inline void clear_strqqnum();
  static const int kStrQQNumFieldNumber = 6;
  inline const ::std::string& strqqnum() const;
  inline void set_strqqnum(const ::std::string& value);
  inline void set_strqqnum(const char* value);
  inline void set_strqqnum(const char* value, size_t size);
  inline ::std::string* mutable_strqqnum();
  inline ::std::string* release_strqqnum();
  inline void set_allocated_strqqnum(::std::string* strqqnum);

  // optional int32 iLastSetTime = 7;
  inline bool has_ilastsettime() const;
  inline void clear_ilastsettime();
  static const int kILastSetTimeFieldNumber = 7;
  inline ::google::protobuf::int32 ilastsettime() const;
  inline void set_ilastsettime(::google::protobuf::int32 value);

  // repeated uint32 uiLimitInfo = 8;
  inline int uilimitinfo_size() const;
  inline void clear_uilimitinfo();
  static const int kUiLimitInfoFieldNumber = 8;
  inline ::google::protobuf::uint32 uilimitinfo(int index) const;
  inline void set_uilimitinfo(int index, ::google::protobuf::uint32 value);
  inline void add_uilimitinfo(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uilimitinfo() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uilimitinfo();

  // @@protoc_insertion_point(class_scope:ExchangeUser)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_strphone();
  inline void clear_has_strphone();
  inline void set_has_strmailnum();
  inline void clear_has_strmailnum();
  inline void set_has_straddress();
  inline void clear_has_straddress();
  inline void set_has_strremarks();
  inline void clear_has_strremarks();
  inline void set_has_strqqnum();
  inline void clear_has_strqqnum();
  inline void set_has_ilastsettime();
  inline void clear_has_ilastsettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::std::string* strphone_;
  ::std::string* strmailnum_;
  ::std::string* straddress_;
  ::std::string* strremarks_;
  ::std::string* strqqnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uilimitinfo_;
  ::google::protobuf::int32 ilastsettime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static ExchangeUser* default_instance_;
};
// -------------------------------------------------------------------

class EXCHANGEDBINFO : public ::google::protobuf::Message {
 public:
  EXCHANGEDBINFO();
  virtual ~EXCHANGEDBINFO();

  EXCHANGEDBINFO(const EXCHANGEDBINFO& from);

  inline EXCHANGEDBINFO& operator=(const EXCHANGEDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EXCHANGEDBINFO& default_instance();

  void Swap(EXCHANGEDBINFO* other);

  // implements Message ----------------------------------------------

  EXCHANGEDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EXCHANGEDBINFO& from);
  void MergeFrom(const EXCHANGEDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ExchangeUser stUserInfo = 1;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 1;
  inline const ::ExchangeUser& stuserinfo() const;
  inline ::ExchangeUser* mutable_stuserinfo();
  inline ::ExchangeUser* release_stuserinfo();
  inline void set_allocated_stuserinfo(::ExchangeUser* stuserinfo);

  // repeated .ExchangeOrder stOrders = 6;
  inline int storders_size() const;
  inline void clear_storders();
  static const int kStOrdersFieldNumber = 6;
  inline const ::ExchangeOrder& storders(int index) const;
  inline ::ExchangeOrder* mutable_storders(int index);
  inline ::ExchangeOrder* add_storders();
  inline const ::google::protobuf::RepeatedPtrField< ::ExchangeOrder >&
      storders() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExchangeOrder >*
      mutable_storders();

  // @@protoc_insertion_point(class_scope:EXCHANGEDBINFO)
 private:
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ExchangeUser* stuserinfo_;
  ::google::protobuf::RepeatedPtrField< ::ExchangeOrder > storders_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static EXCHANGEDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class RechargeRecord : public ::google::protobuf::Message {
 public:
  RechargeRecord();
  virtual ~RechargeRecord();

  RechargeRecord(const RechargeRecord& from);

  inline RechargeRecord& operator=(const RechargeRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeRecord& default_instance();

  void Swap(RechargeRecord* other);

  // implements Message ----------------------------------------------

  RechargeRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeRecord& from);
  void MergeFrom(const RechargeRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTime = 1;
  inline bool has_itime() const;
  inline void clear_itime();
  static const int kITimeFieldNumber = 1;
  inline ::google::protobuf::int32 itime() const;
  inline void set_itime(::google::protobuf::int32 value);

  // optional int32 iRechargeID = 2;
  inline bool has_irechargeid() const;
  inline void clear_irechargeid();
  static const int kIRechargeIDFieldNumber = 2;
  inline ::google::protobuf::int32 irechargeid() const;
  inline void set_irechargeid(::google::protobuf::int32 value);

  // optional string strOrderID = 3;
  inline bool has_strorderid() const;
  inline void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 3;
  inline const ::std::string& strorderid() const;
  inline void set_strorderid(const ::std::string& value);
  inline void set_strorderid(const char* value);
  inline void set_strorderid(const char* value, size_t size);
  inline ::std::string* mutable_strorderid();
  inline ::std::string* release_strorderid();
  inline void set_allocated_strorderid(::std::string* strorderid);

  // @@protoc_insertion_point(class_scope:RechargeRecord)
 private:
  inline void set_has_itime();
  inline void clear_has_itime();
  inline void set_has_irechargeid();
  inline void clear_has_irechargeid();
  inline void set_has_strorderid();
  inline void clear_has_strorderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itime_;
  ::google::protobuf::int32 irechargeid_;
  ::std::string* strorderid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static RechargeRecord* default_instance_;
};
// -------------------------------------------------------------------

class RECHARGEDBINFO : public ::google::protobuf::Message {
 public:
  RECHARGEDBINFO();
  virtual ~RECHARGEDBINFO();

  RECHARGEDBINFO(const RECHARGEDBINFO& from);

  inline RECHARGEDBINFO& operator=(const RECHARGEDBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RECHARGEDBINFO& default_instance();

  void Swap(RECHARGEDBINFO* other);

  // implements Message ----------------------------------------------

  RECHARGEDBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RECHARGEDBINFO& from);
  void MergeFrom(const RECHARGEDBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFirstRewardStat = 1;
  inline bool has_ifirstrewardstat() const;
  inline void clear_ifirstrewardstat();
  static const int kIFirstRewardStatFieldNumber = 1;
  inline ::google::protobuf::int32 ifirstrewardstat() const;
  inline void set_ifirstrewardstat(::google::protobuf::int32 value);

  // repeated .RechargeRecord stRecords = 2;
  inline int strecords_size() const;
  inline void clear_strecords();
  static const int kStRecordsFieldNumber = 2;
  inline const ::RechargeRecord& strecords(int index) const;
  inline ::RechargeRecord* mutable_strecords(int index);
  inline ::RechargeRecord* add_strecords();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeRecord >&
      strecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeRecord >*
      mutable_strecords();

  // repeated int32 iRechargeIDs = 3;
  inline int irechargeids_size() const;
  inline void clear_irechargeids();
  static const int kIRechargeIDsFieldNumber = 3;
  inline ::google::protobuf::int32 irechargeids(int index) const;
  inline void set_irechargeids(int index, ::google::protobuf::int32 value);
  inline void add_irechargeids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      irechargeids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_irechargeids();

  // @@protoc_insertion_point(class_scope:RECHARGEDBINFO)
 private:
  inline void set_has_ifirstrewardstat();
  inline void clear_has_ifirstrewardstat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RechargeRecord > strecords_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > irechargeids_;
  ::google::protobuf::int32 ifirstrewardstat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static RECHARGEDBINFO* default_instance_;
};
// -------------------------------------------------------------------

class RESERVED2DBINFO : public ::google::protobuf::Message {
 public:
  RESERVED2DBINFO();
  virtual ~RESERVED2DBINFO();

  RESERVED2DBINFO(const RESERVED2DBINFO& from);

  inline RESERVED2DBINFO& operator=(const RESERVED2DBINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RESERVED2DBINFO& default_instance();

  void Swap(RESERVED2DBINFO* other);

  // implements Message ----------------------------------------------

  RESERVED2DBINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RESERVED2DBINFO& from);
  void MergeFrom(const RESERVED2DBINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EXCHANGEDBINFO stExchangeInfo = 1;
  inline bool has_stexchangeinfo() const;
  inline void clear_stexchangeinfo();
  static const int kStExchangeInfoFieldNumber = 1;
  inline const ::EXCHANGEDBINFO& stexchangeinfo() const;
  inline ::EXCHANGEDBINFO* mutable_stexchangeinfo();
  inline ::EXCHANGEDBINFO* release_stexchangeinfo();
  inline void set_allocated_stexchangeinfo(::EXCHANGEDBINFO* stexchangeinfo);

  // optional .RECHARGEDBINFO stRechargeInfo = 2;
  inline bool has_strechargeinfo() const;
  inline void clear_strechargeinfo();
  static const int kStRechargeInfoFieldNumber = 2;
  inline const ::RECHARGEDBINFO& strechargeinfo() const;
  inline ::RECHARGEDBINFO* mutable_strechargeinfo();
  inline ::RECHARGEDBINFO* release_strechargeinfo();
  inline void set_allocated_strechargeinfo(::RECHARGEDBINFO* strechargeinfo);

  // @@protoc_insertion_point(class_scope:RESERVED2DBINFO)
 private:
  inline void set_has_stexchangeinfo();
  inline void clear_has_stexchangeinfo();
  inline void set_has_strechargeinfo();
  inline void clear_has_strechargeinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::EXCHANGEDBINFO* stexchangeinfo_;
  ::RECHARGEDBINFO* strechargeinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fUSERDB_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fUSERDB_2eproto();

  void InitAsDefaultInstance();
  static RESERVED2DBINFO* default_instance_;
};
// ===================================================================


// ===================================================================

// GameUserInfo

// optional uint32 uin = 1;
inline bool GameUserInfo::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameUserInfo::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameUserInfo::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameUserInfo::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 GameUserInfo::uin() const {
  return uin_;
}
inline void GameUserInfo::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 uiSeq = 2;
inline bool GameUserInfo::has_uiseq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameUserInfo::set_has_uiseq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameUserInfo::clear_has_uiseq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameUserInfo::clear_uiseq() {
  uiseq_ = 0u;
  clear_has_uiseq();
}
inline ::google::protobuf::uint32 GameUserInfo::uiseq() const {
  return uiseq_;
}
inline void GameUserInfo::set_uiseq(::google::protobuf::uint32 value) {
  set_has_uiseq();
  uiseq_ = value;
}

// optional bytes strBaseInfo = 3;
inline bool GameUserInfo::has_strbaseinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameUserInfo::set_has_strbaseinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameUserInfo::clear_has_strbaseinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameUserInfo::clear_strbaseinfo() {
  if (strbaseinfo_ != &::google::protobuf::internal::kEmptyString) {
    strbaseinfo_->clear();
  }
  clear_has_strbaseinfo();
}
inline const ::std::string& GameUserInfo::strbaseinfo() const {
  return *strbaseinfo_;
}
inline void GameUserInfo::set_strbaseinfo(const ::std::string& value) {
  set_has_strbaseinfo();
  if (strbaseinfo_ == &::google::protobuf::internal::kEmptyString) {
    strbaseinfo_ = new ::std::string;
  }
  strbaseinfo_->assign(value);
}
inline void GameUserInfo::set_strbaseinfo(const char* value) {
  set_has_strbaseinfo();
  if (strbaseinfo_ == &::google::protobuf::internal::kEmptyString) {
    strbaseinfo_ = new ::std::string;
  }
  strbaseinfo_->assign(value);
}
inline void GameUserInfo::set_strbaseinfo(const void* value, size_t size) {
  set_has_strbaseinfo();
  if (strbaseinfo_ == &::google::protobuf::internal::kEmptyString) {
    strbaseinfo_ = new ::std::string;
  }
  strbaseinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_strbaseinfo() {
  set_has_strbaseinfo();
  if (strbaseinfo_ == &::google::protobuf::internal::kEmptyString) {
    strbaseinfo_ = new ::std::string;
  }
  return strbaseinfo_;
}
inline ::std::string* GameUserInfo::release_strbaseinfo() {
  clear_has_strbaseinfo();
  if (strbaseinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strbaseinfo_;
    strbaseinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_strbaseinfo(::std::string* strbaseinfo) {
  if (strbaseinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete strbaseinfo_;
  }
  if (strbaseinfo) {
    set_has_strbaseinfo();
    strbaseinfo_ = strbaseinfo;
  } else {
    clear_has_strbaseinfo();
    strbaseinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strQuestInfo = 4;
inline bool GameUserInfo::has_strquestinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameUserInfo::set_has_strquestinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameUserInfo::clear_has_strquestinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameUserInfo::clear_strquestinfo() {
  if (strquestinfo_ != &::google::protobuf::internal::kEmptyString) {
    strquestinfo_->clear();
  }
  clear_has_strquestinfo();
}
inline const ::std::string& GameUserInfo::strquestinfo() const {
  return *strquestinfo_;
}
inline void GameUserInfo::set_strquestinfo(const ::std::string& value) {
  set_has_strquestinfo();
  if (strquestinfo_ == &::google::protobuf::internal::kEmptyString) {
    strquestinfo_ = new ::std::string;
  }
  strquestinfo_->assign(value);
}
inline void GameUserInfo::set_strquestinfo(const char* value) {
  set_has_strquestinfo();
  if (strquestinfo_ == &::google::protobuf::internal::kEmptyString) {
    strquestinfo_ = new ::std::string;
  }
  strquestinfo_->assign(value);
}
inline void GameUserInfo::set_strquestinfo(const void* value, size_t size) {
  set_has_strquestinfo();
  if (strquestinfo_ == &::google::protobuf::internal::kEmptyString) {
    strquestinfo_ = new ::std::string;
  }
  strquestinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_strquestinfo() {
  set_has_strquestinfo();
  if (strquestinfo_ == &::google::protobuf::internal::kEmptyString) {
    strquestinfo_ = new ::std::string;
  }
  return strquestinfo_;
}
inline ::std::string* GameUserInfo::release_strquestinfo() {
  clear_has_strquestinfo();
  if (strquestinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strquestinfo_;
    strquestinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_strquestinfo(::std::string* strquestinfo) {
  if (strquestinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete strquestinfo_;
  }
  if (strquestinfo) {
    set_has_strquestinfo();
    strquestinfo_ = strquestinfo;
  } else {
    clear_has_strquestinfo();
    strquestinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strItemInfo = 5;
inline bool GameUserInfo::has_striteminfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameUserInfo::set_has_striteminfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameUserInfo::clear_has_striteminfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameUserInfo::clear_striteminfo() {
  if (striteminfo_ != &::google::protobuf::internal::kEmptyString) {
    striteminfo_->clear();
  }
  clear_has_striteminfo();
}
inline const ::std::string& GameUserInfo::striteminfo() const {
  return *striteminfo_;
}
inline void GameUserInfo::set_striteminfo(const ::std::string& value) {
  set_has_striteminfo();
  if (striteminfo_ == &::google::protobuf::internal::kEmptyString) {
    striteminfo_ = new ::std::string;
  }
  striteminfo_->assign(value);
}
inline void GameUserInfo::set_striteminfo(const char* value) {
  set_has_striteminfo();
  if (striteminfo_ == &::google::protobuf::internal::kEmptyString) {
    striteminfo_ = new ::std::string;
  }
  striteminfo_->assign(value);
}
inline void GameUserInfo::set_striteminfo(const void* value, size_t size) {
  set_has_striteminfo();
  if (striteminfo_ == &::google::protobuf::internal::kEmptyString) {
    striteminfo_ = new ::std::string;
  }
  striteminfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_striteminfo() {
  set_has_striteminfo();
  if (striteminfo_ == &::google::protobuf::internal::kEmptyString) {
    striteminfo_ = new ::std::string;
  }
  return striteminfo_;
}
inline ::std::string* GameUserInfo::release_striteminfo() {
  clear_has_striteminfo();
  if (striteminfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = striteminfo_;
    striteminfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_striteminfo(::std::string* striteminfo) {
  if (striteminfo_ != &::google::protobuf::internal::kEmptyString) {
    delete striteminfo_;
  }
  if (striteminfo) {
    set_has_striteminfo();
    striteminfo_ = striteminfo;
  } else {
    clear_has_striteminfo();
    striteminfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strFriendInfo = 6;
inline bool GameUserInfo::has_strfriendinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameUserInfo::set_has_strfriendinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameUserInfo::clear_has_strfriendinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameUserInfo::clear_strfriendinfo() {
  if (strfriendinfo_ != &::google::protobuf::internal::kEmptyString) {
    strfriendinfo_->clear();
  }
  clear_has_strfriendinfo();
}
inline const ::std::string& GameUserInfo::strfriendinfo() const {
  return *strfriendinfo_;
}
inline void GameUserInfo::set_strfriendinfo(const ::std::string& value) {
  set_has_strfriendinfo();
  if (strfriendinfo_ == &::google::protobuf::internal::kEmptyString) {
    strfriendinfo_ = new ::std::string;
  }
  strfriendinfo_->assign(value);
}
inline void GameUserInfo::set_strfriendinfo(const char* value) {
  set_has_strfriendinfo();
  if (strfriendinfo_ == &::google::protobuf::internal::kEmptyString) {
    strfriendinfo_ = new ::std::string;
  }
  strfriendinfo_->assign(value);
}
inline void GameUserInfo::set_strfriendinfo(const void* value, size_t size) {
  set_has_strfriendinfo();
  if (strfriendinfo_ == &::google::protobuf::internal::kEmptyString) {
    strfriendinfo_ = new ::std::string;
  }
  strfriendinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_strfriendinfo() {
  set_has_strfriendinfo();
  if (strfriendinfo_ == &::google::protobuf::internal::kEmptyString) {
    strfriendinfo_ = new ::std::string;
  }
  return strfriendinfo_;
}
inline ::std::string* GameUserInfo::release_strfriendinfo() {
  clear_has_strfriendinfo();
  if (strfriendinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfriendinfo_;
    strfriendinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_strfriendinfo(::std::string* strfriendinfo) {
  if (strfriendinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete strfriendinfo_;
  }
  if (strfriendinfo) {
    set_has_strfriendinfo();
    strfriendinfo_ = strfriendinfo;
  } else {
    clear_has_strfriendinfo();
    strfriendinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strMailInfo = 7;
inline bool GameUserInfo::has_strmailinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameUserInfo::set_has_strmailinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameUserInfo::clear_has_strmailinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameUserInfo::clear_strmailinfo() {
  if (strmailinfo_ != &::google::protobuf::internal::kEmptyString) {
    strmailinfo_->clear();
  }
  clear_has_strmailinfo();
}
inline const ::std::string& GameUserInfo::strmailinfo() const {
  return *strmailinfo_;
}
inline void GameUserInfo::set_strmailinfo(const ::std::string& value) {
  set_has_strmailinfo();
  if (strmailinfo_ == &::google::protobuf::internal::kEmptyString) {
    strmailinfo_ = new ::std::string;
  }
  strmailinfo_->assign(value);
}
inline void GameUserInfo::set_strmailinfo(const char* value) {
  set_has_strmailinfo();
  if (strmailinfo_ == &::google::protobuf::internal::kEmptyString) {
    strmailinfo_ = new ::std::string;
  }
  strmailinfo_->assign(value);
}
inline void GameUserInfo::set_strmailinfo(const void* value, size_t size) {
  set_has_strmailinfo();
  if (strmailinfo_ == &::google::protobuf::internal::kEmptyString) {
    strmailinfo_ = new ::std::string;
  }
  strmailinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_strmailinfo() {
  set_has_strmailinfo();
  if (strmailinfo_ == &::google::protobuf::internal::kEmptyString) {
    strmailinfo_ = new ::std::string;
  }
  return strmailinfo_;
}
inline ::std::string* GameUserInfo::release_strmailinfo() {
  clear_has_strmailinfo();
  if (strmailinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmailinfo_;
    strmailinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_strmailinfo(::std::string* strmailinfo) {
  if (strmailinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete strmailinfo_;
  }
  if (strmailinfo) {
    set_has_strmailinfo();
    strmailinfo_ = strmailinfo;
  } else {
    clear_has_strmailinfo();
    strmailinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strReserved1 = 8;
inline bool GameUserInfo::has_strreserved1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameUserInfo::set_has_strreserved1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameUserInfo::clear_has_strreserved1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameUserInfo::clear_strreserved1() {
  if (strreserved1_ != &::google::protobuf::internal::kEmptyString) {
    strreserved1_->clear();
  }
  clear_has_strreserved1();
}
inline const ::std::string& GameUserInfo::strreserved1() const {
  return *strreserved1_;
}
inline void GameUserInfo::set_strreserved1(const ::std::string& value) {
  set_has_strreserved1();
  if (strreserved1_ == &::google::protobuf::internal::kEmptyString) {
    strreserved1_ = new ::std::string;
  }
  strreserved1_->assign(value);
}
inline void GameUserInfo::set_strreserved1(const char* value) {
  set_has_strreserved1();
  if (strreserved1_ == &::google::protobuf::internal::kEmptyString) {
    strreserved1_ = new ::std::string;
  }
  strreserved1_->assign(value);
}
inline void GameUserInfo::set_strreserved1(const void* value, size_t size) {
  set_has_strreserved1();
  if (strreserved1_ == &::google::protobuf::internal::kEmptyString) {
    strreserved1_ = new ::std::string;
  }
  strreserved1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_strreserved1() {
  set_has_strreserved1();
  if (strreserved1_ == &::google::protobuf::internal::kEmptyString) {
    strreserved1_ = new ::std::string;
  }
  return strreserved1_;
}
inline ::std::string* GameUserInfo::release_strreserved1() {
  clear_has_strreserved1();
  if (strreserved1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strreserved1_;
    strreserved1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_strreserved1(::std::string* strreserved1) {
  if (strreserved1_ != &::google::protobuf::internal::kEmptyString) {
    delete strreserved1_;
  }
  if (strreserved1) {
    set_has_strreserved1();
    strreserved1_ = strreserved1;
  } else {
    clear_has_strreserved1();
    strreserved1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strReserved2 = 9;
inline bool GameUserInfo::has_strreserved2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameUserInfo::set_has_strreserved2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameUserInfo::clear_has_strreserved2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameUserInfo::clear_strreserved2() {
  if (strreserved2_ != &::google::protobuf::internal::kEmptyString) {
    strreserved2_->clear();
  }
  clear_has_strreserved2();
}
inline const ::std::string& GameUserInfo::strreserved2() const {
  return *strreserved2_;
}
inline void GameUserInfo::set_strreserved2(const ::std::string& value) {
  set_has_strreserved2();
  if (strreserved2_ == &::google::protobuf::internal::kEmptyString) {
    strreserved2_ = new ::std::string;
  }
  strreserved2_->assign(value);
}
inline void GameUserInfo::set_strreserved2(const char* value) {
  set_has_strreserved2();
  if (strreserved2_ == &::google::protobuf::internal::kEmptyString) {
    strreserved2_ = new ::std::string;
  }
  strreserved2_->assign(value);
}
inline void GameUserInfo::set_strreserved2(const void* value, size_t size) {
  set_has_strreserved2();
  if (strreserved2_ == &::google::protobuf::internal::kEmptyString) {
    strreserved2_ = new ::std::string;
  }
  strreserved2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameUserInfo::mutable_strreserved2() {
  set_has_strreserved2();
  if (strreserved2_ == &::google::protobuf::internal::kEmptyString) {
    strreserved2_ = new ::std::string;
  }
  return strreserved2_;
}
inline ::std::string* GameUserInfo::release_strreserved2() {
  clear_has_strreserved2();
  if (strreserved2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strreserved2_;
    strreserved2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameUserInfo::set_allocated_strreserved2(::std::string* strreserved2) {
  if (strreserved2_ != &::google::protobuf::internal::kEmptyString) {
    delete strreserved2_;
  }
  if (strreserved2) {
    set_has_strreserved2();
    strreserved2_ = strreserved2;
  } else {
    clear_has_strreserved2();
    strreserved2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WeaponInfo

// optional int32 iWeaponID = 1;
inline bool WeaponInfo::has_iweaponid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeaponInfo::set_has_iweaponid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeaponInfo::clear_has_iweaponid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeaponInfo::clear_iweaponid() {
  iweaponid_ = 0;
  clear_has_iweaponid();
}
inline ::google::protobuf::int32 WeaponInfo::iweaponid() const {
  return iweaponid_;
}
inline void WeaponInfo::set_iweaponid(::google::protobuf::int32 value) {
  set_has_iweaponid();
  iweaponid_ = value;
}

// optional int32 iWeaponStyleID = 2;
inline bool WeaponInfo::has_iweaponstyleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeaponInfo::set_has_iweaponstyleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeaponInfo::clear_has_iweaponstyleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeaponInfo::clear_iweaponstyleid() {
  iweaponstyleid_ = 0;
  clear_has_iweaponstyleid();
}
inline ::google::protobuf::int32 WeaponInfo::iweaponstyleid() const {
  return iweaponstyleid_;
}
inline void WeaponInfo::set_iweaponstyleid(::google::protobuf::int32 value) {
  set_has_iweaponstyleid();
  iweaponstyleid_ = value;
}

// repeated int32 iUnlockStyleIDs = 3;
inline int WeaponInfo::iunlockstyleids_size() const {
  return iunlockstyleids_.size();
}
inline void WeaponInfo::clear_iunlockstyleids() {
  iunlockstyleids_.Clear();
}
inline ::google::protobuf::int32 WeaponInfo::iunlockstyleids(int index) const {
  return iunlockstyleids_.Get(index);
}
inline void WeaponInfo::set_iunlockstyleids(int index, ::google::protobuf::int32 value) {
  iunlockstyleids_.Set(index, value);
}
inline void WeaponInfo::add_iunlockstyleids(::google::protobuf::int32 value) {
  iunlockstyleids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WeaponInfo::iunlockstyleids() const {
  return iunlockstyleids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WeaponInfo::mutable_iunlockstyleids() {
  return &iunlockstyleids_;
}

// -------------------------------------------------------------------

// ExpLineInfo

// optional int32 iExpLineID = 1;
inline bool ExpLineInfo::has_iexplineid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpLineInfo::set_has_iexplineid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpLineInfo::clear_has_iexplineid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpLineInfo::clear_iexplineid() {
  iexplineid_ = 0;
  clear_has_iexplineid();
}
inline ::google::protobuf::int32 ExpLineInfo::iexplineid() const {
  return iexplineid_;
}
inline void ExpLineInfo::set_iexplineid(::google::protobuf::int32 value) {
  set_has_iexplineid();
  iexplineid_ = value;
}

// optional int32 iExpLineType = 2;
inline bool ExpLineInfo::has_iexplinetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpLineInfo::set_has_iexplinetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpLineInfo::clear_has_iexplinetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpLineInfo::clear_iexplinetype() {
  iexplinetype_ = 0;
  clear_has_iexplinetype();
}
inline ::google::protobuf::int32 ExpLineInfo::iexplinetype() const {
  return iexplinetype_;
}
inline void ExpLineInfo::set_iexplinetype(::google::protobuf::int32 value) {
  set_has_iexplinetype();
  iexplinetype_ = value;
}

// optional int64 lUserWinNum = 3;
inline bool ExpLineInfo::has_luserwinnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExpLineInfo::set_has_luserwinnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExpLineInfo::clear_has_luserwinnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExpLineInfo::clear_luserwinnum() {
  luserwinnum_ = GOOGLE_LONGLONG(0);
  clear_has_luserwinnum();
}
inline ::google::protobuf::int64 ExpLineInfo::luserwinnum() const {
  return luserwinnum_;
}
inline void ExpLineInfo::set_luserwinnum(::google::protobuf::int64 value) {
  set_has_luserwinnum();
  luserwinnum_ = value;
}

// optional int32 iBulletNum = 4;
inline bool ExpLineInfo::has_ibulletnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExpLineInfo::set_has_ibulletnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExpLineInfo::clear_has_ibulletnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExpLineInfo::clear_ibulletnum() {
  ibulletnum_ = 0;
  clear_has_ibulletnum();
}
inline ::google::protobuf::int32 ExpLineInfo::ibulletnum() const {
  return ibulletnum_;
}
inline void ExpLineInfo::set_ibulletnum(::google::protobuf::int32 value) {
  set_has_ibulletnum();
  ibulletnum_ = value;
}

// optional int64 lUserCostNum = 5;
inline bool ExpLineInfo::has_lusercostnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExpLineInfo::set_has_lusercostnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExpLineInfo::clear_has_lusercostnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExpLineInfo::clear_lusercostnum() {
  lusercostnum_ = GOOGLE_LONGLONG(0);
  clear_has_lusercostnum();
}
inline ::google::protobuf::int64 ExpLineInfo::lusercostnum() const {
  return lusercostnum_;
}
inline void ExpLineInfo::set_lusercostnum(::google::protobuf::int64 value) {
  set_has_lusercostnum();
  lusercostnum_ = value;
}

// -------------------------------------------------------------------

// BASEDBINFO

// optional bytes szNickName = 1;
inline bool BASEDBINFO::has_sznickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BASEDBINFO::set_has_sznickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BASEDBINFO::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BASEDBINFO::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::kEmptyString) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& BASEDBINFO::sznickname() const {
  return *sznickname_;
}
inline void BASEDBINFO::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
}
inline void BASEDBINFO::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
}
inline void BASEDBINFO::set_sznickname(const void* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BASEDBINFO::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  return sznickname_;
}
inline ::std::string* BASEDBINFO::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BASEDBINFO::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::kEmptyString) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int64 iResources = 2;
inline int BASEDBINFO::iresources_size() const {
  return iresources_.size();
}
inline void BASEDBINFO::clear_iresources() {
  iresources_.Clear();
}
inline ::google::protobuf::int64 BASEDBINFO::iresources(int index) const {
  return iresources_.Get(index);
}
inline void BASEDBINFO::set_iresources(int index, ::google::protobuf::int64 value) {
  iresources_.Set(index, value);
}
inline void BASEDBINFO::add_iresources(::google::protobuf::int64 value) {
  iresources_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BASEDBINFO::iresources() const {
  return iresources_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BASEDBINFO::mutable_iresources() {
  return &iresources_;
}

// optional uint32 uStatus = 3;
inline bool BASEDBINFO::has_ustatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BASEDBINFO::set_has_ustatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BASEDBINFO::clear_has_ustatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BASEDBINFO::clear_ustatus() {
  ustatus_ = 0u;
  clear_has_ustatus();
}
inline ::google::protobuf::uint32 BASEDBINFO::ustatus() const {
  return ustatus_;
}
inline void BASEDBINFO::set_ustatus(::google::protobuf::uint32 value) {
  set_has_ustatus();
  ustatus_ = value;
}

// optional int32 iLastLogin = 4;
inline bool BASEDBINFO::has_ilastlogin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BASEDBINFO::set_has_ilastlogin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BASEDBINFO::clear_has_ilastlogin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BASEDBINFO::clear_ilastlogin() {
  ilastlogin_ = 0;
  clear_has_ilastlogin();
}
inline ::google::protobuf::int32 BASEDBINFO::ilastlogin() const {
  return ilastlogin_;
}
inline void BASEDBINFO::set_ilastlogin(::google::protobuf::int32 value) {
  set_has_ilastlogin();
  ilastlogin_ = value;
}

// optional int32 iLastLogout = 5;
inline bool BASEDBINFO::has_ilastlogout() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BASEDBINFO::set_has_ilastlogout() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BASEDBINFO::clear_has_ilastlogout() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BASEDBINFO::clear_ilastlogout() {
  ilastlogout_ = 0;
  clear_has_ilastlogout();
}
inline ::google::protobuf::int32 BASEDBINFO::ilastlogout() const {
  return ilastlogout_;
}
inline void BASEDBINFO::set_ilastlogout(::google::protobuf::int32 value) {
  set_has_ilastlogout();
  ilastlogout_ = value;
}

// optional int32 iCreateTime = 6;
inline bool BASEDBINFO::has_icreatetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BASEDBINFO::set_has_icreatetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BASEDBINFO::clear_has_icreatetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BASEDBINFO::clear_icreatetime() {
  icreatetime_ = 0;
  clear_has_icreatetime();
}
inline ::google::protobuf::int32 BASEDBINFO::icreatetime() const {
  return icreatetime_;
}
inline void BASEDBINFO::set_icreatetime(::google::protobuf::int32 value) {
  set_has_icreatetime();
  icreatetime_ = value;
}

// optional int32 iOnlineTime = 7;
inline bool BASEDBINFO::has_ionlinetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BASEDBINFO::set_has_ionlinetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BASEDBINFO::clear_has_ionlinetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BASEDBINFO::clear_ionlinetime() {
  ionlinetime_ = 0;
  clear_has_ionlinetime();
}
inline ::google::protobuf::int32 BASEDBINFO::ionlinetime() const {
  return ionlinetime_;
}
inline void BASEDBINFO::set_ionlinetime(::google::protobuf::int32 value) {
  set_has_ionlinetime();
  ionlinetime_ = value;
}

// optional int32 iLoginCount = 8;
inline bool BASEDBINFO::has_ilogincount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BASEDBINFO::set_has_ilogincount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BASEDBINFO::clear_has_ilogincount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BASEDBINFO::clear_ilogincount() {
  ilogincount_ = 0;
  clear_has_ilogincount();
}
inline ::google::protobuf::int32 BASEDBINFO::ilogincount() const {
  return ilogincount_;
}
inline void BASEDBINFO::set_ilogincount(::google::protobuf::int32 value) {
  set_has_ilogincount();
  ilogincount_ = value;
}

// optional int32 iLoginTime = 9;
inline bool BASEDBINFO::has_ilogintime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BASEDBINFO::set_has_ilogintime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BASEDBINFO::clear_has_ilogintime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BASEDBINFO::clear_ilogintime() {
  ilogintime_ = 0;
  clear_has_ilogintime();
}
inline ::google::protobuf::int32 BASEDBINFO::ilogintime() const {
  return ilogintime_;
}
inline void BASEDBINFO::set_ilogintime(::google::protobuf::int32 value) {
  set_has_ilogintime();
  ilogintime_ = value;
}

// optional int32 iLogoutTime = 10;
inline bool BASEDBINFO::has_ilogouttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BASEDBINFO::set_has_ilogouttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BASEDBINFO::clear_has_ilogouttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BASEDBINFO::clear_ilogouttime() {
  ilogouttime_ = 0;
  clear_has_ilogouttime();
}
inline ::google::protobuf::int32 BASEDBINFO::ilogouttime() const {
  return ilogouttime_;
}
inline void BASEDBINFO::set_ilogouttime(::google::protobuf::int32 value) {
  set_has_ilogouttime();
  ilogouttime_ = value;
}

// optional .WeaponInfo stWeapon = 11;
inline bool BASEDBINFO::has_stweapon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BASEDBINFO::set_has_stweapon() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BASEDBINFO::clear_has_stweapon() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BASEDBINFO::clear_stweapon() {
  if (stweapon_ != NULL) stweapon_->::WeaponInfo::Clear();
  clear_has_stweapon();
}
inline const ::WeaponInfo& BASEDBINFO::stweapon() const {
  return stweapon_ != NULL ? *stweapon_ : *default_instance_->stweapon_;
}
inline ::WeaponInfo* BASEDBINFO::mutable_stweapon() {
  set_has_stweapon();
  if (stweapon_ == NULL) stweapon_ = new ::WeaponInfo;
  return stweapon_;
}
inline ::WeaponInfo* BASEDBINFO::release_stweapon() {
  clear_has_stweapon();
  ::WeaponInfo* temp = stweapon_;
  stweapon_ = NULL;
  return temp;
}
inline void BASEDBINFO::set_allocated_stweapon(::WeaponInfo* stweapon) {
  delete stweapon_;
  stweapon_ = stweapon;
  if (stweapon) {
    set_has_stweapon();
  } else {
    clear_has_stweapon();
  }
}

// optional int32 iLotteryNum = 13;
inline bool BASEDBINFO::has_ilotterynum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BASEDBINFO::set_has_ilotterynum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BASEDBINFO::clear_has_ilotterynum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BASEDBINFO::clear_ilotterynum() {
  ilotterynum_ = 0;
  clear_has_ilotterynum();
}
inline ::google::protobuf::int32 BASEDBINFO::ilotterynum() const {
  return ilotterynum_;
}
inline void BASEDBINFO::set_ilotterynum(::google::protobuf::int32 value) {
  set_has_ilotterynum();
  ilotterynum_ = value;
}

// repeated .ExpLineInfo stExpLines = 14;
inline int BASEDBINFO::stexplines_size() const {
  return stexplines_.size();
}
inline void BASEDBINFO::clear_stexplines() {
  stexplines_.Clear();
}
inline const ::ExpLineInfo& BASEDBINFO::stexplines(int index) const {
  return stexplines_.Get(index);
}
inline ::ExpLineInfo* BASEDBINFO::mutable_stexplines(int index) {
  return stexplines_.Mutable(index);
}
inline ::ExpLineInfo* BASEDBINFO::add_stexplines() {
  return stexplines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExpLineInfo >&
BASEDBINFO::stexplines() const {
  return stexplines_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExpLineInfo >*
BASEDBINFO::mutable_stexplines() {
  return &stexplines_;
}

// optional int32 iLastScoreUpdate = 15;
inline bool BASEDBINFO::has_ilastscoreupdate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BASEDBINFO::set_has_ilastscoreupdate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BASEDBINFO::clear_has_ilastscoreupdate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BASEDBINFO::clear_ilastscoreupdate() {
  ilastscoreupdate_ = 0;
  clear_has_ilastscoreupdate();
}
inline ::google::protobuf::int32 BASEDBINFO::ilastscoreupdate() const {
  return ilastscoreupdate_;
}
inline void BASEDBINFO::set_ilastscoreupdate(::google::protobuf::int32 value) {
  set_has_ilastscoreupdate();
  ilastscoreupdate_ = value;
}

// optional int64 iDayScore = 16;
inline bool BASEDBINFO::has_idayscore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BASEDBINFO::set_has_idayscore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BASEDBINFO::clear_has_idayscore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BASEDBINFO::clear_idayscore() {
  idayscore_ = GOOGLE_LONGLONG(0);
  clear_has_idayscore();
}
inline ::google::protobuf::int64 BASEDBINFO::idayscore() const {
  return idayscore_;
}
inline void BASEDBINFO::set_idayscore(::google::protobuf::int64 value) {
  set_has_idayscore();
  idayscore_ = value;
}

// optional int64 iWeekScore = 17;
inline bool BASEDBINFO::has_iweekscore() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BASEDBINFO::set_has_iweekscore() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BASEDBINFO::clear_has_iweekscore() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BASEDBINFO::clear_iweekscore() {
  iweekscore_ = GOOGLE_LONGLONG(0);
  clear_has_iweekscore();
}
inline ::google::protobuf::int64 BASEDBINFO::iweekscore() const {
  return iweekscore_;
}
inline void BASEDBINFO::set_iweekscore(::google::protobuf::int64 value) {
  set_has_iweekscore();
  iweekscore_ = value;
}

// optional int32 iVIPLevel = 18;
inline bool BASEDBINFO::has_iviplevel() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BASEDBINFO::set_has_iviplevel() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BASEDBINFO::clear_has_iviplevel() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BASEDBINFO::clear_iviplevel() {
  iviplevel_ = 0;
  clear_has_iviplevel();
}
inline ::google::protobuf::int32 BASEDBINFO::iviplevel() const {
  return iviplevel_;
}
inline void BASEDBINFO::set_iviplevel(::google::protobuf::int32 value) {
  set_has_iviplevel();
  iviplevel_ = value;
}

// optional int64 lVIPExp = 19;
inline bool BASEDBINFO::has_lvipexp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BASEDBINFO::set_has_lvipexp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BASEDBINFO::clear_has_lvipexp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BASEDBINFO::clear_lvipexp() {
  lvipexp_ = GOOGLE_LONGLONG(0);
  clear_has_lvipexp();
}
inline ::google::protobuf::int64 BASEDBINFO::lvipexp() const {
  return lvipexp_;
}
inline void BASEDBINFO::set_lvipexp(::google::protobuf::int64 value) {
  set_has_lvipexp();
  lvipexp_ = value;
}

// optional int32 iVIPPriv = 20;
inline bool BASEDBINFO::has_ivippriv() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BASEDBINFO::set_has_ivippriv() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BASEDBINFO::clear_has_ivippriv() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BASEDBINFO::clear_ivippriv() {
  ivippriv_ = 0;
  clear_has_ivippriv();
}
inline ::google::protobuf::int32 BASEDBINFO::ivippriv() const {
  return ivippriv_;
}
inline void BASEDBINFO::set_ivippriv(::google::protobuf::int32 value) {
  set_has_ivippriv();
  ivippriv_ = value;
}

// optional int32 iNextAlmsTime = 21;
inline bool BASEDBINFO::has_inextalmstime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BASEDBINFO::set_has_inextalmstime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BASEDBINFO::clear_has_inextalmstime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BASEDBINFO::clear_inextalmstime() {
  inextalmstime_ = 0;
  clear_has_inextalmstime();
}
inline ::google::protobuf::int32 BASEDBINFO::inextalmstime() const {
  return inextalmstime_;
}
inline void BASEDBINFO::set_inextalmstime(::google::protobuf::int32 value) {
  set_has_inextalmstime();
  inextalmstime_ = value;
}

// optional int32 iAlmsNum = 22;
inline bool BASEDBINFO::has_ialmsnum() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BASEDBINFO::set_has_ialmsnum() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BASEDBINFO::clear_has_ialmsnum() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BASEDBINFO::clear_ialmsnum() {
  ialmsnum_ = 0;
  clear_has_ialmsnum();
}
inline ::google::protobuf::int32 BASEDBINFO::ialmsnum() const {
  return ialmsnum_;
}
inline void BASEDBINFO::set_ialmsnum(::google::protobuf::int32 value) {
  set_has_ialmsnum();
  ialmsnum_ = value;
}

// optional int32 iLastAlmsUpdateTime = 23;
inline bool BASEDBINFO::has_ilastalmsupdatetime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BASEDBINFO::set_has_ilastalmsupdatetime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BASEDBINFO::clear_has_ilastalmsupdatetime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BASEDBINFO::clear_ilastalmsupdatetime() {
  ilastalmsupdatetime_ = 0;
  clear_has_ilastalmsupdatetime();
}
inline ::google::protobuf::int32 BASEDBINFO::ilastalmsupdatetime() const {
  return ilastalmsupdatetime_;
}
inline void BASEDBINFO::set_ilastalmsupdatetime(::google::protobuf::int32 value) {
  set_has_ilastalmsupdatetime();
  ilastalmsupdatetime_ = value;
}

// repeated int32 iRechargeLotteryIDs = 24;
inline int BASEDBINFO::irechargelotteryids_size() const {
  return irechargelotteryids_.size();
}
inline void BASEDBINFO::clear_irechargelotteryids() {
  irechargelotteryids_.Clear();
}
inline ::google::protobuf::int32 BASEDBINFO::irechargelotteryids(int index) const {
  return irechargelotteryids_.Get(index);
}
inline void BASEDBINFO::set_irechargelotteryids(int index, ::google::protobuf::int32 value) {
  irechargelotteryids_.Set(index, value);
}
inline void BASEDBINFO::add_irechargelotteryids(::google::protobuf::int32 value) {
  irechargelotteryids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BASEDBINFO::irechargelotteryids() const {
  return irechargelotteryids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BASEDBINFO::mutable_irechargelotteryids() {
  return &irechargelotteryids_;
}

// optional int32 iLoginDays = 25;
inline bool BASEDBINFO::has_ilogindays() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void BASEDBINFO::set_has_ilogindays() {
  _has_bits_[0] |= 0x00800000u;
}
inline void BASEDBINFO::clear_has_ilogindays() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void BASEDBINFO::clear_ilogindays() {
  ilogindays_ = 0;
  clear_has_ilogindays();
}
inline ::google::protobuf::int32 BASEDBINFO::ilogindays() const {
  return ilogindays_;
}
inline void BASEDBINFO::set_ilogindays(::google::protobuf::int32 value) {
  set_has_ilogindays();
  ilogindays_ = value;
}

// optional int32 iGetLoginReward = 26;
inline bool BASEDBINFO::has_igetloginreward() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void BASEDBINFO::set_has_igetloginreward() {
  _has_bits_[0] |= 0x01000000u;
}
inline void BASEDBINFO::clear_has_igetloginreward() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void BASEDBINFO::clear_igetloginreward() {
  igetloginreward_ = 0;
  clear_has_igetloginreward();
}
inline ::google::protobuf::int32 BASEDBINFO::igetloginreward() const {
  return igetloginreward_;
}
inline void BASEDBINFO::set_igetloginreward(::google::protobuf::int32 value) {
  set_has_igetloginreward();
  igetloginreward_ = value;
}

// optional int32 iRemainNewRedNum = 27;
inline bool BASEDBINFO::has_iremainnewrednum() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void BASEDBINFO::set_has_iremainnewrednum() {
  _has_bits_[0] |= 0x02000000u;
}
inline void BASEDBINFO::clear_has_iremainnewrednum() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void BASEDBINFO::clear_iremainnewrednum() {
  iremainnewrednum_ = 0;
  clear_has_iremainnewrednum();
}
inline ::google::protobuf::int32 BASEDBINFO::iremainnewrednum() const {
  return iremainnewrednum_;
}
inline void BASEDBINFO::set_iremainnewrednum(::google::protobuf::int32 value) {
  set_has_iremainnewrednum();
  iremainnewrednum_ = value;
}

// optional int32 iNowNewRedNum = 28;
inline bool BASEDBINFO::has_inownewrednum() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void BASEDBINFO::set_has_inownewrednum() {
  _has_bits_[0] |= 0x04000000u;
}
inline void BASEDBINFO::clear_has_inownewrednum() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void BASEDBINFO::clear_inownewrednum() {
  inownewrednum_ = 0;
  clear_has_inownewrednum();
}
inline ::google::protobuf::int32 BASEDBINFO::inownewrednum() const {
  return inownewrednum_;
}
inline void BASEDBINFO::set_inownewrednum(::google::protobuf::int32 value) {
  set_has_inownewrednum();
  inownewrednum_ = value;
}

// optional int32 iMonthEndTime = 29;
inline bool BASEDBINFO::has_imonthendtime() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void BASEDBINFO::set_has_imonthendtime() {
  _has_bits_[0] |= 0x08000000u;
}
inline void BASEDBINFO::clear_has_imonthendtime() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void BASEDBINFO::clear_imonthendtime() {
  imonthendtime_ = 0;
  clear_has_imonthendtime();
}
inline ::google::protobuf::int32 BASEDBINFO::imonthendtime() const {
  return imonthendtime_;
}
inline void BASEDBINFO::set_imonthendtime(::google::protobuf::int32 value) {
  set_has_imonthendtime();
  imonthendtime_ = value;
}

// optional int32 iLastGetMonthTime = 30;
inline bool BASEDBINFO::has_ilastgetmonthtime() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void BASEDBINFO::set_has_ilastgetmonthtime() {
  _has_bits_[0] |= 0x10000000u;
}
inline void BASEDBINFO::clear_has_ilastgetmonthtime() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void BASEDBINFO::clear_ilastgetmonthtime() {
  ilastgetmonthtime_ = 0;
  clear_has_ilastgetmonthtime();
}
inline ::google::protobuf::int32 BASEDBINFO::ilastgetmonthtime() const {
  return ilastgetmonthtime_;
}
inline void BASEDBINFO::set_ilastgetmonthtime(::google::protobuf::int32 value) {
  set_has_ilastgetmonthtime();
  ilastgetmonthtime_ = value;
}

// optional string strChannel = 31;
inline bool BASEDBINFO::has_strchannel() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void BASEDBINFO::set_has_strchannel() {
  _has_bits_[0] |= 0x20000000u;
}
inline void BASEDBINFO::clear_has_strchannel() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void BASEDBINFO::clear_strchannel() {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    strchannel_->clear();
  }
  clear_has_strchannel();
}
inline const ::std::string& BASEDBINFO::strchannel() const {
  return *strchannel_;
}
inline void BASEDBINFO::set_strchannel(const ::std::string& value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void BASEDBINFO::set_strchannel(const char* value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void BASEDBINFO::set_strchannel(const char* value, size_t size) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BASEDBINFO::mutable_strchannel() {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  return strchannel_;
}
inline ::std::string* BASEDBINFO::release_strchannel() {
  clear_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannel_;
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BASEDBINFO::set_allocated_strchannel(::std::string* strchannel) {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannel_;
  }
  if (strchannel) {
    set_has_strchannel();
    strchannel_ = strchannel;
  } else {
    clear_has_strchannel();
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPicID = 32;
inline bool BASEDBINFO::has_strpicid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void BASEDBINFO::set_has_strpicid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void BASEDBINFO::clear_has_strpicid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void BASEDBINFO::clear_strpicid() {
  if (strpicid_ != &::google::protobuf::internal::kEmptyString) {
    strpicid_->clear();
  }
  clear_has_strpicid();
}
inline const ::std::string& BASEDBINFO::strpicid() const {
  return *strpicid_;
}
inline void BASEDBINFO::set_strpicid(const ::std::string& value) {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  strpicid_->assign(value);
}
inline void BASEDBINFO::set_strpicid(const char* value) {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  strpicid_->assign(value);
}
inline void BASEDBINFO::set_strpicid(const char* value, size_t size) {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  strpicid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BASEDBINFO::mutable_strpicid() {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  return strpicid_;
}
inline ::std::string* BASEDBINFO::release_strpicid() {
  clear_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpicid_;
    strpicid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BASEDBINFO::set_allocated_strpicid(::std::string* strpicid) {
  if (strpicid_ != &::google::protobuf::internal::kEmptyString) {
    delete strpicid_;
  }
  if (strpicid) {
    set_has_strpicid();
    strpicid_ = strpicid;
  } else {
    clear_has_strpicid();
    strpicid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bUpdateRank = 33;
inline bool BASEDBINFO::has_bupdaterank() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void BASEDBINFO::set_has_bupdaterank() {
  _has_bits_[0] |= 0x80000000u;
}
inline void BASEDBINFO::clear_has_bupdaterank() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void BASEDBINFO::clear_bupdaterank() {
  bupdaterank_ = false;
  clear_has_bupdaterank();
}
inline bool BASEDBINFO::bupdaterank() const {
  return bupdaterank_;
}
inline void BASEDBINFO::set_bupdaterank(bool value) {
  set_has_bupdaterank();
  bupdaterank_ = value;
}

// optional bool bGetVIPCoins = 34;
inline bool BASEDBINFO::has_bgetvipcoins() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void BASEDBINFO::set_has_bgetvipcoins() {
  _has_bits_[1] |= 0x00000001u;
}
inline void BASEDBINFO::clear_has_bgetvipcoins() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void BASEDBINFO::clear_bgetvipcoins() {
  bgetvipcoins_ = false;
  clear_has_bgetvipcoins();
}
inline bool BASEDBINFO::bgetvipcoins() const {
  return bgetvipcoins_;
}
inline void BASEDBINFO::set_bgetvipcoins(bool value) {
  set_has_bgetvipcoins();
  bgetvipcoins_ = value;
}

// optional int32 iDayOnlineTime = 35;
inline bool BASEDBINFO::has_idayonlinetime() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void BASEDBINFO::set_has_idayonlinetime() {
  _has_bits_[1] |= 0x00000002u;
}
inline void BASEDBINFO::clear_has_idayonlinetime() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void BASEDBINFO::clear_idayonlinetime() {
  idayonlinetime_ = 0;
  clear_has_idayonlinetime();
}
inline ::google::protobuf::int32 BASEDBINFO::idayonlinetime() const {
  return idayonlinetime_;
}
inline void BASEDBINFO::set_idayonlinetime(::google::protobuf::int32 value) {
  set_has_idayonlinetime();
  idayonlinetime_ = value;
}

// optional int32 iLastOnlineUpdate = 36;
inline bool BASEDBINFO::has_ilastonlineupdate() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void BASEDBINFO::set_has_ilastonlineupdate() {
  _has_bits_[1] |= 0x00000004u;
}
inline void BASEDBINFO::clear_has_ilastonlineupdate() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void BASEDBINFO::clear_ilastonlineupdate() {
  ilastonlineupdate_ = 0;
  clear_has_ilastonlineupdate();
}
inline ::google::protobuf::int32 BASEDBINFO::ilastonlineupdate() const {
  return ilastonlineupdate_;
}
inline void BASEDBINFO::set_ilastonlineupdate(::google::protobuf::int32 value) {
  set_has_ilastonlineupdate();
  ilastonlineupdate_ = value;
}

// optional uint32 uFinGuideIndexes = 37;
inline bool BASEDBINFO::has_ufinguideindexes() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void BASEDBINFO::set_has_ufinguideindexes() {
  _has_bits_[1] |= 0x00000008u;
}
inline void BASEDBINFO::clear_has_ufinguideindexes() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void BASEDBINFO::clear_ufinguideindexes() {
  ufinguideindexes_ = 0u;
  clear_has_ufinguideindexes();
}
inline ::google::protobuf::uint32 BASEDBINFO::ufinguideindexes() const {
  return ufinguideindexes_;
}
inline void BASEDBINFO::set_ufinguideindexes(::google::protobuf::uint32 value) {
  set_has_ufinguideindexes();
  ufinguideindexes_ = value;
}

// optional bool bNameChanged = 38;
inline bool BASEDBINFO::has_bnamechanged() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void BASEDBINFO::set_has_bnamechanged() {
  _has_bits_[1] |= 0x00000010u;
}
inline void BASEDBINFO::clear_has_bnamechanged() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void BASEDBINFO::clear_bnamechanged() {
  bnamechanged_ = false;
  clear_has_bnamechanged();
}
inline bool BASEDBINFO::bnamechanged() const {
  return bnamechanged_;
}
inline void BASEDBINFO::set_bnamechanged(bool value) {
  set_has_bnamechanged();
  bnamechanged_ = value;
}

// optional int64 lUserWinNum = 39;
inline bool BASEDBINFO::has_luserwinnum() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void BASEDBINFO::set_has_luserwinnum() {
  _has_bits_[1] |= 0x00000020u;
}
inline void BASEDBINFO::clear_has_luserwinnum() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void BASEDBINFO::clear_luserwinnum() {
  luserwinnum_ = GOOGLE_LONGLONG(0);
  clear_has_luserwinnum();
}
inline ::google::protobuf::int64 BASEDBINFO::luserwinnum() const {
  return luserwinnum_;
}
inline void BASEDBINFO::set_luserwinnum(::google::protobuf::int64 value) {
  set_has_luserwinnum();
  luserwinnum_ = value;
}

// optional string strSign = 40;
inline bool BASEDBINFO::has_strsign() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void BASEDBINFO::set_has_strsign() {
  _has_bits_[1] |= 0x00000040u;
}
inline void BASEDBINFO::clear_has_strsign() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void BASEDBINFO::clear_strsign() {
  if (strsign_ != &::google::protobuf::internal::kEmptyString) {
    strsign_->clear();
  }
  clear_has_strsign();
}
inline const ::std::string& BASEDBINFO::strsign() const {
  return *strsign_;
}
inline void BASEDBINFO::set_strsign(const ::std::string& value) {
  set_has_strsign();
  if (strsign_ == &::google::protobuf::internal::kEmptyString) {
    strsign_ = new ::std::string;
  }
  strsign_->assign(value);
}
inline void BASEDBINFO::set_strsign(const char* value) {
  set_has_strsign();
  if (strsign_ == &::google::protobuf::internal::kEmptyString) {
    strsign_ = new ::std::string;
  }
  strsign_->assign(value);
}
inline void BASEDBINFO::set_strsign(const char* value, size_t size) {
  set_has_strsign();
  if (strsign_ == &::google::protobuf::internal::kEmptyString) {
    strsign_ = new ::std::string;
  }
  strsign_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BASEDBINFO::mutable_strsign() {
  set_has_strsign();
  if (strsign_ == &::google::protobuf::internal::kEmptyString) {
    strsign_ = new ::std::string;
  }
  return strsign_;
}
inline ::std::string* BASEDBINFO::release_strsign() {
  clear_has_strsign();
  if (strsign_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strsign_;
    strsign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BASEDBINFO::set_allocated_strsign(::std::string* strsign) {
  if (strsign_ != &::google::protobuf::internal::kEmptyString) {
    delete strsign_;
  }
  if (strsign) {
    set_has_strsign();
    strsign_ = strsign;
  } else {
    clear_has_strsign();
    strsign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// OneQuest

// optional int32 iQuestID = 1;
inline bool OneQuest::has_iquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneQuest::set_has_iquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneQuest::clear_has_iquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneQuest::clear_iquestid() {
  iquestid_ = 0;
  clear_has_iquestid();
}
inline ::google::protobuf::int32 OneQuest::iquestid() const {
  return iquestid_;
}
inline void OneQuest::set_iquestid(::google::protobuf::int32 value) {
  set_has_iquestid();
  iquestid_ = value;
}

// optional int32 iQuestType = 2;
inline bool OneQuest::has_iquesttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneQuest::set_has_iquesttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneQuest::clear_has_iquesttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneQuest::clear_iquesttype() {
  iquesttype_ = 0;
  clear_has_iquesttype();
}
inline ::google::protobuf::int32 OneQuest::iquesttype() const {
  return iquesttype_;
}
inline void OneQuest::set_iquesttype(::google::protobuf::int32 value) {
  set_has_iquesttype();
  iquesttype_ = value;
}

// optional int32 iNeedType = 3;
inline bool OneQuest::has_ineedtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneQuest::set_has_ineedtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneQuest::clear_has_ineedtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneQuest::clear_ineedtype() {
  ineedtype_ = 0;
  clear_has_ineedtype();
}
inline ::google::protobuf::int32 OneQuest::ineedtype() const {
  return ineedtype_;
}
inline void OneQuest::set_ineedtype(::google::protobuf::int32 value) {
  set_has_ineedtype();
  ineedtype_ = value;
}

// optional int64 iNum = 4;
inline bool OneQuest::has_inum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneQuest::set_has_inum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneQuest::clear_has_inum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneQuest::clear_inum() {
  inum_ = GOOGLE_LONGLONG(0);
  clear_has_inum();
}
inline ::google::protobuf::int64 OneQuest::inum() const {
  return inum_;
}
inline void OneQuest::set_inum(::google::protobuf::int64 value) {
  set_has_inum();
  inum_ = value;
}

// optional bool bIsFin = 5;
inline bool OneQuest::has_bisfin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneQuest::set_has_bisfin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneQuest::clear_has_bisfin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneQuest::clear_bisfin() {
  bisfin_ = false;
  clear_has_bisfin();
}
inline bool OneQuest::bisfin() const {
  return bisfin_;
}
inline void OneQuest::set_bisfin(bool value) {
  set_has_bisfin();
  bisfin_ = value;
}

// -------------------------------------------------------------------

// QUESTDBINFO

// repeated .OneQuest stQuestInfos = 1;
inline int QUESTDBINFO::stquestinfos_size() const {
  return stquestinfos_.size();
}
inline void QUESTDBINFO::clear_stquestinfos() {
  stquestinfos_.Clear();
}
inline const ::OneQuest& QUESTDBINFO::stquestinfos(int index) const {
  return stquestinfos_.Get(index);
}
inline ::OneQuest* QUESTDBINFO::mutable_stquestinfos(int index) {
  return stquestinfos_.Mutable(index);
}
inline ::OneQuest* QUESTDBINFO::add_stquestinfos() {
  return stquestinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneQuest >&
QUESTDBINFO::stquestinfos() const {
  return stquestinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneQuest >*
QUESTDBINFO::mutable_stquestinfos() {
  return &stquestinfos_;
}

// optional int32 iAdventureEndTime = 2;
inline bool QUESTDBINFO::has_iadventureendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QUESTDBINFO::set_has_iadventureendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QUESTDBINFO::clear_has_iadventureendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QUESTDBINFO::clear_iadventureendtime() {
  iadventureendtime_ = 0;
  clear_has_iadventureendtime();
}
inline ::google::protobuf::int32 QUESTDBINFO::iadventureendtime() const {
  return iadventureendtime_;
}
inline void QUESTDBINFO::set_iadventureendtime(::google::protobuf::int32 value) {
  set_has_iadventureendtime();
  iadventureendtime_ = value;
}

// optional int32 iAdventureNum = 3;
inline bool QUESTDBINFO::has_iadventurenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QUESTDBINFO::set_has_iadventurenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QUESTDBINFO::clear_has_iadventurenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QUESTDBINFO::clear_iadventurenum() {
  iadventurenum_ = 0;
  clear_has_iadventurenum();
}
inline ::google::protobuf::int32 QUESTDBINFO::iadventurenum() const {
  return iadventurenum_;
}
inline void QUESTDBINFO::set_iadventurenum(::google::protobuf::int32 value) {
  set_has_iadventurenum();
  iadventurenum_ = value;
}

// optional int32 iDailyNextUpdateTime = 4;
inline bool QUESTDBINFO::has_idailynextupdatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QUESTDBINFO::set_has_idailynextupdatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QUESTDBINFO::clear_has_idailynextupdatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QUESTDBINFO::clear_idailynextupdatetime() {
  idailynextupdatetime_ = 0;
  clear_has_idailynextupdatetime();
}
inline ::google::protobuf::int32 QUESTDBINFO::idailynextupdatetime() const {
  return idailynextupdatetime_;
}
inline void QUESTDBINFO::set_idailynextupdatetime(::google::protobuf::int32 value) {
  set_has_idailynextupdatetime();
  idailynextupdatetime_ = value;
}

// optional int32 iAdventNextUpdateTime = 5;
inline bool QUESTDBINFO::has_iadventnextupdatetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QUESTDBINFO::set_has_iadventnextupdatetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QUESTDBINFO::clear_has_iadventnextupdatetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QUESTDBINFO::clear_iadventnextupdatetime() {
  iadventnextupdatetime_ = 0;
  clear_has_iadventnextupdatetime();
}
inline ::google::protobuf::int32 QUESTDBINFO::iadventnextupdatetime() const {
  return iadventnextupdatetime_;
}
inline void QUESTDBINFO::set_iadventnextupdatetime(::google::protobuf::int32 value) {
  set_has_iadventnextupdatetime();
  iadventnextupdatetime_ = value;
}

// optional int32 iAdventUserCost = 6;
inline bool QUESTDBINFO::has_iadventusercost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QUESTDBINFO::set_has_iadventusercost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QUESTDBINFO::clear_has_iadventusercost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QUESTDBINFO::clear_iadventusercost() {
  iadventusercost_ = 0;
  clear_has_iadventusercost();
}
inline ::google::protobuf::int32 QUESTDBINFO::iadventusercost() const {
  return iadventusercost_;
}
inline void QUESTDBINFO::set_iadventusercost(::google::protobuf::int32 value) {
  set_has_iadventusercost();
  iadventusercost_ = value;
}

// optional int32 iAdventShootNum = 7;
inline bool QUESTDBINFO::has_iadventshootnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QUESTDBINFO::set_has_iadventshootnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QUESTDBINFO::clear_has_iadventshootnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QUESTDBINFO::clear_iadventshootnum() {
  iadventshootnum_ = 0;
  clear_has_iadventshootnum();
}
inline ::google::protobuf::int32 QUESTDBINFO::iadventshootnum() const {
  return iadventshootnum_;
}
inline void QUESTDBINFO::set_iadventshootnum(::google::protobuf::int32 value) {
  set_has_iadventshootnum();
  iadventshootnum_ = value;
}

// repeated int32 iGetLiveRewardIDs = 8;
inline int QUESTDBINFO::igetliverewardids_size() const {
  return igetliverewardids_.size();
}
inline void QUESTDBINFO::clear_igetliverewardids() {
  igetliverewardids_.Clear();
}
inline ::google::protobuf::int32 QUESTDBINFO::igetliverewardids(int index) const {
  return igetliverewardids_.Get(index);
}
inline void QUESTDBINFO::set_igetliverewardids(int index, ::google::protobuf::int32 value) {
  igetliverewardids_.Set(index, value);
}
inline void QUESTDBINFO::add_igetliverewardids(::google::protobuf::int32 value) {
  igetliverewardids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QUESTDBINFO::igetliverewardids() const {
  return igetliverewardids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QUESTDBINFO::mutable_igetliverewardids() {
  return &igetliverewardids_;
}

// -------------------------------------------------------------------

// OneSlotInfo

// optional int32 iItemID = 1;
inline bool OneSlotInfo::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneSlotInfo::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneSlotInfo::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneSlotInfo::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 OneSlotInfo::iitemid() const {
  return iitemid_;
}
inline void OneSlotInfo::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// optional int32 iItemNum = 2;
inline bool OneSlotInfo::has_iitemnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneSlotInfo::set_has_iitemnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneSlotInfo::clear_has_iitemnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneSlotInfo::clear_iitemnum() {
  iitemnum_ = 0;
  clear_has_iitemnum();
}
inline ::google::protobuf::int32 OneSlotInfo::iitemnum() const {
  return iitemnum_;
}
inline void OneSlotInfo::set_iitemnum(::google::protobuf::int32 value) {
  set_has_iitemnum();
  iitemnum_ = value;
}

// -------------------------------------------------------------------

// ItemSlotInfo

// repeated .OneSlotInfo stSlots = 1;
inline int ItemSlotInfo::stslots_size() const {
  return stslots_.size();
}
inline void ItemSlotInfo::clear_stslots() {
  stslots_.Clear();
}
inline const ::OneSlotInfo& ItemSlotInfo::stslots(int index) const {
  return stslots_.Get(index);
}
inline ::OneSlotInfo* ItemSlotInfo::mutable_stslots(int index) {
  return stslots_.Mutable(index);
}
inline ::OneSlotInfo* ItemSlotInfo::add_stslots() {
  return stslots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >&
ItemSlotInfo::stslots() const {
  return stslots_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >*
ItemSlotInfo::mutable_stslots() {
  return &stslots_;
}

// -------------------------------------------------------------------

// ITEMDBINFO

// optional .ItemSlotInfo stItemSlot = 1;
inline bool ITEMDBINFO::has_stitemslot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ITEMDBINFO::set_has_stitemslot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ITEMDBINFO::clear_has_stitemslot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ITEMDBINFO::clear_stitemslot() {
  if (stitemslot_ != NULL) stitemslot_->::ItemSlotInfo::Clear();
  clear_has_stitemslot();
}
inline const ::ItemSlotInfo& ITEMDBINFO::stitemslot() const {
  return stitemslot_ != NULL ? *stitemslot_ : *default_instance_->stitemslot_;
}
inline ::ItemSlotInfo* ITEMDBINFO::mutable_stitemslot() {
  set_has_stitemslot();
  if (stitemslot_ == NULL) stitemslot_ = new ::ItemSlotInfo;
  return stitemslot_;
}
inline ::ItemSlotInfo* ITEMDBINFO::release_stitemslot() {
  clear_has_stitemslot();
  ::ItemSlotInfo* temp = stitemslot_;
  stitemslot_ = NULL;
  return temp;
}
inline void ITEMDBINFO::set_allocated_stitemslot(::ItemSlotInfo* stitemslot) {
  delete stitemslot_;
  stitemslot_ = stitemslot;
  if (stitemslot) {
    set_has_stitemslot();
  } else {
    clear_has_stitemslot();
  }
}

// -------------------------------------------------------------------

// FRIENDDBINFO

// -------------------------------------------------------------------

// MailAppendix

// optional int32 iType = 1;
inline bool MailAppendix::has_itype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailAppendix::set_has_itype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailAppendix::clear_has_itype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailAppendix::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 MailAppendix::itype() const {
  return itype_;
}
inline void MailAppendix::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional int32 iID = 2;
inline bool MailAppendix::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailAppendix::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailAppendix::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailAppendix::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 MailAppendix::iid() const {
  return iid_;
}
inline void MailAppendix::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// optional int32 iNum = 3;
inline bool MailAppendix::has_inum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailAppendix::set_has_inum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailAppendix::clear_has_inum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailAppendix::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 MailAppendix::inum() const {
  return inum_;
}
inline void MailAppendix::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// -------------------------------------------------------------------

// OneMailInfo

// optional uint32 uUniqID = 1;
inline bool OneMailInfo::has_uuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneMailInfo::set_has_uuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneMailInfo::clear_has_uuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneMailInfo::clear_uuniqid() {
  uuniqid_ = 0u;
  clear_has_uuniqid();
}
inline ::google::protobuf::uint32 OneMailInfo::uuniqid() const {
  return uuniqid_;
}
inline void OneMailInfo::set_uuniqid(::google::protobuf::uint32 value) {
  set_has_uuniqid();
  uuniqid_ = value;
}

// optional int32 iMailID = 2;
inline bool OneMailInfo::has_imailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneMailInfo::set_has_imailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneMailInfo::clear_has_imailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneMailInfo::clear_imailid() {
  imailid_ = 0;
  clear_has_imailid();
}
inline ::google::protobuf::int32 OneMailInfo::imailid() const {
  return imailid_;
}
inline void OneMailInfo::set_imailid(::google::protobuf::int32 value) {
  set_has_imailid();
  imailid_ = value;
}

// optional int32 iSendTime = 3;
inline bool OneMailInfo::has_isendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneMailInfo::set_has_isendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneMailInfo::clear_has_isendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneMailInfo::clear_isendtime() {
  isendtime_ = 0;
  clear_has_isendtime();
}
inline ::google::protobuf::int32 OneMailInfo::isendtime() const {
  return isendtime_;
}
inline void OneMailInfo::set_isendtime(::google::protobuf::int32 value) {
  set_has_isendtime();
  isendtime_ = value;
}

// optional int32 iMailStat = 4;
inline bool OneMailInfo::has_imailstat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneMailInfo::set_has_imailstat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneMailInfo::clear_has_imailstat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneMailInfo::clear_imailstat() {
  imailstat_ = 0;
  clear_has_imailstat();
}
inline ::google::protobuf::int32 OneMailInfo::imailstat() const {
  return imailstat_;
}
inline void OneMailInfo::set_imailstat(::google::protobuf::int32 value) {
  set_has_imailstat();
  imailstat_ = value;
}

// optional bytes strTitle = 5;
inline bool OneMailInfo::has_strtitle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneMailInfo::set_has_strtitle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneMailInfo::clear_has_strtitle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneMailInfo::clear_strtitle() {
  if (strtitle_ != &::google::protobuf::internal::kEmptyString) {
    strtitle_->clear();
  }
  clear_has_strtitle();
}
inline const ::std::string& OneMailInfo::strtitle() const {
  return *strtitle_;
}
inline void OneMailInfo::set_strtitle(const ::std::string& value) {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  strtitle_->assign(value);
}
inline void OneMailInfo::set_strtitle(const char* value) {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  strtitle_->assign(value);
}
inline void OneMailInfo::set_strtitle(const void* value, size_t size) {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  strtitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneMailInfo::mutable_strtitle() {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  return strtitle_;
}
inline ::std::string* OneMailInfo::release_strtitle() {
  clear_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtitle_;
    strtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneMailInfo::set_allocated_strtitle(::std::string* strtitle) {
  if (strtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete strtitle_;
  }
  if (strtitle) {
    set_has_strtitle();
    strtitle_ = strtitle;
  } else {
    clear_has_strtitle();
    strtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated bytes strParams = 6;
inline int OneMailInfo::strparams_size() const {
  return strparams_.size();
}
inline void OneMailInfo::clear_strparams() {
  strparams_.Clear();
}
inline const ::std::string& OneMailInfo::strparams(int index) const {
  return strparams_.Get(index);
}
inline ::std::string* OneMailInfo::mutable_strparams(int index) {
  return strparams_.Mutable(index);
}
inline void OneMailInfo::set_strparams(int index, const ::std::string& value) {
  strparams_.Mutable(index)->assign(value);
}
inline void OneMailInfo::set_strparams(int index, const char* value) {
  strparams_.Mutable(index)->assign(value);
}
inline void OneMailInfo::set_strparams(int index, const void* value, size_t size) {
  strparams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneMailInfo::add_strparams() {
  return strparams_.Add();
}
inline void OneMailInfo::add_strparams(const ::std::string& value) {
  strparams_.Add()->assign(value);
}
inline void OneMailInfo::add_strparams(const char* value) {
  strparams_.Add()->assign(value);
}
inline void OneMailInfo::add_strparams(const void* value, size_t size) {
  strparams_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OneMailInfo::strparams() const {
  return strparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OneMailInfo::mutable_strparams() {
  return &strparams_;
}

// repeated .MailAppendix stAppendixs = 7;
inline int OneMailInfo::stappendixs_size() const {
  return stappendixs_.size();
}
inline void OneMailInfo::clear_stappendixs() {
  stappendixs_.Clear();
}
inline const ::MailAppendix& OneMailInfo::stappendixs(int index) const {
  return stappendixs_.Get(index);
}
inline ::MailAppendix* OneMailInfo::mutable_stappendixs(int index) {
  return stappendixs_.Mutable(index);
}
inline ::MailAppendix* OneMailInfo::add_stappendixs() {
  return stappendixs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailAppendix >&
OneMailInfo::stappendixs() const {
  return stappendixs_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailAppendix >*
OneMailInfo::mutable_stappendixs() {
  return &stappendixs_;
}

// -------------------------------------------------------------------

// MAILDBINFO

// optional uint32 uSystemMaxID = 1;
inline bool MAILDBINFO::has_usystemmaxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MAILDBINFO::set_has_usystemmaxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MAILDBINFO::clear_has_usystemmaxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MAILDBINFO::clear_usystemmaxid() {
  usystemmaxid_ = 0u;
  clear_has_usystemmaxid();
}
inline ::google::protobuf::uint32 MAILDBINFO::usystemmaxid() const {
  return usystemmaxid_;
}
inline void MAILDBINFO::set_usystemmaxid(::google::protobuf::uint32 value) {
  set_has_usystemmaxid();
  usystemmaxid_ = value;
}

// optional uint32 uPersonalMaxID = 2;
inline bool MAILDBINFO::has_upersonalmaxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MAILDBINFO::set_has_upersonalmaxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MAILDBINFO::clear_has_upersonalmaxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MAILDBINFO::clear_upersonalmaxid() {
  upersonalmaxid_ = 0u;
  clear_has_upersonalmaxid();
}
inline ::google::protobuf::uint32 MAILDBINFO::upersonalmaxid() const {
  return upersonalmaxid_;
}
inline void MAILDBINFO::set_upersonalmaxid(::google::protobuf::uint32 value) {
  set_has_upersonalmaxid();
  upersonalmaxid_ = value;
}

// repeated .OneMailInfo stMails = 3;
inline int MAILDBINFO::stmails_size() const {
  return stmails_.size();
}
inline void MAILDBINFO::clear_stmails() {
  stmails_.Clear();
}
inline const ::OneMailInfo& MAILDBINFO::stmails(int index) const {
  return stmails_.Get(index);
}
inline ::OneMailInfo* MAILDBINFO::mutable_stmails(int index) {
  return stmails_.Mutable(index);
}
inline ::OneMailInfo* MAILDBINFO::add_stmails() {
  return stmails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneMailInfo >&
MAILDBINFO::stmails() const {
  return stmails_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneMailInfo >*
MAILDBINFO::mutable_stmails() {
  return &stmails_;
}

// -------------------------------------------------------------------

// PAYOFFLINEDBINFO

// repeated .RechargeRecord stRecords = 1;
inline int PAYOFFLINEDBINFO::strecords_size() const {
  return strecords_.size();
}
inline void PAYOFFLINEDBINFO::clear_strecords() {
  strecords_.Clear();
}
inline const ::RechargeRecord& PAYOFFLINEDBINFO::strecords(int index) const {
  return strecords_.Get(index);
}
inline ::RechargeRecord* PAYOFFLINEDBINFO::mutable_strecords(int index) {
  return strecords_.Mutable(index);
}
inline ::RechargeRecord* PAYOFFLINEDBINFO::add_strecords() {
  return strecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeRecord >&
PAYOFFLINEDBINFO::strecords() const {
  return strecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeRecord >*
PAYOFFLINEDBINFO::mutable_strecords() {
  return &strecords_;
}

// -------------------------------------------------------------------

// AddResInfo

// optional int32 iResType = 1;
inline bool AddResInfo::has_irestype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddResInfo::set_has_irestype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddResInfo::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddResInfo::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::google::protobuf::int32 AddResInfo::irestype() const {
  return irestype_;
}
inline void AddResInfo::set_irestype(::google::protobuf::int32 value) {
  set_has_irestype();
  irestype_ = value;
}

// optional int32 iAddNum = 2;
inline bool AddResInfo::has_iaddnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddResInfo::set_has_iaddnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddResInfo::clear_has_iaddnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddResInfo::clear_iaddnum() {
  iaddnum_ = 0;
  clear_has_iaddnum();
}
inline ::google::protobuf::int32 AddResInfo::iaddnum() const {
  return iaddnum_;
}
inline void AddResInfo::set_iaddnum(::google::protobuf::int32 value) {
  set_has_iaddnum();
  iaddnum_ = value;
}

// -------------------------------------------------------------------

// RESOFFLINEDBINFO

// repeated .AddResInfo stAddRes = 1;
inline int RESOFFLINEDBINFO::staddres_size() const {
  return staddres_.size();
}
inline void RESOFFLINEDBINFO::clear_staddres() {
  staddres_.Clear();
}
inline const ::AddResInfo& RESOFFLINEDBINFO::staddres(int index) const {
  return staddres_.Get(index);
}
inline ::AddResInfo* RESOFFLINEDBINFO::mutable_staddres(int index) {
  return staddres_.Mutable(index);
}
inline ::AddResInfo* RESOFFLINEDBINFO::add_staddres() {
  return staddres_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AddResInfo >&
RESOFFLINEDBINFO::staddres() const {
  return staddres_;
}
inline ::google::protobuf::RepeatedPtrField< ::AddResInfo >*
RESOFFLINEDBINFO::mutable_staddres() {
  return &staddres_;
}

// -------------------------------------------------------------------

// MAILOFFLINEDBINFO

// repeated .OneMailInfo stMails = 1;
inline int MAILOFFLINEDBINFO::stmails_size() const {
  return stmails_.size();
}
inline void MAILOFFLINEDBINFO::clear_stmails() {
  stmails_.Clear();
}
inline const ::OneMailInfo& MAILOFFLINEDBINFO::stmails(int index) const {
  return stmails_.Get(index);
}
inline ::OneMailInfo* MAILOFFLINEDBINFO::mutable_stmails(int index) {
  return stmails_.Mutable(index);
}
inline ::OneMailInfo* MAILOFFLINEDBINFO::add_stmails() {
  return stmails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneMailInfo >&
MAILOFFLINEDBINFO::stmails() const {
  return stmails_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneMailInfo >*
MAILOFFLINEDBINFO::mutable_stmails() {
  return &stmails_;
}

// -------------------------------------------------------------------

// RESERVED1DBINFO

// optional .PAYOFFLINEDBINFO stPayInfo = 1;
inline bool RESERVED1DBINFO::has_stpayinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RESERVED1DBINFO::set_has_stpayinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RESERVED1DBINFO::clear_has_stpayinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RESERVED1DBINFO::clear_stpayinfo() {
  if (stpayinfo_ != NULL) stpayinfo_->::PAYOFFLINEDBINFO::Clear();
  clear_has_stpayinfo();
}
inline const ::PAYOFFLINEDBINFO& RESERVED1DBINFO::stpayinfo() const {
  return stpayinfo_ != NULL ? *stpayinfo_ : *default_instance_->stpayinfo_;
}
inline ::PAYOFFLINEDBINFO* RESERVED1DBINFO::mutable_stpayinfo() {
  set_has_stpayinfo();
  if (stpayinfo_ == NULL) stpayinfo_ = new ::PAYOFFLINEDBINFO;
  return stpayinfo_;
}
inline ::PAYOFFLINEDBINFO* RESERVED1DBINFO::release_stpayinfo() {
  clear_has_stpayinfo();
  ::PAYOFFLINEDBINFO* temp = stpayinfo_;
  stpayinfo_ = NULL;
  return temp;
}
inline void RESERVED1DBINFO::set_allocated_stpayinfo(::PAYOFFLINEDBINFO* stpayinfo) {
  delete stpayinfo_;
  stpayinfo_ = stpayinfo;
  if (stpayinfo) {
    set_has_stpayinfo();
  } else {
    clear_has_stpayinfo();
  }
}

// optional .RESOFFLINEDBINFO stResInfo = 2;
inline bool RESERVED1DBINFO::has_stresinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RESERVED1DBINFO::set_has_stresinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RESERVED1DBINFO::clear_has_stresinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RESERVED1DBINFO::clear_stresinfo() {
  if (stresinfo_ != NULL) stresinfo_->::RESOFFLINEDBINFO::Clear();
  clear_has_stresinfo();
}
inline const ::RESOFFLINEDBINFO& RESERVED1DBINFO::stresinfo() const {
  return stresinfo_ != NULL ? *stresinfo_ : *default_instance_->stresinfo_;
}
inline ::RESOFFLINEDBINFO* RESERVED1DBINFO::mutable_stresinfo() {
  set_has_stresinfo();
  if (stresinfo_ == NULL) stresinfo_ = new ::RESOFFLINEDBINFO;
  return stresinfo_;
}
inline ::RESOFFLINEDBINFO* RESERVED1DBINFO::release_stresinfo() {
  clear_has_stresinfo();
  ::RESOFFLINEDBINFO* temp = stresinfo_;
  stresinfo_ = NULL;
  return temp;
}
inline void RESERVED1DBINFO::set_allocated_stresinfo(::RESOFFLINEDBINFO* stresinfo) {
  delete stresinfo_;
  stresinfo_ = stresinfo;
  if (stresinfo) {
    set_has_stresinfo();
  } else {
    clear_has_stresinfo();
  }
}

// optional .ItemSlotInfo stItemInfo = 3;
inline bool RESERVED1DBINFO::has_stiteminfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RESERVED1DBINFO::set_has_stiteminfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RESERVED1DBINFO::clear_has_stiteminfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RESERVED1DBINFO::clear_stiteminfo() {
  if (stiteminfo_ != NULL) stiteminfo_->::ItemSlotInfo::Clear();
  clear_has_stiteminfo();
}
inline const ::ItemSlotInfo& RESERVED1DBINFO::stiteminfo() const {
  return stiteminfo_ != NULL ? *stiteminfo_ : *default_instance_->stiteminfo_;
}
inline ::ItemSlotInfo* RESERVED1DBINFO::mutable_stiteminfo() {
  set_has_stiteminfo();
  if (stiteminfo_ == NULL) stiteminfo_ = new ::ItemSlotInfo;
  return stiteminfo_;
}
inline ::ItemSlotInfo* RESERVED1DBINFO::release_stiteminfo() {
  clear_has_stiteminfo();
  ::ItemSlotInfo* temp = stiteminfo_;
  stiteminfo_ = NULL;
  return temp;
}
inline void RESERVED1DBINFO::set_allocated_stiteminfo(::ItemSlotInfo* stiteminfo) {
  delete stiteminfo_;
  stiteminfo_ = stiteminfo;
  if (stiteminfo) {
    set_has_stiteminfo();
  } else {
    clear_has_stiteminfo();
  }
}

// optional .MAILOFFLINEDBINFO stMailInfo = 4;
inline bool RESERVED1DBINFO::has_stmailinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RESERVED1DBINFO::set_has_stmailinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RESERVED1DBINFO::clear_has_stmailinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RESERVED1DBINFO::clear_stmailinfo() {
  if (stmailinfo_ != NULL) stmailinfo_->::MAILOFFLINEDBINFO::Clear();
  clear_has_stmailinfo();
}
inline const ::MAILOFFLINEDBINFO& RESERVED1DBINFO::stmailinfo() const {
  return stmailinfo_ != NULL ? *stmailinfo_ : *default_instance_->stmailinfo_;
}
inline ::MAILOFFLINEDBINFO* RESERVED1DBINFO::mutable_stmailinfo() {
  set_has_stmailinfo();
  if (stmailinfo_ == NULL) stmailinfo_ = new ::MAILOFFLINEDBINFO;
  return stmailinfo_;
}
inline ::MAILOFFLINEDBINFO* RESERVED1DBINFO::release_stmailinfo() {
  clear_has_stmailinfo();
  ::MAILOFFLINEDBINFO* temp = stmailinfo_;
  stmailinfo_ = NULL;
  return temp;
}
inline void RESERVED1DBINFO::set_allocated_stmailinfo(::MAILOFFLINEDBINFO* stmailinfo) {
  delete stmailinfo_;
  stmailinfo_ = stmailinfo;
  if (stmailinfo) {
    set_has_stmailinfo();
  } else {
    clear_has_stmailinfo();
  }
}

// -------------------------------------------------------------------

// ExchangeOrder

// optional int32 iExchangeID = 1;
inline bool ExchangeOrder::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeOrder::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeOrder::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeOrder::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 ExchangeOrder::iexchangeid() const {
  return iexchangeid_;
}
inline void ExchangeOrder::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// optional string strOrderID = 2;
inline bool ExchangeOrder::has_strorderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeOrder::set_has_strorderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeOrder::clear_has_strorderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeOrder::clear_strorderid() {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    strorderid_->clear();
  }
  clear_has_strorderid();
}
inline const ::std::string& ExchangeOrder::strorderid() const {
  return *strorderid_;
}
inline void ExchangeOrder::set_strorderid(const ::std::string& value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void ExchangeOrder::set_strorderid(const char* value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void ExchangeOrder::set_strorderid(const char* value, size_t size) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeOrder::mutable_strorderid() {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  return strorderid_;
}
inline ::std::string* ExchangeOrder::release_strorderid() {
  clear_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strorderid_;
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeOrder::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete strorderid_;
  }
  if (strorderid) {
    set_has_strorderid();
    strorderid_ = strorderid;
  } else {
    clear_has_strorderid();
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPhone = 3;
inline bool ExchangeOrder::has_strphone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeOrder::set_has_strphone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeOrder::clear_has_strphone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeOrder::clear_strphone() {
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    strphone_->clear();
  }
  clear_has_strphone();
}
inline const ::std::string& ExchangeOrder::strphone() const {
  return *strphone_;
}
inline void ExchangeOrder::set_strphone(const ::std::string& value) {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  strphone_->assign(value);
}
inline void ExchangeOrder::set_strphone(const char* value) {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  strphone_->assign(value);
}
inline void ExchangeOrder::set_strphone(const char* value, size_t size) {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  strphone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeOrder::mutable_strphone() {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  return strphone_;
}
inline ::std::string* ExchangeOrder::release_strphone() {
  clear_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strphone_;
    strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeOrder::set_allocated_strphone(::std::string* strphone) {
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strphone_;
  }
  if (strphone) {
    set_has_strphone();
    strphone_ = strphone;
  } else {
    clear_has_strphone();
    strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iExchangeTime = 4;
inline bool ExchangeOrder::has_iexchangetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeOrder::set_has_iexchangetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeOrder::clear_has_iexchangetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeOrder::clear_iexchangetime() {
  iexchangetime_ = 0;
  clear_has_iexchangetime();
}
inline ::google::protobuf::int32 ExchangeOrder::iexchangetime() const {
  return iexchangetime_;
}
inline void ExchangeOrder::set_iexchangetime(::google::protobuf::int32 value) {
  set_has_iexchangetime();
  iexchangetime_ = value;
}

// optional int32 iStat = 5;
inline bool ExchangeOrder::has_istat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangeOrder::set_has_istat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangeOrder::clear_has_istat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangeOrder::clear_istat() {
  istat_ = 0;
  clear_has_istat();
}
inline ::google::protobuf::int32 ExchangeOrder::istat() const {
  return istat_;
}
inline void ExchangeOrder::set_istat(::google::protobuf::int32 value) {
  set_has_istat();
  istat_ = value;
}

// -------------------------------------------------------------------

// ExchangeUser

// optional string strName = 1;
inline bool ExchangeUser::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeUser::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeUser::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeUser::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& ExchangeUser::strname() const {
  return *strname_;
}
inline void ExchangeUser::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ExchangeUser::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ExchangeUser::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeUser::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* ExchangeUser::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeUser::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPhone = 2;
inline bool ExchangeUser::has_strphone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeUser::set_has_strphone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeUser::clear_has_strphone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeUser::clear_strphone() {
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    strphone_->clear();
  }
  clear_has_strphone();
}
inline const ::std::string& ExchangeUser::strphone() const {
  return *strphone_;
}
inline void ExchangeUser::set_strphone(const ::std::string& value) {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  strphone_->assign(value);
}
inline void ExchangeUser::set_strphone(const char* value) {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  strphone_->assign(value);
}
inline void ExchangeUser::set_strphone(const char* value, size_t size) {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  strphone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeUser::mutable_strphone() {
  set_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    strphone_ = new ::std::string;
  }
  return strphone_;
}
inline ::std::string* ExchangeUser::release_strphone() {
  clear_has_strphone();
  if (strphone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strphone_;
    strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeUser::set_allocated_strphone(::std::string* strphone) {
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strphone_;
  }
  if (strphone) {
    set_has_strphone();
    strphone_ = strphone;
  } else {
    clear_has_strphone();
    strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strMailNum = 3;
inline bool ExchangeUser::has_strmailnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeUser::set_has_strmailnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeUser::clear_has_strmailnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeUser::clear_strmailnum() {
  if (strmailnum_ != &::google::protobuf::internal::kEmptyString) {
    strmailnum_->clear();
  }
  clear_has_strmailnum();
}
inline const ::std::string& ExchangeUser::strmailnum() const {
  return *strmailnum_;
}
inline void ExchangeUser::set_strmailnum(const ::std::string& value) {
  set_has_strmailnum();
  if (strmailnum_ == &::google::protobuf::internal::kEmptyString) {
    strmailnum_ = new ::std::string;
  }
  strmailnum_->assign(value);
}
inline void ExchangeUser::set_strmailnum(const char* value) {
  set_has_strmailnum();
  if (strmailnum_ == &::google::protobuf::internal::kEmptyString) {
    strmailnum_ = new ::std::string;
  }
  strmailnum_->assign(value);
}
inline void ExchangeUser::set_strmailnum(const char* value, size_t size) {
  set_has_strmailnum();
  if (strmailnum_ == &::google::protobuf::internal::kEmptyString) {
    strmailnum_ = new ::std::string;
  }
  strmailnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeUser::mutable_strmailnum() {
  set_has_strmailnum();
  if (strmailnum_ == &::google::protobuf::internal::kEmptyString) {
    strmailnum_ = new ::std::string;
  }
  return strmailnum_;
}
inline ::std::string* ExchangeUser::release_strmailnum() {
  clear_has_strmailnum();
  if (strmailnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmailnum_;
    strmailnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeUser::set_allocated_strmailnum(::std::string* strmailnum) {
  if (strmailnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strmailnum_;
  }
  if (strmailnum) {
    set_has_strmailnum();
    strmailnum_ = strmailnum;
  } else {
    clear_has_strmailnum();
    strmailnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strAddress = 4;
inline bool ExchangeUser::has_straddress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeUser::set_has_straddress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeUser::clear_has_straddress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeUser::clear_straddress() {
  if (straddress_ != &::google::protobuf::internal::kEmptyString) {
    straddress_->clear();
  }
  clear_has_straddress();
}
inline const ::std::string& ExchangeUser::straddress() const {
  return *straddress_;
}
inline void ExchangeUser::set_straddress(const ::std::string& value) {
  set_has_straddress();
  if (straddress_ == &::google::protobuf::internal::kEmptyString) {
    straddress_ = new ::std::string;
  }
  straddress_->assign(value);
}
inline void ExchangeUser::set_straddress(const char* value) {
  set_has_straddress();
  if (straddress_ == &::google::protobuf::internal::kEmptyString) {
    straddress_ = new ::std::string;
  }
  straddress_->assign(value);
}
inline void ExchangeUser::set_straddress(const char* value, size_t size) {
  set_has_straddress();
  if (straddress_ == &::google::protobuf::internal::kEmptyString) {
    straddress_ = new ::std::string;
  }
  straddress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeUser::mutable_straddress() {
  set_has_straddress();
  if (straddress_ == &::google::protobuf::internal::kEmptyString) {
    straddress_ = new ::std::string;
  }
  return straddress_;
}
inline ::std::string* ExchangeUser::release_straddress() {
  clear_has_straddress();
  if (straddress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straddress_;
    straddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeUser::set_allocated_straddress(::std::string* straddress) {
  if (straddress_ != &::google::protobuf::internal::kEmptyString) {
    delete straddress_;
  }
  if (straddress) {
    set_has_straddress();
    straddress_ = straddress;
  } else {
    clear_has_straddress();
    straddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strRemarks = 5;
inline bool ExchangeUser::has_strremarks() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangeUser::set_has_strremarks() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangeUser::clear_has_strremarks() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangeUser::clear_strremarks() {
  if (strremarks_ != &::google::protobuf::internal::kEmptyString) {
    strremarks_->clear();
  }
  clear_has_strremarks();
}
inline const ::std::string& ExchangeUser::strremarks() const {
  return *strremarks_;
}
inline void ExchangeUser::set_strremarks(const ::std::string& value) {
  set_has_strremarks();
  if (strremarks_ == &::google::protobuf::internal::kEmptyString) {
    strremarks_ = new ::std::string;
  }
  strremarks_->assign(value);
}
inline void ExchangeUser::set_strremarks(const char* value) {
  set_has_strremarks();
  if (strremarks_ == &::google::protobuf::internal::kEmptyString) {
    strremarks_ = new ::std::string;
  }
  strremarks_->assign(value);
}
inline void ExchangeUser::set_strremarks(const char* value, size_t size) {
  set_has_strremarks();
  if (strremarks_ == &::google::protobuf::internal::kEmptyString) {
    strremarks_ = new ::std::string;
  }
  strremarks_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeUser::mutable_strremarks() {
  set_has_strremarks();
  if (strremarks_ == &::google::protobuf::internal::kEmptyString) {
    strremarks_ = new ::std::string;
  }
  return strremarks_;
}
inline ::std::string* ExchangeUser::release_strremarks() {
  clear_has_strremarks();
  if (strremarks_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strremarks_;
    strremarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeUser::set_allocated_strremarks(::std::string* strremarks) {
  if (strremarks_ != &::google::protobuf::internal::kEmptyString) {
    delete strremarks_;
  }
  if (strremarks) {
    set_has_strremarks();
    strremarks_ = strremarks;
  } else {
    clear_has_strremarks();
    strremarks_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strQQNum = 6;
inline bool ExchangeUser::has_strqqnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExchangeUser::set_has_strqqnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExchangeUser::clear_has_strqqnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExchangeUser::clear_strqqnum() {
  if (strqqnum_ != &::google::protobuf::internal::kEmptyString) {
    strqqnum_->clear();
  }
  clear_has_strqqnum();
}
inline const ::std::string& ExchangeUser::strqqnum() const {
  return *strqqnum_;
}
inline void ExchangeUser::set_strqqnum(const ::std::string& value) {
  set_has_strqqnum();
  if (strqqnum_ == &::google::protobuf::internal::kEmptyString) {
    strqqnum_ = new ::std::string;
  }
  strqqnum_->assign(value);
}
inline void ExchangeUser::set_strqqnum(const char* value) {
  set_has_strqqnum();
  if (strqqnum_ == &::google::protobuf::internal::kEmptyString) {
    strqqnum_ = new ::std::string;
  }
  strqqnum_->assign(value);
}
inline void ExchangeUser::set_strqqnum(const char* value, size_t size) {
  set_has_strqqnum();
  if (strqqnum_ == &::google::protobuf::internal::kEmptyString) {
    strqqnum_ = new ::std::string;
  }
  strqqnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExchangeUser::mutable_strqqnum() {
  set_has_strqqnum();
  if (strqqnum_ == &::google::protobuf::internal::kEmptyString) {
    strqqnum_ = new ::std::string;
  }
  return strqqnum_;
}
inline ::std::string* ExchangeUser::release_strqqnum() {
  clear_has_strqqnum();
  if (strqqnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strqqnum_;
    strqqnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExchangeUser::set_allocated_strqqnum(::std::string* strqqnum) {
  if (strqqnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strqqnum_;
  }
  if (strqqnum) {
    set_has_strqqnum();
    strqqnum_ = strqqnum;
  } else {
    clear_has_strqqnum();
    strqqnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iLastSetTime = 7;
inline bool ExchangeUser::has_ilastsettime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExchangeUser::set_has_ilastsettime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ExchangeUser::clear_has_ilastsettime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ExchangeUser::clear_ilastsettime() {
  ilastsettime_ = 0;
  clear_has_ilastsettime();
}
inline ::google::protobuf::int32 ExchangeUser::ilastsettime() const {
  return ilastsettime_;
}
inline void ExchangeUser::set_ilastsettime(::google::protobuf::int32 value) {
  set_has_ilastsettime();
  ilastsettime_ = value;
}

// repeated uint32 uiLimitInfo = 8;
inline int ExchangeUser::uilimitinfo_size() const {
  return uilimitinfo_.size();
}
inline void ExchangeUser::clear_uilimitinfo() {
  uilimitinfo_.Clear();
}
inline ::google::protobuf::uint32 ExchangeUser::uilimitinfo(int index) const {
  return uilimitinfo_.Get(index);
}
inline void ExchangeUser::set_uilimitinfo(int index, ::google::protobuf::uint32 value) {
  uilimitinfo_.Set(index, value);
}
inline void ExchangeUser::add_uilimitinfo(::google::protobuf::uint32 value) {
  uilimitinfo_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExchangeUser::uilimitinfo() const {
  return uilimitinfo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExchangeUser::mutable_uilimitinfo() {
  return &uilimitinfo_;
}

// -------------------------------------------------------------------

// EXCHANGEDBINFO

// optional .ExchangeUser stUserInfo = 1;
inline bool EXCHANGEDBINFO::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EXCHANGEDBINFO::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EXCHANGEDBINFO::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EXCHANGEDBINFO::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::ExchangeUser::Clear();
  clear_has_stuserinfo();
}
inline const ::ExchangeUser& EXCHANGEDBINFO::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::ExchangeUser* EXCHANGEDBINFO::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::ExchangeUser;
  return stuserinfo_;
}
inline ::ExchangeUser* EXCHANGEDBINFO::release_stuserinfo() {
  clear_has_stuserinfo();
  ::ExchangeUser* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void EXCHANGEDBINFO::set_allocated_stuserinfo(::ExchangeUser* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// repeated .ExchangeOrder stOrders = 6;
inline int EXCHANGEDBINFO::storders_size() const {
  return storders_.size();
}
inline void EXCHANGEDBINFO::clear_storders() {
  storders_.Clear();
}
inline const ::ExchangeOrder& EXCHANGEDBINFO::storders(int index) const {
  return storders_.Get(index);
}
inline ::ExchangeOrder* EXCHANGEDBINFO::mutable_storders(int index) {
  return storders_.Mutable(index);
}
inline ::ExchangeOrder* EXCHANGEDBINFO::add_storders() {
  return storders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExchangeOrder >&
EXCHANGEDBINFO::storders() const {
  return storders_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExchangeOrder >*
EXCHANGEDBINFO::mutable_storders() {
  return &storders_;
}

// -------------------------------------------------------------------

// RechargeRecord

// optional int32 iTime = 1;
inline bool RechargeRecord::has_itime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeRecord::set_has_itime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeRecord::clear_has_itime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeRecord::clear_itime() {
  itime_ = 0;
  clear_has_itime();
}
inline ::google::protobuf::int32 RechargeRecord::itime() const {
  return itime_;
}
inline void RechargeRecord::set_itime(::google::protobuf::int32 value) {
  set_has_itime();
  itime_ = value;
}

// optional int32 iRechargeID = 2;
inline bool RechargeRecord::has_irechargeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeRecord::set_has_irechargeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeRecord::clear_has_irechargeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeRecord::clear_irechargeid() {
  irechargeid_ = 0;
  clear_has_irechargeid();
}
inline ::google::protobuf::int32 RechargeRecord::irechargeid() const {
  return irechargeid_;
}
inline void RechargeRecord::set_irechargeid(::google::protobuf::int32 value) {
  set_has_irechargeid();
  irechargeid_ = value;
}

// optional string strOrderID = 3;
inline bool RechargeRecord::has_strorderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RechargeRecord::set_has_strorderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RechargeRecord::clear_has_strorderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RechargeRecord::clear_strorderid() {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    strorderid_->clear();
  }
  clear_has_strorderid();
}
inline const ::std::string& RechargeRecord::strorderid() const {
  return *strorderid_;
}
inline void RechargeRecord::set_strorderid(const ::std::string& value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void RechargeRecord::set_strorderid(const char* value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void RechargeRecord::set_strorderid(const char* value, size_t size) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RechargeRecord::mutable_strorderid() {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  return strorderid_;
}
inline ::std::string* RechargeRecord::release_strorderid() {
  clear_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strorderid_;
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RechargeRecord::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete strorderid_;
  }
  if (strorderid) {
    set_has_strorderid();
    strorderid_ = strorderid;
  } else {
    clear_has_strorderid();
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RECHARGEDBINFO

// optional int32 iFirstRewardStat = 1;
inline bool RECHARGEDBINFO::has_ifirstrewardstat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RECHARGEDBINFO::set_has_ifirstrewardstat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RECHARGEDBINFO::clear_has_ifirstrewardstat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RECHARGEDBINFO::clear_ifirstrewardstat() {
  ifirstrewardstat_ = 0;
  clear_has_ifirstrewardstat();
}
inline ::google::protobuf::int32 RECHARGEDBINFO::ifirstrewardstat() const {
  return ifirstrewardstat_;
}
inline void RECHARGEDBINFO::set_ifirstrewardstat(::google::protobuf::int32 value) {
  set_has_ifirstrewardstat();
  ifirstrewardstat_ = value;
}

// repeated .RechargeRecord stRecords = 2;
inline int RECHARGEDBINFO::strecords_size() const {
  return strecords_.size();
}
inline void RECHARGEDBINFO::clear_strecords() {
  strecords_.Clear();
}
inline const ::RechargeRecord& RECHARGEDBINFO::strecords(int index) const {
  return strecords_.Get(index);
}
inline ::RechargeRecord* RECHARGEDBINFO::mutable_strecords(int index) {
  return strecords_.Mutable(index);
}
inline ::RechargeRecord* RECHARGEDBINFO::add_strecords() {
  return strecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeRecord >&
RECHARGEDBINFO::strecords() const {
  return strecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeRecord >*
RECHARGEDBINFO::mutable_strecords() {
  return &strecords_;
}

// repeated int32 iRechargeIDs = 3;
inline int RECHARGEDBINFO::irechargeids_size() const {
  return irechargeids_.size();
}
inline void RECHARGEDBINFO::clear_irechargeids() {
  irechargeids_.Clear();
}
inline ::google::protobuf::int32 RECHARGEDBINFO::irechargeids(int index) const {
  return irechargeids_.Get(index);
}
inline void RECHARGEDBINFO::set_irechargeids(int index, ::google::protobuf::int32 value) {
  irechargeids_.Set(index, value);
}
inline void RECHARGEDBINFO::add_irechargeids(::google::protobuf::int32 value) {
  irechargeids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RECHARGEDBINFO::irechargeids() const {
  return irechargeids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RECHARGEDBINFO::mutable_irechargeids() {
  return &irechargeids_;
}

// -------------------------------------------------------------------

// RESERVED2DBINFO

// optional .EXCHANGEDBINFO stExchangeInfo = 1;
inline bool RESERVED2DBINFO::has_stexchangeinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RESERVED2DBINFO::set_has_stexchangeinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RESERVED2DBINFO::clear_has_stexchangeinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RESERVED2DBINFO::clear_stexchangeinfo() {
  if (stexchangeinfo_ != NULL) stexchangeinfo_->::EXCHANGEDBINFO::Clear();
  clear_has_stexchangeinfo();
}
inline const ::EXCHANGEDBINFO& RESERVED2DBINFO::stexchangeinfo() const {
  return stexchangeinfo_ != NULL ? *stexchangeinfo_ : *default_instance_->stexchangeinfo_;
}
inline ::EXCHANGEDBINFO* RESERVED2DBINFO::mutable_stexchangeinfo() {
  set_has_stexchangeinfo();
  if (stexchangeinfo_ == NULL) stexchangeinfo_ = new ::EXCHANGEDBINFO;
  return stexchangeinfo_;
}
inline ::EXCHANGEDBINFO* RESERVED2DBINFO::release_stexchangeinfo() {
  clear_has_stexchangeinfo();
  ::EXCHANGEDBINFO* temp = stexchangeinfo_;
  stexchangeinfo_ = NULL;
  return temp;
}
inline void RESERVED2DBINFO::set_allocated_stexchangeinfo(::EXCHANGEDBINFO* stexchangeinfo) {
  delete stexchangeinfo_;
  stexchangeinfo_ = stexchangeinfo;
  if (stexchangeinfo) {
    set_has_stexchangeinfo();
  } else {
    clear_has_stexchangeinfo();
  }
}

// optional .RECHARGEDBINFO stRechargeInfo = 2;
inline bool RESERVED2DBINFO::has_strechargeinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RESERVED2DBINFO::set_has_strechargeinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RESERVED2DBINFO::clear_has_strechargeinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RESERVED2DBINFO::clear_strechargeinfo() {
  if (strechargeinfo_ != NULL) strechargeinfo_->::RECHARGEDBINFO::Clear();
  clear_has_strechargeinfo();
}
inline const ::RECHARGEDBINFO& RESERVED2DBINFO::strechargeinfo() const {
  return strechargeinfo_ != NULL ? *strechargeinfo_ : *default_instance_->strechargeinfo_;
}
inline ::RECHARGEDBINFO* RESERVED2DBINFO::mutable_strechargeinfo() {
  set_has_strechargeinfo();
  if (strechargeinfo_ == NULL) strechargeinfo_ = new ::RECHARGEDBINFO;
  return strechargeinfo_;
}
inline ::RECHARGEDBINFO* RESERVED2DBINFO::release_strechargeinfo() {
  clear_has_strechargeinfo();
  ::RECHARGEDBINFO* temp = strechargeinfo_;
  strechargeinfo_ = NULL;
  return temp;
}
inline void RESERVED2DBINFO::set_allocated_strechargeinfo(::RECHARGEDBINFO* strechargeinfo) {
  delete strechargeinfo_;
  strechargeinfo_ = strechargeinfo;
  if (strechargeinfo) {
    set_has_strechargeinfo();
  } else {
    clear_has_strechargeinfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FirstRewardType>() {
  return ::FirstRewardType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_5fUSERDB_2eproto__INCLUDED
