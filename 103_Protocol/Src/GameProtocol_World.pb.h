// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol_World.proto

#ifndef PROTOBUF_GameProtocol_5fWorld_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_5fWorld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol_Common.pb.h"
#include "GameProtocol_USERDB.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

class World_ZoneChanged_Notify;
class World_CreateRole_Request;
class World_CreateRole_Response;
class World_FetchRole_Request;
class World_FetchRole_Response;
class World_UpdateRole_Request;
class World_UpdateRole_Response;
class KickerInfo;
class World_KickRole_Request;
class World_KickRole_Response;
class ZoneOnlineInfo;
class WorldOnlineInfo;
class World_OnlineStat_Request;
class World_OnlineStat_Response;
class World_Chat_Notify;
class UpdateRankInfo;
class World_UpdateRank_Request;
class World_UpdateRank_Response;
class World_GetRankInfo_Request;
class World_GetRankInfo_Response;
class World_SendMail_Request;
class World_SendMail_Response;
class World_AddLimitNum_Request;
class World_AddLimitNum_Response;
class World_UpdatePrizeInfo_Request;
class World_UpdateBetInfo_Request;
class World_UpdateLasvegas_Notify;
class World_UserRecharge_Request;
class World_UserRecharge_Response;
class GameMaster_Request;
class GameMaster_Response;
class World_SystemMailID_Notify;
class World_GetSystemMail_Request;
class World_GetSystemMail_Response;
class OnlineExchange;
class World_OnlineExchange_Request;
class World_OnlineExchange_Response;
class World_GetUserInfo_Request;
class World_GetUserInfo_Response;
class World_WriteLog_Request;
class World_GetCardNo_Request;
class World_GetCardNo_Response;
class World_AddExcRec_Request;
class World_AddExcRec_Response;

enum LimitReasonType {
  LIMIT_REASON_INVALID = 0,
  LIMIT_REASON_EXCHANGE = 1,
  LIMIT_REASON_GM = 2
};
bool LimitReasonType_IsValid(int value);
const LimitReasonType LimitReasonType_MIN = LIMIT_REASON_INVALID;
const LimitReasonType LimitReasonType_MAX = LIMIT_REASON_GM;
const int LimitReasonType_ARRAYSIZE = LimitReasonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LimitReasonType_descriptor();
inline const ::std::string& LimitReasonType_Name(LimitReasonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LimitReasonType_descriptor(), value);
}
inline bool LimitReasonType_Parse(
    const ::std::string& name, LimitReasonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LimitReasonType>(
    LimitReasonType_descriptor(), name, value);
}
enum RechargeType {
  RECHARGE_TYPE_INVALID = 0,
  RECHARGE_TYPE_COIN = 1,
  RECHARGE_TYPE_MONTH = 2,
  RECHARGE_TYPE_ITEM = 3,
  RECHARGE_TYPE_DIAMOND = 4
};
bool RechargeType_IsValid(int value);
const RechargeType RechargeType_MIN = RECHARGE_TYPE_INVALID;
const RechargeType RechargeType_MAX = RECHARGE_TYPE_DIAMOND;
const int RechargeType_ARRAYSIZE = RechargeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RechargeType_descriptor();
inline const ::std::string& RechargeType_Name(RechargeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RechargeType_descriptor(), value);
}
inline bool RechargeType_Parse(
    const ::std::string& name, RechargeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RechargeType>(
    RechargeType_descriptor(), name, value);
}
enum MailReasonType {
  MAIL_REASON_INVALID = 0,
  MAIL_REASON_NORMAL = 1,
  MAIL_REASON_VIPLV = 2
};
bool MailReasonType_IsValid(int value);
const MailReasonType MailReasonType_MIN = MAIL_REASON_INVALID;
const MailReasonType MailReasonType_MAX = MAIL_REASON_VIPLV;
const int MailReasonType_ARRAYSIZE = MailReasonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailReasonType_descriptor();
inline const ::std::string& MailReasonType_Name(MailReasonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailReasonType_descriptor(), value);
}
inline bool MailReasonType_Parse(
    const ::std::string& name, MailReasonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailReasonType>(
    MailReasonType_descriptor(), name, value);
}
enum OnlineExchangeType {
  ONLINE_EXCHANGE_INVALID = 0,
  ONLINE_EXCHANGE_BILL = 1,
  ONLINE_EXCHANGE_MAX = 2
};
bool OnlineExchangeType_IsValid(int value);
const OnlineExchangeType OnlineExchangeType_MIN = ONLINE_EXCHANGE_INVALID;
const OnlineExchangeType OnlineExchangeType_MAX = ONLINE_EXCHANGE_MAX;
const int OnlineExchangeType_ARRAYSIZE = OnlineExchangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OnlineExchangeType_descriptor();
inline const ::std::string& OnlineExchangeType_Name(OnlineExchangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OnlineExchangeType_descriptor(), value);
}
inline bool OnlineExchangeType_Parse(
    const ::std::string& name, OnlineExchangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OnlineExchangeType>(
    OnlineExchangeType_descriptor(), name, value);
}
// ===================================================================

class World_ZoneChanged_Notify : public ::google::protobuf::Message {
 public:
  World_ZoneChanged_Notify();
  virtual ~World_ZoneChanged_Notify();

  World_ZoneChanged_Notify(const World_ZoneChanged_Notify& from);

  inline World_ZoneChanged_Notify& operator=(const World_ZoneChanged_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_ZoneChanged_Notify& default_instance();

  void Swap(World_ZoneChanged_Notify* other);

  // implements Message ----------------------------------------------

  World_ZoneChanged_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_ZoneChanged_Notify& from);
  void MergeFrom(const World_ZoneChanged_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);

  // optional .ZoneList stZones = 2;
  inline bool has_stzones() const;
  inline void clear_stzones();
  static const int kStZonesFieldNumber = 2;
  inline const ::ZoneList& stzones() const;
  inline ::ZoneList* mutable_stzones();
  inline ::ZoneList* release_stzones();
  inline void set_allocated_stzones(::ZoneList* stzones);

  // @@protoc_insertion_point(class_scope:World_ZoneChanged_Notify)
 private:
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_stzones();
  inline void clear_has_stzones();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ZoneList* stzones_;
  ::google::protobuf::uint32 worldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_ZoneChanged_Notify* default_instance_;
};
// -------------------------------------------------------------------

class World_CreateRole_Request : public ::google::protobuf::Message {
 public:
  World_CreateRole_Request();
  virtual ~World_CreateRole_Request();

  World_CreateRole_Request(const World_CreateRole_Request& from);

  inline World_CreateRole_Request& operator=(const World_CreateRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_CreateRole_Request& default_instance();

  void Swap(World_CreateRole_Request* other);

  // implements Message ----------------------------------------------

  World_CreateRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_CreateRole_Request& from);
  void MergeFrom(const World_CreateRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 world = 2;
  inline bool has_world() const;
  inline void clear_world();
  static const int kWorldFieldNumber = 2;
  inline ::google::protobuf::uint32 world() const;
  inline void set_world(::google::protobuf::uint32 value);

  // optional int32 iRealNameStat = 3;
  inline bool has_irealnamestat() const;
  inline void clear_irealnamestat();
  static const int kIRealNameStatFieldNumber = 3;
  inline ::google::protobuf::int32 irealnamestat() const;
  inline void set_irealnamestat(::google::protobuf::int32 value);

  // optional .GameUserInfo stBirthData = 4;
  inline bool has_stbirthdata() const;
  inline void clear_stbirthdata();
  static const int kStBirthDataFieldNumber = 4;
  inline const ::GameUserInfo& stbirthdata() const;
  inline ::GameUserInfo* mutable_stbirthdata();
  inline ::GameUserInfo* release_stbirthdata();
  inline void set_allocated_stbirthdata(::GameUserInfo* stbirthdata);

  // optional .KickerInfo stKicker = 5;
  inline bool has_stkicker() const;
  inline void clear_stkicker();
  static const int kStKickerFieldNumber = 5;
  inline const ::KickerInfo& stkicker() const;
  inline ::KickerInfo* mutable_stkicker();
  inline ::KickerInfo* release_stkicker();
  inline void set_allocated_stkicker(::KickerInfo* stkicker);

  // @@protoc_insertion_point(class_scope:World_CreateRole_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_world();
  inline void clear_has_world();
  inline void set_has_irealnamestat();
  inline void clear_has_irealnamestat();
  inline void set_has_stbirthdata();
  inline void clear_has_stbirthdata();
  inline void set_has_stkicker();
  inline void clear_has_stkicker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 world_;
  ::GameUserInfo* stbirthdata_;
  ::KickerInfo* stkicker_;
  ::google::protobuf::int32 irealnamestat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_CreateRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_CreateRole_Response : public ::google::protobuf::Message {
 public:
  World_CreateRole_Response();
  virtual ~World_CreateRole_Response();

  World_CreateRole_Response(const World_CreateRole_Response& from);

  inline World_CreateRole_Response& operator=(const World_CreateRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_CreateRole_Response& default_instance();

  void Swap(World_CreateRole_Response* other);

  // implements Message ----------------------------------------------

  World_CreateRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_CreateRole_Response& from);
  void MergeFrom(const World_CreateRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iRealNameStat = 3;
  inline bool has_irealnamestat() const;
  inline void clear_irealnamestat();
  static const int kIRealNameStatFieldNumber = 3;
  inline ::google::protobuf::int32 irealnamestat() const;
  inline void set_irealnamestat(::google::protobuf::int32 value);

  // optional .KickerInfo stKicker = 4;
  inline bool has_stkicker() const;
  inline void clear_stkicker();
  static const int kStKickerFieldNumber = 4;
  inline const ::KickerInfo& stkicker() const;
  inline ::KickerInfo* mutable_stkicker();
  inline ::KickerInfo* release_stkicker();
  inline void set_allocated_stkicker(::KickerInfo* stkicker);

  // @@protoc_insertion_point(class_scope:World_CreateRole_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_irealnamestat();
  inline void clear_has_irealnamestat();
  inline void set_has_stkicker();
  inline void clear_has_stkicker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 irealnamestat_;
  ::KickerInfo* stkicker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_CreateRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_FetchRole_Request : public ::google::protobuf::Message {
 public:
  World_FetchRole_Request();
  virtual ~World_FetchRole_Request();

  World_FetchRole_Request(const World_FetchRole_Request& from);

  inline World_FetchRole_Request& operator=(const World_FetchRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_FetchRole_Request& default_instance();

  void Swap(World_FetchRole_Request* other);

  // implements Message ----------------------------------------------

  World_FetchRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_FetchRole_Request& from);
  void MergeFrom(const World_FetchRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional bool bIsLogin = 2;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 2;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // optional int32 iReqID = 4;
  inline bool has_ireqid() const;
  inline void clear_ireqid();
  static const int kIReqIDFieldNumber = 4;
  inline ::google::protobuf::int32 ireqid() const;
  inline void set_ireqid(::google::protobuf::int32 value);

  // optional .KickerInfo stKicker = 5;
  inline bool has_stkicker() const;
  inline void clear_stkicker();
  static const int kStKickerFieldNumber = 5;
  inline const ::KickerInfo& stkicker() const;
  inline ::KickerInfo* mutable_stkicker();
  inline ::KickerInfo* release_stkicker();
  inline void set_allocated_stkicker(::KickerInfo* stkicker);

  // @@protoc_insertion_point(class_scope:World_FetchRole_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();
  inline void set_has_ireqid();
  inline void clear_has_ireqid();
  inline void set_has_stkicker();
  inline void clear_has_stkicker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  bool bislogin_;
  ::google::protobuf::int32 ireqid_;
  ::KickerInfo* stkicker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_FetchRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_FetchRole_Response : public ::google::protobuf::Message {
 public:
  World_FetchRole_Response();
  virtual ~World_FetchRole_Response();

  World_FetchRole_Response(const World_FetchRole_Response& from);

  inline World_FetchRole_Response& operator=(const World_FetchRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_FetchRole_Response& default_instance();

  void Swap(World_FetchRole_Response* other);

  // implements Message ----------------------------------------------

  World_FetchRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_FetchRole_Response& from);
  void MergeFrom(const World_FetchRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional bool bExist = 3;
  inline bool has_bexist() const;
  inline void clear_bexist();
  static const int kBExistFieldNumber = 3;
  inline bool bexist() const;
  inline void set_bexist(bool value);

  // optional bool bIsLogin = 4;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 4;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // optional .GameUserInfo stUserInfo = 5;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 5;
  inline const ::GameUserInfo& stuserinfo() const;
  inline ::GameUserInfo* mutable_stuserinfo();
  inline ::GameUserInfo* release_stuserinfo();
  inline void set_allocated_stuserinfo(::GameUserInfo* stuserinfo);

  // optional .KickerInfo stKicker = 6;
  inline bool has_stkicker() const;
  inline void clear_stkicker();
  static const int kStKickerFieldNumber = 6;
  inline const ::KickerInfo& stkicker() const;
  inline ::KickerInfo* mutable_stkicker();
  inline ::KickerInfo* release_stkicker();
  inline void set_allocated_stkicker(::KickerInfo* stkicker);

  // @@protoc_insertion_point(class_scope:World_FetchRole_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_bexist();
  inline void clear_has_bexist();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();
  inline void set_has_stkicker();
  inline void clear_has_stkicker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;
  bool bexist_;
  bool bislogin_;
  ::GameUserInfo* stuserinfo_;
  ::KickerInfo* stkicker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_FetchRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateRole_Request : public ::google::protobuf::Message {
 public:
  World_UpdateRole_Request();
  virtual ~World_UpdateRole_Request();

  World_UpdateRole_Request(const World_UpdateRole_Request& from);

  inline World_UpdateRole_Request& operator=(const World_UpdateRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateRole_Request& default_instance();

  void Swap(World_UpdateRole_Request* other);

  // implements Message ----------------------------------------------

  World_UpdateRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateRole_Request& from);
  void MergeFrom(const World_UpdateRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iReqID = 2;
  inline bool has_ireqid() const;
  inline void clear_ireqid();
  static const int kIReqIDFieldNumber = 2;
  inline ::google::protobuf::int32 ireqid() const;
  inline void set_ireqid(::google::protobuf::int32 value);

  // optional .GameUserInfo stUserInfo = 3;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 3;
  inline const ::GameUserInfo& stuserinfo() const;
  inline ::GameUserInfo* mutable_stuserinfo();
  inline ::GameUserInfo* release_stuserinfo();
  inline void set_allocated_stuserinfo(::GameUserInfo* stuserinfo);

  // optional bool bNeedResponse = 4;
  inline bool has_bneedresponse() const;
  inline void clear_bneedresponse();
  static const int kBNeedResponseFieldNumber = 4;
  inline bool bneedresponse() const;
  inline void set_bneedresponse(bool value);

  // @@protoc_insertion_point(class_scope:World_UpdateRole_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_ireqid();
  inline void clear_has_ireqid();
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();
  inline void set_has_bneedresponse();
  inline void clear_has_bneedresponse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::GameUserInfo* stuserinfo_;
  ::google::protobuf::int32 ireqid_;
  bool bneedresponse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateRole_Response : public ::google::protobuf::Message {
 public:
  World_UpdateRole_Response();
  virtual ~World_UpdateRole_Response();

  World_UpdateRole_Response(const World_UpdateRole_Response& from);

  inline World_UpdateRole_Response& operator=(const World_UpdateRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateRole_Response& default_instance();

  void Swap(World_UpdateRole_Response* other);

  // implements Message ----------------------------------------------

  World_UpdateRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateRole_Response& from);
  void MergeFrom(const World_UpdateRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iResult = 2;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 2;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_UpdateRole_Response)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class KickerInfo : public ::google::protobuf::Message {
 public:
  KickerInfo();
  virtual ~KickerInfo();

  KickerInfo(const KickerInfo& from);

  inline KickerInfo& operator=(const KickerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickerInfo& default_instance();

  void Swap(KickerInfo* other);

  // implements Message ----------------------------------------------

  KickerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickerInfo& from);
  void MergeFrom(const KickerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFromWorldID = 1;
  inline bool has_ifromworldid() const;
  inline void clear_ifromworldid();
  static const int kIFromWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 ifromworldid() const;
  inline void set_ifromworldid(::google::protobuf::int32 value);

  // optional int32 iFromZoneID = 2;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional int32 iSessionID = 3;
  inline bool has_isessionid() const;
  inline void clear_isessionid();
  static const int kISessionIDFieldNumber = 3;
  inline ::google::protobuf::int32 isessionid() const;
  inline void set_isessionid(::google::protobuf::int32 value);

  // optional .RoleID stRoleID = 4;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 4;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional string strNickName = 5;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 5;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // optional string strChannel = 6;
  inline bool has_strchannel() const;
  inline void clear_strchannel();
  static const int kStrChannelFieldNumber = 6;
  inline const ::std::string& strchannel() const;
  inline void set_strchannel(const ::std::string& value);
  inline void set_strchannel(const char* value);
  inline void set_strchannel(const char* value, size_t size);
  inline ::std::string* mutable_strchannel();
  inline ::std::string* release_strchannel();
  inline void set_allocated_strchannel(::std::string* strchannel);

  // optional int32 iRealNameStat = 7;
  inline bool has_irealnamestat() const;
  inline void clear_irealnamestat();
  static const int kIRealNameStatFieldNumber = 7;
  inline ::google::protobuf::int32 irealnamestat() const;
  inline void set_irealnamestat(::google::protobuf::int32 value);

  // optional string strAccount = 8;
  inline bool has_straccount() const;
  inline void clear_straccount();
  static const int kStrAccountFieldNumber = 8;
  inline const ::std::string& straccount() const;
  inline void set_straccount(const ::std::string& value);
  inline void set_straccount(const char* value);
  inline void set_straccount(const char* value, size_t size);
  inline ::std::string* mutable_straccount();
  inline ::std::string* release_straccount();
  inline void set_allocated_straccount(::std::string* straccount);

  // optional string strDeviceID = 9;
  inline bool has_strdeviceid() const;
  inline void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 9;
  inline const ::std::string& strdeviceid() const;
  inline void set_strdeviceid(const ::std::string& value);
  inline void set_strdeviceid(const char* value);
  inline void set_strdeviceid(const char* value, size_t size);
  inline ::std::string* mutable_strdeviceid();
  inline ::std::string* release_strdeviceid();
  inline void set_allocated_strdeviceid(::std::string* strdeviceid);

  // @@protoc_insertion_point(class_scope:KickerInfo)
 private:
  inline void set_has_ifromworldid();
  inline void clear_has_ifromworldid();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_isessionid();
  inline void clear_has_isessionid();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_strchannel();
  inline void clear_has_strchannel();
  inline void set_has_irealnamestat();
  inline void clear_has_irealnamestat();
  inline void set_has_straccount();
  inline void clear_has_straccount();
  inline void set_has_strdeviceid();
  inline void clear_has_strdeviceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifromworldid_;
  ::google::protobuf::int32 ifromzoneid_;
  ::RoleID* stroleid_;
  ::std::string* strnickname_;
  ::google::protobuf::int32 isessionid_;
  ::google::protobuf::int32 irealnamestat_;
  ::std::string* strchannel_;
  ::std::string* straccount_;
  ::std::string* strdeviceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static KickerInfo* default_instance_;
};
// -------------------------------------------------------------------

class World_KickRole_Request : public ::google::protobuf::Message {
 public:
  World_KickRole_Request();
  virtual ~World_KickRole_Request();

  World_KickRole_Request(const World_KickRole_Request& from);

  inline World_KickRole_Request& operator=(const World_KickRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_KickRole_Request& default_instance();

  void Swap(World_KickRole_Request* other);

  // implements Message ----------------------------------------------

  World_KickRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_KickRole_Request& from);
  void MergeFrom(const World_KickRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bIsLogin = 1;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 1;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // optional .KickerInfo stKicker = 2;
  inline bool has_stkicker() const;
  inline void clear_stkicker();
  static const int kStKickerFieldNumber = 2;
  inline const ::KickerInfo& stkicker() const;
  inline ::KickerInfo* mutable_stkicker();
  inline ::KickerInfo* release_stkicker();
  inline void set_allocated_stkicker(::KickerInfo* stkicker);

  // optional uint32 uKickedUin = 3;
  inline bool has_ukickeduin() const;
  inline void clear_ukickeduin();
  static const int kUKickedUinFieldNumber = 3;
  inline ::google::protobuf::uint32 ukickeduin() const;
  inline void set_ukickeduin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:World_KickRole_Request)
 private:
  inline void set_has_bislogin();
  inline void clear_has_bislogin();
  inline void set_has_stkicker();
  inline void clear_has_stkicker();
  inline void set_has_ukickeduin();
  inline void clear_has_ukickeduin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::KickerInfo* stkicker_;
  bool bislogin_;
  ::google::protobuf::uint32 ukickeduin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_KickRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_KickRole_Response : public ::google::protobuf::Message {
 public:
  World_KickRole_Response();
  virtual ~World_KickRole_Response();

  World_KickRole_Response(const World_KickRole_Response& from);

  inline World_KickRole_Response& operator=(const World_KickRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_KickRole_Response& default_instance();

  void Swap(World_KickRole_Response* other);

  // implements Message ----------------------------------------------

  World_KickRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_KickRole_Response& from);
  void MergeFrom(const World_KickRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional bool bIsLogin = 2;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 2;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // optional .KickerInfo stKicker = 3;
  inline bool has_stkicker() const;
  inline void clear_stkicker();
  static const int kStKickerFieldNumber = 3;
  inline const ::KickerInfo& stkicker() const;
  inline ::KickerInfo* mutable_stkicker();
  inline ::KickerInfo* release_stkicker();
  inline void set_allocated_stkicker(::KickerInfo* stkicker);

  // optional uint32 uKickedUin = 4;
  inline bool has_ukickeduin() const;
  inline void clear_ukickeduin();
  static const int kUKickedUinFieldNumber = 4;
  inline ::google::protobuf::uint32 ukickeduin() const;
  inline void set_ukickeduin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:World_KickRole_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();
  inline void set_has_stkicker();
  inline void clear_has_stkicker();
  inline void set_has_ukickeduin();
  inline void clear_has_ukickeduin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  bool bislogin_;
  ::KickerInfo* stkicker_;
  ::google::protobuf::uint32 ukickeduin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_KickRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class ZoneOnlineInfo : public ::google::protobuf::Message {
 public:
  ZoneOnlineInfo();
  virtual ~ZoneOnlineInfo();

  ZoneOnlineInfo(const ZoneOnlineInfo& from);

  inline ZoneOnlineInfo& operator=(const ZoneOnlineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneOnlineInfo& default_instance();

  void Swap(ZoneOnlineInfo* other);

  // implements Message ----------------------------------------------

  ZoneOnlineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneOnlineInfo& from);
  void MergeFrom(const ZoneOnlineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iZoneID = 1;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 1;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iRoleNum = 2;
  inline bool has_irolenum() const;
  inline void clear_irolenum();
  static const int kIRoleNumFieldNumber = 2;
  inline ::google::protobuf::int32 irolenum() const;
  inline void set_irolenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneOnlineInfo)
 private:
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_irolenum();
  inline void clear_has_irolenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::int32 irolenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static ZoneOnlineInfo* default_instance_;
};
// -------------------------------------------------------------------

class WorldOnlineInfo : public ::google::protobuf::Message {
 public:
  WorldOnlineInfo();
  virtual ~WorldOnlineInfo();

  WorldOnlineInfo(const WorldOnlineInfo& from);

  inline WorldOnlineInfo& operator=(const WorldOnlineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldOnlineInfo& default_instance();

  void Swap(WorldOnlineInfo* other);

  // implements Message ----------------------------------------------

  WorldOnlineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldOnlineInfo& from);
  void MergeFrom(const WorldOnlineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional int32 iOnlineRoleNum = 2;
  inline bool has_ionlinerolenum() const;
  inline void clear_ionlinerolenum();
  static const int kIOnlineRoleNumFieldNumber = 2;
  inline ::google::protobuf::int32 ionlinerolenum() const;
  inline void set_ionlinerolenum(::google::protobuf::int32 value);

  // optional int32 iRegisterNum = 3;
  inline bool has_iregisternum() const;
  inline void clear_iregisternum();
  static const int kIRegisterNumFieldNumber = 3;
  inline ::google::protobuf::int32 iregisternum() const;
  inline void set_iregisternum(::google::protobuf::int32 value);

  // optional int32 iMaxOnlineNum = 4;
  inline bool has_imaxonlinenum() const;
  inline void clear_imaxonlinenum();
  static const int kIMaxOnlineNumFieldNumber = 4;
  inline ::google::protobuf::int32 imaxonlinenum() const;
  inline void set_imaxonlinenum(::google::protobuf::int32 value);

  // optional int32 iMaxRegisterNum = 5;
  inline bool has_imaxregisternum() const;
  inline void clear_imaxregisternum();
  static const int kIMaxRegisterNumFieldNumber = 5;
  inline ::google::protobuf::int32 imaxregisternum() const;
  inline void set_imaxregisternum(::google::protobuf::int32 value);

  // optional int32 iActiveZoneNum = 6;
  inline bool has_iactivezonenum() const;
  inline void clear_iactivezonenum();
  static const int kIActiveZoneNumFieldNumber = 6;
  inline ::google::protobuf::int32 iactivezonenum() const;
  inline void set_iactivezonenum(::google::protobuf::int32 value);

  // repeated .ZoneOnlineInfo stZoneInfos = 7;
  inline int stzoneinfos_size() const;
  inline void clear_stzoneinfos();
  static const int kStZoneInfosFieldNumber = 7;
  inline const ::ZoneOnlineInfo& stzoneinfos(int index) const;
  inline ::ZoneOnlineInfo* mutable_stzoneinfos(int index);
  inline ::ZoneOnlineInfo* add_stzoneinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >&
      stzoneinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >*
      mutable_stzoneinfos();

  // @@protoc_insertion_point(class_scope:WorldOnlineInfo)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_ionlinerolenum();
  inline void clear_has_ionlinerolenum();
  inline void set_has_iregisternum();
  inline void clear_has_iregisternum();
  inline void set_has_imaxonlinenum();
  inline void clear_has_imaxonlinenum();
  inline void set_has_imaxregisternum();
  inline void clear_has_imaxregisternum();
  inline void set_has_iactivezonenum();
  inline void clear_has_iactivezonenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 ionlinerolenum_;
  ::google::protobuf::int32 iregisternum_;
  ::google::protobuf::int32 imaxonlinenum_;
  ::google::protobuf::int32 imaxregisternum_;
  ::google::protobuf::int32 iactivezonenum_;
  ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo > stzoneinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static WorldOnlineInfo* default_instance_;
};
// -------------------------------------------------------------------

class World_OnlineStat_Request : public ::google::protobuf::Message {
 public:
  World_OnlineStat_Request();
  virtual ~World_OnlineStat_Request();

  World_OnlineStat_Request(const World_OnlineStat_Request& from);

  inline World_OnlineStat_Request& operator=(const World_OnlineStat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_OnlineStat_Request& default_instance();

  void Swap(World_OnlineStat_Request* other);

  // implements Message ----------------------------------------------

  World_OnlineStat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_OnlineStat_Request& from);
  void MergeFrom(const World_OnlineStat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional .WorldOnlineInfo stWorldInfo = 2;
  inline bool has_stworldinfo() const;
  inline void clear_stworldinfo();
  static const int kStWorldInfoFieldNumber = 2;
  inline const ::WorldOnlineInfo& stworldinfo() const;
  inline ::WorldOnlineInfo* mutable_stworldinfo();
  inline ::WorldOnlineInfo* release_stworldinfo();
  inline void set_allocated_stworldinfo(::WorldOnlineInfo* stworldinfo);

  // optional int32 uRecordTime = 3;
  inline bool has_urecordtime() const;
  inline void clear_urecordtime();
  static const int kURecordTimeFieldNumber = 3;
  inline ::google::protobuf::int32 urecordtime() const;
  inline void set_urecordtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_OnlineStat_Request)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_stworldinfo();
  inline void clear_has_stworldinfo();
  inline void set_has_urecordtime();
  inline void clear_has_urecordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::WorldOnlineInfo* stworldinfo_;
  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 urecordtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_OnlineStat_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_OnlineStat_Response : public ::google::protobuf::Message {
 public:
  World_OnlineStat_Response();
  virtual ~World_OnlineStat_Response();

  World_OnlineStat_Response(const World_OnlineStat_Response& from);

  inline World_OnlineStat_Response& operator=(const World_OnlineStat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_OnlineStat_Response& default_instance();

  void Swap(World_OnlineStat_Response* other);

  // implements Message ----------------------------------------------

  World_OnlineStat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_OnlineStat_Response& from);
  void MergeFrom(const World_OnlineStat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional int32 iInstanceID = 2;
  inline bool has_iinstanceid() const;
  inline void clear_iinstanceid();
  static const int kIInstanceIDFieldNumber = 2;
  inline ::google::protobuf::int32 iinstanceid() const;
  inline void set_iinstanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_OnlineStat_Response)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_iinstanceid();
  inline void clear_has_iinstanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 iinstanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_OnlineStat_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_Chat_Notify : public ::google::protobuf::Message {
 public:
  World_Chat_Notify();
  virtual ~World_Chat_Notify();

  World_Chat_Notify(const World_Chat_Notify& from);

  inline World_Chat_Notify& operator=(const World_Chat_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_Chat_Notify& default_instance();

  void Swap(World_Chat_Notify* other);

  // implements Message ----------------------------------------------

  World_Chat_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_Chat_Notify& from);
  void MergeFrom(const World_Chat_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
  inline bool has_ichannel() const;
  inline void clear_ichannel();
  static const int kIChannelFieldNumber = 1;
  inline ::ChatChannelType ichannel() const;
  inline void set_ichannel(::ChatChannelType value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iZoneID = 4;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 4;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional string szNickName = 3;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 3;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // optional .RoleID stTargetID = 5;
  inline bool has_sttargetid() const;
  inline void clear_sttargetid();
  static const int kStTargetIDFieldNumber = 5;
  inline const ::RoleID& sttargetid() const;
  inline ::RoleID* mutable_sttargetid();
  inline ::RoleID* release_sttargetid();
  inline void set_allocated_sttargetid(::RoleID* sttargetid);

  // optional string szMessage = 6;
  inline bool has_szmessage() const;
  inline void clear_szmessage();
  static const int kSzMessageFieldNumber = 6;
  inline const ::std::string& szmessage() const;
  inline void set_szmessage(const ::std::string& value);
  inline void set_szmessage(const char* value);
  inline void set_szmessage(const char* value, size_t size);
  inline ::std::string* mutable_szmessage();
  inline ::std::string* release_szmessage();
  inline void set_allocated_szmessage(::std::string* szmessage);

  // @@protoc_insertion_point(class_scope:World_Chat_Notify)
 private:
  inline void set_has_ichannel();
  inline void clear_has_ichannel();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();
  inline void set_has_sttargetid();
  inline void clear_has_sttargetid();
  inline void set_has_szmessage();
  inline void clear_has_szmessage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  int ichannel_;
  ::google::protobuf::int32 izoneid_;
  ::std::string* sznickname_;
  ::RoleID* sttargetid_;
  ::std::string* szmessage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_Chat_Notify* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRankInfo : public ::google::protobuf::Message {
 public:
  UpdateRankInfo();
  virtual ~UpdateRankInfo();

  UpdateRankInfo(const UpdateRankInfo& from);

  inline UpdateRankInfo& operator=(const UpdateRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRankInfo& default_instance();

  void Swap(UpdateRankInfo* other);

  // implements Message ----------------------------------------------

  UpdateRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRankInfo& from);
  void MergeFrom(const UpdateRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRankType = 1;
  inline bool has_iranktype() const;
  inline void clear_iranktype();
  static const int kIRankTypeFieldNumber = 1;
  inline ::google::protobuf::int32 iranktype() const;
  inline void set_iranktype(::google::protobuf::int32 value);

  // optional .RankInfo stRank = 2;
  inline bool has_strank() const;
  inline void clear_strank();
  static const int kStRankFieldNumber = 2;
  inline const ::RankInfo& strank() const;
  inline ::RankInfo* mutable_strank();
  inline ::RankInfo* release_strank();
  inline void set_allocated_strank(::RankInfo* strank);

  // @@protoc_insertion_point(class_scope:UpdateRankInfo)
 private:
  inline void set_has_iranktype();
  inline void clear_has_iranktype();
  inline void set_has_strank();
  inline void clear_has_strank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RankInfo* strank_;
  ::google::protobuf::int32 iranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static UpdateRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateRank_Request : public ::google::protobuf::Message {
 public:
  World_UpdateRank_Request();
  virtual ~World_UpdateRank_Request();

  World_UpdateRank_Request(const World_UpdateRank_Request& from);

  inline World_UpdateRank_Request& operator=(const World_UpdateRank_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateRank_Request& default_instance();

  void Swap(World_UpdateRank_Request* other);

  // implements Message ----------------------------------------------

  World_UpdateRank_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateRank_Request& from);
  void MergeFrom(const World_UpdateRank_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFromZoneID = 1;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 1;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // repeated .UpdateRankInfo stUpdateRanks = 2;
  inline int stupdateranks_size() const;
  inline void clear_stupdateranks();
  static const int kStUpdateRanksFieldNumber = 2;
  inline const ::UpdateRankInfo& stupdateranks(int index) const;
  inline ::UpdateRankInfo* mutable_stupdateranks(int index);
  inline ::UpdateRankInfo* add_stupdateranks();
  inline const ::google::protobuf::RepeatedPtrField< ::UpdateRankInfo >&
      stupdateranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::UpdateRankInfo >*
      mutable_stupdateranks();

  // @@protoc_insertion_point(class_scope:World_UpdateRank_Request)
 private:
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::UpdateRankInfo > stupdateranks_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateRank_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateRank_Response : public ::google::protobuf::Message {
 public:
  World_UpdateRank_Response();
  virtual ~World_UpdateRank_Response();

  World_UpdateRank_Response(const World_UpdateRank_Response& from);

  inline World_UpdateRank_Response& operator=(const World_UpdateRank_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateRank_Response& default_instance();

  void Swap(World_UpdateRank_Response* other);

  // implements Message ----------------------------------------------

  World_UpdateRank_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateRank_Response& from);
  void MergeFrom(const World_UpdateRank_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_UpdateRank_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateRank_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_GetRankInfo_Request : public ::google::protobuf::Message {
 public:
  World_GetRankInfo_Request();
  virtual ~World_GetRankInfo_Request();

  World_GetRankInfo_Request(const World_GetRankInfo_Request& from);

  inline World_GetRankInfo_Request& operator=(const World_GetRankInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetRankInfo_Request& default_instance();

  void Swap(World_GetRankInfo_Request* other);

  // implements Message ----------------------------------------------

  World_GetRankInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetRankInfo_Request& from);
  void MergeFrom(const World_GetRankInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iType = 1;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 1;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional uint32 iVersionID = 2;
  inline bool has_iversionid() const;
  inline void clear_iversionid();
  static const int kIVersionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 iversionid() const;
  inline void set_iversionid(::google::protobuf::uint32 value);

  // optional int32 iFromZoneID = 3;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 3;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_GetRankInfo_Request)
 private:
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_iversionid();
  inline void clear_has_iversionid();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itype_;
  ::google::protobuf::uint32 iversionid_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetRankInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_GetRankInfo_Response : public ::google::protobuf::Message {
 public:
  World_GetRankInfo_Response();
  virtual ~World_GetRankInfo_Response();

  World_GetRankInfo_Response(const World_GetRankInfo_Response& from);

  inline World_GetRankInfo_Response& operator=(const World_GetRankInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetRankInfo_Response& default_instance();

  void Swap(World_GetRankInfo_Response* other);

  // implements Message ----------------------------------------------

  World_GetRankInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetRankInfo_Response& from);
  void MergeFrom(const World_GetRankInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional uint32 iVersionID = 3;
  inline bool has_iversionid() const;
  inline void clear_iversionid();
  static const int kIVersionIDFieldNumber = 3;
  inline ::google::protobuf::uint32 iversionid() const;
  inline void set_iversionid(::google::protobuf::uint32 value);

  // optional int32 iLastUpdate = 4;
  inline bool has_ilastupdate() const;
  inline void clear_ilastupdate();
  static const int kILastUpdateFieldNumber = 4;
  inline ::google::protobuf::int32 ilastupdate() const;
  inline void set_ilastupdate(::google::protobuf::int32 value);

  // repeated .RankInfo stRanks = 5;
  inline int stranks_size() const;
  inline void clear_stranks();
  static const int kStRanksFieldNumber = 5;
  inline const ::RankInfo& stranks(int index) const;
  inline ::RankInfo* mutable_stranks(int index);
  inline ::RankInfo* add_stranks();
  inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
      stranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
      mutable_stranks();

  // repeated .RankInfo stLastRanks = 6;
  inline int stlastranks_size() const;
  inline void clear_stlastranks();
  static const int kStLastRanksFieldNumber = 6;
  inline const ::RankInfo& stlastranks(int index) const;
  inline ::RankInfo* mutable_stlastranks(int index);
  inline ::RankInfo* add_stlastranks();
  inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
      stlastranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
      mutable_stlastranks();

  // @@protoc_insertion_point(class_scope:World_GetRankInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_iversionid();
  inline void clear_has_iversionid();
  inline void set_has_ilastupdate();
  inline void clear_has_ilastupdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 itype_;
  ::google::protobuf::uint32 iversionid_;
  ::google::protobuf::int32 ilastupdate_;
  ::google::protobuf::RepeatedPtrField< ::RankInfo > stranks_;
  ::google::protobuf::RepeatedPtrField< ::RankInfo > stlastranks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetRankInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_SendMail_Request : public ::google::protobuf::Message {
 public:
  World_SendMail_Request();
  virtual ~World_SendMail_Request();

  World_SendMail_Request(const World_SendMail_Request& from);

  inline World_SendMail_Request& operator=(const World_SendMail_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_SendMail_Request& default_instance();

  void Swap(World_SendMail_Request* other);

  // implements Message ----------------------------------------------

  World_SendMail_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_SendMail_Request& from);
  void MergeFrom(const World_SendMail_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OneMailInfo stMailInfo = 1;
  inline bool has_stmailinfo() const;
  inline void clear_stmailinfo();
  static const int kStMailInfoFieldNumber = 1;
  inline const ::OneMailInfo& stmailinfo() const;
  inline ::OneMailInfo* mutable_stmailinfo();
  inline ::OneMailInfo* release_stmailinfo();
  inline void set_allocated_stmailinfo(::OneMailInfo* stmailinfo);

  // optional uint32 uiFromUin = 2;
  inline bool has_uifromuin() const;
  inline void clear_uifromuin();
  static const int kUiFromUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uifromuin() const;
  inline void set_uifromuin(::google::protobuf::uint32 value);

  // optional uint32 uiToUin = 3;
  inline bool has_uitouin() const;
  inline void clear_uitouin();
  static const int kUiToUinFieldNumber = 3;
  inline ::google::protobuf::uint32 uitouin() const;
  inline void set_uitouin(::google::protobuf::uint32 value);

  // optional int32 iTryTimes = 4;
  inline bool has_itrytimes() const;
  inline void clear_itrytimes();
  static const int kITryTimesFieldNumber = 4;
  inline ::google::protobuf::int32 itrytimes() const;
  inline void set_itrytimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_SendMail_Request)
 private:
  inline void set_has_stmailinfo();
  inline void clear_has_stmailinfo();
  inline void set_has_uifromuin();
  inline void clear_has_uifromuin();
  inline void set_has_uitouin();
  inline void clear_has_uitouin();
  inline void set_has_itrytimes();
  inline void clear_has_itrytimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::OneMailInfo* stmailinfo_;
  ::google::protobuf::uint32 uifromuin_;
  ::google::protobuf::uint32 uitouin_;
  ::google::protobuf::int32 itrytimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_SendMail_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_SendMail_Response : public ::google::protobuf::Message {
 public:
  World_SendMail_Response();
  virtual ~World_SendMail_Response();

  World_SendMail_Response(const World_SendMail_Response& from);

  inline World_SendMail_Response& operator=(const World_SendMail_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_SendMail_Response& default_instance();

  void Swap(World_SendMail_Response* other);

  // implements Message ----------------------------------------------

  World_SendMail_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_SendMail_Response& from);
  void MergeFrom(const World_SendMail_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .OneMailInfo stMailInfo = 2;
  inline bool has_stmailinfo() const;
  inline void clear_stmailinfo();
  static const int kStMailInfoFieldNumber = 2;
  inline const ::OneMailInfo& stmailinfo() const;
  inline ::OneMailInfo* mutable_stmailinfo();
  inline ::OneMailInfo* release_stmailinfo();
  inline void set_allocated_stmailinfo(::OneMailInfo* stmailinfo);

  // optional uint32 uiFromUin = 3;
  inline bool has_uifromuin() const;
  inline void clear_uifromuin();
  static const int kUiFromUinFieldNumber = 3;
  inline ::google::protobuf::uint32 uifromuin() const;
  inline void set_uifromuin(::google::protobuf::uint32 value);

  // optional uint32 uiToUin = 4;
  inline bool has_uitouin() const;
  inline void clear_uitouin();
  static const int kUiToUinFieldNumber = 4;
  inline ::google::protobuf::uint32 uitouin() const;
  inline void set_uitouin(::google::protobuf::uint32 value);

  // optional int32 iTryTimes = 5;
  inline bool has_itrytimes() const;
  inline void clear_itrytimes();
  static const int kITryTimesFieldNumber = 5;
  inline ::google::protobuf::int32 itrytimes() const;
  inline void set_itrytimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_SendMail_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stmailinfo();
  inline void clear_has_stmailinfo();
  inline void set_has_uifromuin();
  inline void clear_has_uifromuin();
  inline void set_has_uitouin();
  inline void clear_has_uitouin();
  inline void set_has_itrytimes();
  inline void clear_has_itrytimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::OneMailInfo* stmailinfo_;
  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uifromuin_;
  ::google::protobuf::uint32 uitouin_;
  ::google::protobuf::int32 itrytimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_SendMail_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_AddLimitNum_Request : public ::google::protobuf::Message {
 public:
  World_AddLimitNum_Request();
  virtual ~World_AddLimitNum_Request();

  World_AddLimitNum_Request(const World_AddLimitNum_Request& from);

  inline World_AddLimitNum_Request& operator=(const World_AddLimitNum_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_AddLimitNum_Request& default_instance();

  void Swap(World_AddLimitNum_Request* other);

  // implements Message ----------------------------------------------

  World_AddLimitNum_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_AddLimitNum_Request& from);
  void MergeFrom(const World_AddLimitNum_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iExchangeID = 2;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 2;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // optional int32 iAddNum = 3;
  inline bool has_iaddnum() const;
  inline void clear_iaddnum();
  static const int kIAddNumFieldNumber = 3;
  inline ::google::protobuf::int32 iaddnum() const;
  inline void set_iaddnum(::google::protobuf::int32 value);

  // optional int32 iZoneID = 4;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 4;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iReason = 5;
  inline bool has_ireason() const;
  inline void clear_ireason();
  static const int kIReasonFieldNumber = 5;
  inline ::google::protobuf::int32 ireason() const;
  inline void set_ireason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_AddLimitNum_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();
  inline void set_has_iaddnum();
  inline void clear_has_iaddnum();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_ireason();
  inline void clear_has_ireason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 iexchangeid_;
  ::google::protobuf::int32 iaddnum_;
  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::int32 ireason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_AddLimitNum_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_AddLimitNum_Response : public ::google::protobuf::Message {
 public:
  World_AddLimitNum_Response();
  virtual ~World_AddLimitNum_Response();

  World_AddLimitNum_Response(const World_AddLimitNum_Response& from);

  inline World_AddLimitNum_Response& operator=(const World_AddLimitNum_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_AddLimitNum_Response& default_instance();

  void Swap(World_AddLimitNum_Response* other);

  // implements Message ----------------------------------------------

  World_AddLimitNum_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_AddLimitNum_Response& from);
  void MergeFrom(const World_AddLimitNum_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iExchangeID = 3;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 3;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // optional int32 iReason = 4;
  inline bool has_ireason() const;
  inline void clear_ireason();
  static const int kIReasonFieldNumber = 4;
  inline ::google::protobuf::int32 ireason() const;
  inline void set_ireason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_AddLimitNum_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();
  inline void set_has_ireason();
  inline void clear_has_ireason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 iexchangeid_;
  ::google::protobuf::int32 ireason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_AddLimitNum_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdatePrizeInfo_Request : public ::google::protobuf::Message {
 public:
  World_UpdatePrizeInfo_Request();
  virtual ~World_UpdatePrizeInfo_Request();

  World_UpdatePrizeInfo_Request(const World_UpdatePrizeInfo_Request& from);

  inline World_UpdatePrizeInfo_Request& operator=(const World_UpdatePrizeInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdatePrizeInfo_Request& default_instance();

  void Swap(World_UpdatePrizeInfo_Request* other);

  // implements Message ----------------------------------------------

  World_UpdatePrizeInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdatePrizeInfo_Request& from);
  void MergeFrom(const World_UpdatePrizeInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PrizeInfo stPrizes = 1;
  inline int stprizes_size() const;
  inline void clear_stprizes();
  static const int kStPrizesFieldNumber = 1;
  inline const ::PrizeInfo& stprizes(int index) const;
  inline ::PrizeInfo* mutable_stprizes(int index);
  inline ::PrizeInfo* add_stprizes();
  inline const ::google::protobuf::RepeatedPtrField< ::PrizeInfo >&
      stprizes() const;
  inline ::google::protobuf::RepeatedPtrField< ::PrizeInfo >*
      mutable_stprizes();

  // @@protoc_insertion_point(class_scope:World_UpdatePrizeInfo_Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PrizeInfo > stprizes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdatePrizeInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateBetInfo_Request : public ::google::protobuf::Message {
 public:
  World_UpdateBetInfo_Request();
  virtual ~World_UpdateBetInfo_Request();

  World_UpdateBetInfo_Request(const World_UpdateBetInfo_Request& from);

  inline World_UpdateBetInfo_Request& operator=(const World_UpdateBetInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateBetInfo_Request& default_instance();

  void Swap(World_UpdateBetInfo_Request* other);

  // implements Message ----------------------------------------------

  World_UpdateBetInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateBetInfo_Request& from);
  void MergeFrom(const World_UpdateBetInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NumberBetInfo stBetInfos = 1;
  inline int stbetinfos_size() const;
  inline void clear_stbetinfos();
  static const int kStBetInfosFieldNumber = 1;
  inline const ::NumberBetInfo& stbetinfos(int index) const;
  inline ::NumberBetInfo* mutable_stbetinfos(int index);
  inline ::NumberBetInfo* add_stbetinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::NumberBetInfo >&
      stbetinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::NumberBetInfo >*
      mutable_stbetinfos();

  // @@protoc_insertion_point(class_scope:World_UpdateBetInfo_Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::NumberBetInfo > stbetinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateBetInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateLasvegas_Notify : public ::google::protobuf::Message {
 public:
  World_UpdateLasvegas_Notify();
  virtual ~World_UpdateLasvegas_Notify();

  World_UpdateLasvegas_Notify(const World_UpdateLasvegas_Notify& from);

  inline World_UpdateLasvegas_Notify& operator=(const World_UpdateLasvegas_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateLasvegas_Notify& default_instance();

  void Swap(World_UpdateLasvegas_Notify* other);

  // implements Message ----------------------------------------------

  World_UpdateLasvegas_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateLasvegas_Notify& from);
  void MergeFrom(const World_UpdateLasvegas_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LasvegasInfo stInfo = 1;
  inline bool has_stinfo() const;
  inline void clear_stinfo();
  static const int kStInfoFieldNumber = 1;
  inline const ::LasvegasInfo& stinfo() const;
  inline ::LasvegasInfo* mutable_stinfo();
  inline ::LasvegasInfo* release_stinfo();
  inline void set_allocated_stinfo(::LasvegasInfo* stinfo);

  // @@protoc_insertion_point(class_scope:World_UpdateLasvegas_Notify)
 private:
  inline void set_has_stinfo();
  inline void clear_has_stinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::LasvegasInfo* stinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateLasvegas_Notify* default_instance_;
};
// -------------------------------------------------------------------

class World_UserRecharge_Request : public ::google::protobuf::Message {
 public:
  World_UserRecharge_Request();
  virtual ~World_UserRecharge_Request();

  World_UserRecharge_Request(const World_UserRecharge_Request& from);

  inline World_UserRecharge_Request& operator=(const World_UserRecharge_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UserRecharge_Request& default_instance();

  void Swap(World_UserRecharge_Request* other);

  // implements Message ----------------------------------------------

  World_UserRecharge_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UserRecharge_Request& from);
  void MergeFrom(const World_UserRecharge_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional string strOrderID = 2;
  inline bool has_strorderid() const;
  inline void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  inline const ::std::string& strorderid() const;
  inline void set_strorderid(const ::std::string& value);
  inline void set_strorderid(const char* value);
  inline void set_strorderid(const char* value, size_t size);
  inline ::std::string* mutable_strorderid();
  inline ::std::string* release_strorderid();
  inline void set_allocated_strorderid(::std::string* strorderid);

  // optional int32 iRMB = 3;
  inline bool has_irmb() const;
  inline void clear_irmb();
  static const int kIRMBFieldNumber = 3;
  inline ::google::protobuf::int32 irmb() const;
  inline void set_irmb(::google::protobuf::int32 value);

  // optional int32 iRechargeID = 4;
  inline bool has_irechargeid() const;
  inline void clear_irechargeid();
  static const int kIRechargeIDFieldNumber = 4;
  inline ::google::protobuf::int32 irechargeid() const;
  inline void set_irechargeid(::google::protobuf::int32 value);

  // optional int32 iTime = 5;
  inline bool has_itime() const;
  inline void clear_itime();
  static const int kITimeFieldNumber = 5;
  inline ::google::protobuf::int32 itime() const;
  inline void set_itime(::google::protobuf::int32 value);

  // optional int32 iPlatform = 6;
  inline bool has_iplatform() const;
  inline void clear_iplatform();
  static const int kIPlatformFieldNumber = 6;
  inline ::google::protobuf::int32 iplatform() const;
  inline void set_iplatform(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_UserRecharge_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_strorderid();
  inline void clear_has_strorderid();
  inline void set_has_irmb();
  inline void clear_has_irmb();
  inline void set_has_irechargeid();
  inline void clear_has_irechargeid();
  inline void set_has_itime();
  inline void clear_has_itime();
  inline void set_has_iplatform();
  inline void clear_has_iplatform();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strorderid_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 irmb_;
  ::google::protobuf::int32 irechargeid_;
  ::google::protobuf::int32 itime_;
  ::google::protobuf::int32 iplatform_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UserRecharge_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_UserRecharge_Response : public ::google::protobuf::Message {
 public:
  World_UserRecharge_Response();
  virtual ~World_UserRecharge_Response();

  World_UserRecharge_Response(const World_UserRecharge_Response& from);

  inline World_UserRecharge_Response& operator=(const World_UserRecharge_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UserRecharge_Response& default_instance();

  void Swap(World_UserRecharge_Response* other);

  // implements Message ----------------------------------------------

  World_UserRecharge_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UserRecharge_Response& from);
  void MergeFrom(const World_UserRecharge_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional string strOrderID = 3;
  inline bool has_strorderid() const;
  inline void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 3;
  inline const ::std::string& strorderid() const;
  inline void set_strorderid(const ::std::string& value);
  inline void set_strorderid(const char* value);
  inline void set_strorderid(const char* value, size_t size);
  inline ::std::string* mutable_strorderid();
  inline ::std::string* release_strorderid();
  inline void set_allocated_strorderid(::std::string* strorderid);

  // optional int32 iRechargeID = 4;
  inline bool has_irechargeid() const;
  inline void clear_irechargeid();
  static const int kIRechargeIDFieldNumber = 4;
  inline ::google::protobuf::int32 irechargeid() const;
  inline void set_irechargeid(::google::protobuf::int32 value);

  // optional int32 iPlatform = 5;
  inline bool has_iplatform() const;
  inline void clear_iplatform();
  static const int kIPlatformFieldNumber = 5;
  inline ::google::protobuf::int32 iplatform() const;
  inline void set_iplatform(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_UserRecharge_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_strorderid();
  inline void clear_has_strorderid();
  inline void set_has_irechargeid();
  inline void clear_has_irechargeid();
  inline void set_has_iplatform();
  inline void clear_has_iplatform();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::std::string* strorderid_;
  ::google::protobuf::int32 irechargeid_;
  ::google::protobuf::int32 iplatform_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UserRecharge_Response* default_instance_;
};
// -------------------------------------------------------------------

class GameMaster_Request : public ::google::protobuf::Message {
 public:
  GameMaster_Request();
  virtual ~GameMaster_Request();

  GameMaster_Request(const GameMaster_Request& from);

  inline GameMaster_Request& operator=(const GameMaster_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMaster_Request& default_instance();

  void Swap(GameMaster_Request* other);

  // implements Message ----------------------------------------------

  GameMaster_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameMaster_Request& from);
  void MergeFrom(const GameMaster_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iOperaType = 1;
  inline bool has_ioperatype() const;
  inline void clear_ioperatype();
  static const int kIOperaTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ioperatype() const;
  inline void set_ioperatype(::google::protobuf::int32 value);

  // optional uint32 uFromUin = 2;
  inline bool has_ufromuin() const;
  inline void clear_ufromuin();
  static const int kUFromUinFieldNumber = 2;
  inline ::google::protobuf::uint32 ufromuin() const;
  inline void set_ufromuin(::google::protobuf::uint32 value);

  // optional uint32 uToUin = 3;
  inline bool has_utouin() const;
  inline void clear_utouin();
  static const int kUToUinFieldNumber = 3;
  inline ::google::protobuf::uint32 utouin() const;
  inline void set_utouin(::google::protobuf::uint32 value);

  // repeated string strParams = 4;
  inline int strparams_size() const;
  inline void clear_strparams();
  static const int kStrParamsFieldNumber = 4;
  inline const ::std::string& strparams(int index) const;
  inline ::std::string* mutable_strparams(int index);
  inline void set_strparams(int index, const ::std::string& value);
  inline void set_strparams(int index, const char* value);
  inline void set_strparams(int index, const char* value, size_t size);
  inline ::std::string* add_strparams();
  inline void add_strparams(const ::std::string& value);
  inline void add_strparams(const char* value);
  inline void add_strparams(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strparams();

  // optional int32 iVIPMin = 5;
  inline bool has_ivipmin() const;
  inline void clear_ivipmin();
  static const int kIVIPMinFieldNumber = 5;
  inline ::google::protobuf::int32 ivipmin() const;
  inline void set_ivipmin(::google::protobuf::int32 value);

  // optional int32 iVIPMax = 6;
  inline bool has_ivipmax() const;
  inline void clear_ivipmax();
  static const int kIVIPMaxFieldNumber = 6;
  inline ::google::protobuf::int32 ivipmax() const;
  inline void set_ivipmax(::google::protobuf::int32 value);

  // repeated string strChannelIDs = 7;
  inline int strchannelids_size() const;
  inline void clear_strchannelids();
  static const int kStrChannelIDsFieldNumber = 7;
  inline const ::std::string& strchannelids(int index) const;
  inline ::std::string* mutable_strchannelids(int index);
  inline void set_strchannelids(int index, const ::std::string& value);
  inline void set_strchannelids(int index, const char* value);
  inline void set_strchannelids(int index, const char* value, size_t size);
  inline ::std::string* add_strchannelids();
  inline void add_strchannelids(const ::std::string& value);
  inline void add_strchannelids(const char* value);
  inline void add_strchannelids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strchannelids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strchannelids();

  // optional int32 iMailEndTime = 9;
  inline bool has_imailendtime() const;
  inline void clear_imailendtime();
  static const int kIMailEndTimeFieldNumber = 9;
  inline ::google::protobuf::int32 imailendtime() const;
  inline void set_imailendtime(::google::protobuf::int32 value);

  // optional int32 iFromZoneID = 8;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 8;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMaster_Request)
 private:
  inline void set_has_ioperatype();
  inline void clear_has_ioperatype();
  inline void set_has_ufromuin();
  inline void clear_has_ufromuin();
  inline void set_has_utouin();
  inline void clear_has_utouin();
  inline void set_has_ivipmin();
  inline void clear_has_ivipmin();
  inline void set_has_ivipmax();
  inline void clear_has_ivipmax();
  inline void set_has_imailendtime();
  inline void clear_has_imailendtime();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ioperatype_;
  ::google::protobuf::uint32 ufromuin_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strparams_;
  ::google::protobuf::uint32 utouin_;
  ::google::protobuf::int32 ivipmin_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strchannelids_;
  ::google::protobuf::int32 ivipmax_;
  ::google::protobuf::int32 imailendtime_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static GameMaster_Request* default_instance_;
};
// -------------------------------------------------------------------

class GameMaster_Response : public ::google::protobuf::Message {
 public:
  GameMaster_Response();
  virtual ~GameMaster_Response();

  GameMaster_Response(const GameMaster_Response& from);

  inline GameMaster_Response& operator=(const GameMaster_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMaster_Response& default_instance();

  void Swap(GameMaster_Response* other);

  // implements Message ----------------------------------------------

  GameMaster_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameMaster_Response& from);
  void MergeFrom(const GameMaster_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iOperaType = 2;
  inline bool has_ioperatype() const;
  inline void clear_ioperatype();
  static const int kIOperaTypeFieldNumber = 2;
  inline ::google::protobuf::int32 ioperatype() const;
  inline void set_ioperatype(::google::protobuf::int32 value);

  // optional uint32 uFromUin = 3;
  inline bool has_ufromuin() const;
  inline void clear_ufromuin();
  static const int kUFromUinFieldNumber = 3;
  inline ::google::protobuf::uint32 ufromuin() const;
  inline void set_ufromuin(::google::protobuf::uint32 value);

  // optional uint32 uToUin = 4;
  inline bool has_utouin() const;
  inline void clear_utouin();
  static const int kUToUinFieldNumber = 4;
  inline ::google::protobuf::uint32 utouin() const;
  inline void set_utouin(::google::protobuf::uint32 value);

  // optional .BASEDBINFO stBaseInfo = 5;
  inline bool has_stbaseinfo() const;
  inline void clear_stbaseinfo();
  static const int kStBaseInfoFieldNumber = 5;
  inline const ::BASEDBINFO& stbaseinfo() const;
  inline ::BASEDBINFO* mutable_stbaseinfo();
  inline ::BASEDBINFO* release_stbaseinfo();
  inline void set_allocated_stbaseinfo(::BASEDBINFO* stbaseinfo);

  // optional .ITEMDBINFO stItemInfo = 6;
  inline bool has_stiteminfo() const;
  inline void clear_stiteminfo();
  static const int kStItemInfoFieldNumber = 6;
  inline const ::ITEMDBINFO& stiteminfo() const;
  inline ::ITEMDBINFO* mutable_stiteminfo();
  inline ::ITEMDBINFO* release_stiteminfo();
  inline void set_allocated_stiteminfo(::ITEMDBINFO* stiteminfo);

  // @@protoc_insertion_point(class_scope:GameMaster_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ioperatype();
  inline void clear_has_ioperatype();
  inline void set_has_ufromuin();
  inline void clear_has_ufromuin();
  inline void set_has_utouin();
  inline void clear_has_utouin();
  inline void set_has_stbaseinfo();
  inline void clear_has_stbaseinfo();
  inline void set_has_stiteminfo();
  inline void clear_has_stiteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 ioperatype_;
  ::google::protobuf::uint32 ufromuin_;
  ::google::protobuf::uint32 utouin_;
  ::BASEDBINFO* stbaseinfo_;
  ::ITEMDBINFO* stiteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static GameMaster_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_SystemMailID_Notify : public ::google::protobuf::Message {
 public:
  World_SystemMailID_Notify();
  virtual ~World_SystemMailID_Notify();

  World_SystemMailID_Notify(const World_SystemMailID_Notify& from);

  inline World_SystemMailID_Notify& operator=(const World_SystemMailID_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_SystemMailID_Notify& default_instance();

  void Swap(World_SystemMailID_Notify* other);

  // implements Message ----------------------------------------------

  World_SystemMailID_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_SystemMailID_Notify& from);
  void MergeFrom(const World_SystemMailID_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uSystemUniqID = 1;
  inline bool has_usystemuniqid() const;
  inline void clear_usystemuniqid();
  static const int kUSystemUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 usystemuniqid() const;
  inline void set_usystemuniqid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:World_SystemMailID_Notify)
 private:
  inline void set_has_usystemuniqid();
  inline void clear_has_usystemuniqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 usystemuniqid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_SystemMailID_Notify* default_instance_;
};
// -------------------------------------------------------------------

class World_GetSystemMail_Request : public ::google::protobuf::Message {
 public:
  World_GetSystemMail_Request();
  virtual ~World_GetSystemMail_Request();

  World_GetSystemMail_Request(const World_GetSystemMail_Request& from);

  inline World_GetSystemMail_Request& operator=(const World_GetSystemMail_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetSystemMail_Request& default_instance();

  void Swap(World_GetSystemMail_Request* other);

  // implements Message ----------------------------------------------

  World_GetSystemMail_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetSystemMail_Request& from);
  void MergeFrom(const World_GetSystemMail_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 uRoleSystemUniqID = 2;
  inline bool has_urolesystemuniqid() const;
  inline void clear_urolesystemuniqid();
  static const int kURoleSystemUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 urolesystemuniqid() const;
  inline void set_urolesystemuniqid(::google::protobuf::uint32 value);

  // optional int32 iVIPLevel = 3;
  inline bool has_iviplevel() const;
  inline void clear_iviplevel();
  static const int kIVIPLevelFieldNumber = 3;
  inline ::google::protobuf::int32 iviplevel() const;
  inline void set_iviplevel(::google::protobuf::int32 value);

  // optional string strChannel = 4;
  inline bool has_strchannel() const;
  inline void clear_strchannel();
  static const int kStrChannelFieldNumber = 4;
  inline const ::std::string& strchannel() const;
  inline void set_strchannel(const ::std::string& value);
  inline void set_strchannel(const char* value);
  inline void set_strchannel(const char* value, size_t size);
  inline ::std::string* mutable_strchannel();
  inline ::std::string* release_strchannel();
  inline void set_allocated_strchannel(::std::string* strchannel);

  // optional int32 iFromZoneID = 5;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 5;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional int32 iReason = 6;
  inline bool has_ireason() const;
  inline void clear_ireason();
  static const int kIReasonFieldNumber = 6;
  inline ::google::protobuf::int32 ireason() const;
  inline void set_ireason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_GetSystemMail_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_urolesystemuniqid();
  inline void clear_has_urolesystemuniqid();
  inline void set_has_iviplevel();
  inline void clear_has_iviplevel();
  inline void set_has_strchannel();
  inline void clear_has_strchannel();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_ireason();
  inline void clear_has_ireason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 urolesystemuniqid_;
  ::std::string* strchannel_;
  ::google::protobuf::int32 iviplevel_;
  ::google::protobuf::int32 ifromzoneid_;
  ::google::protobuf::int32 ireason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetSystemMail_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_GetSystemMail_Response : public ::google::protobuf::Message {
 public:
  World_GetSystemMail_Response();
  virtual ~World_GetSystemMail_Response();

  World_GetSystemMail_Response(const World_GetSystemMail_Response& from);

  inline World_GetSystemMail_Response& operator=(const World_GetSystemMail_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetSystemMail_Response& default_instance();

  void Swap(World_GetSystemMail_Response* other);

  // implements Message ----------------------------------------------

  World_GetSystemMail_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetSystemMail_Response& from);
  void MergeFrom(const World_GetSystemMail_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 uSystemUniqID = 3;
  inline bool has_usystemuniqid() const;
  inline void clear_usystemuniqid();
  static const int kUSystemUniqIDFieldNumber = 3;
  inline ::google::protobuf::uint32 usystemuniqid() const;
  inline void set_usystemuniqid(::google::protobuf::uint32 value);

  // repeated .OneMailInfo stMails = 4;
  inline int stmails_size() const;
  inline void clear_stmails();
  static const int kStMailsFieldNumber = 4;
  inline const ::OneMailInfo& stmails(int index) const;
  inline ::OneMailInfo* mutable_stmails(int index);
  inline ::OneMailInfo* add_stmails();
  inline const ::google::protobuf::RepeatedPtrField< ::OneMailInfo >&
      stmails() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneMailInfo >*
      mutable_stmails();

  // @@protoc_insertion_point(class_scope:World_GetSystemMail_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_usystemuniqid();
  inline void clear_has_usystemuniqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::RepeatedPtrField< ::OneMailInfo > stmails_;
  ::google::protobuf::uint32 usystemuniqid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetSystemMail_Response* default_instance_;
};
// -------------------------------------------------------------------

class OnlineExchange : public ::google::protobuf::Message {
 public:
  OnlineExchange();
  virtual ~OnlineExchange();

  OnlineExchange(const OnlineExchange& from);

  inline OnlineExchange& operator=(const OnlineExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineExchange& default_instance();

  void Swap(OnlineExchange* other);

  // implements Message ----------------------------------------------

  OnlineExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineExchange& from);
  void MergeFrom(const OnlineExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iItemID = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // optional int32 iItemNum = 2;
  inline bool has_iitemnum() const;
  inline void clear_iitemnum();
  static const int kIItemNumFieldNumber = 2;
  inline ::google::protobuf::int32 iitemnum() const;
  inline void set_iitemnum(::google::protobuf::int32 value);

  // optional int32 iType = 3;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 3;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional int32 iExchangeNum = 4;
  inline bool has_iexchangenum() const;
  inline void clear_iexchangenum();
  static const int kIExchangeNumFieldNumber = 4;
  inline ::google::protobuf::int32 iexchangenum() const;
  inline void set_iexchangenum(::google::protobuf::int32 value);

  // optional string strPhoneNum = 5;
  inline bool has_strphonenum() const;
  inline void clear_strphonenum();
  static const int kStrPhoneNumFieldNumber = 5;
  inline const ::std::string& strphonenum() const;
  inline void set_strphonenum(const ::std::string& value);
  inline void set_strphonenum(const char* value);
  inline void set_strphonenum(const char* value, size_t size);
  inline ::std::string* mutable_strphonenum();
  inline ::std::string* release_strphonenum();
  inline void set_allocated_strphonenum(::std::string* strphonenum);

  // @@protoc_insertion_point(class_scope:OnlineExchange)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_iitemnum();
  inline void clear_has_iitemnum();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_iexchangenum();
  inline void clear_has_iexchangenum();
  inline void set_has_strphonenum();
  inline void clear_has_strphonenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 iitemnum_;
  ::google::protobuf::int32 itype_;
  ::google::protobuf::int32 iexchangenum_;
  ::std::string* strphonenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static OnlineExchange* default_instance_;
};
// -------------------------------------------------------------------

class World_OnlineExchange_Request : public ::google::protobuf::Message {
 public:
  World_OnlineExchange_Request();
  virtual ~World_OnlineExchange_Request();

  World_OnlineExchange_Request(const World_OnlineExchange_Request& from);

  inline World_OnlineExchange_Request& operator=(const World_OnlineExchange_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_OnlineExchange_Request& default_instance();

  void Swap(World_OnlineExchange_Request* other);

  // implements Message ----------------------------------------------

  World_OnlineExchange_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_OnlineExchange_Request& from);
  void MergeFrom(const World_OnlineExchange_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iFromZoneID = 2;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional .OnlineExchange stInfo = 3;
  inline bool has_stinfo() const;
  inline void clear_stinfo();
  static const int kStInfoFieldNumber = 3;
  inline const ::OnlineExchange& stinfo() const;
  inline ::OnlineExchange* mutable_stinfo();
  inline ::OnlineExchange* release_stinfo();
  inline void set_allocated_stinfo(::OnlineExchange* stinfo);

  // @@protoc_insertion_point(class_scope:World_OnlineExchange_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_stinfo();
  inline void clear_has_stinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 ifromzoneid_;
  ::OnlineExchange* stinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_OnlineExchange_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_OnlineExchange_Response : public ::google::protobuf::Message {
 public:
  World_OnlineExchange_Response();
  virtual ~World_OnlineExchange_Response();

  World_OnlineExchange_Response(const World_OnlineExchange_Response& from);

  inline World_OnlineExchange_Response& operator=(const World_OnlineExchange_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_OnlineExchange_Response& default_instance();

  void Swap(World_OnlineExchange_Response* other);

  // implements Message ----------------------------------------------

  World_OnlineExchange_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_OnlineExchange_Response& from);
  void MergeFrom(const World_OnlineExchange_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iFromZoneID = 3;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 3;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional .OnlineExchange stInfo = 4;
  inline bool has_stinfo() const;
  inline void clear_stinfo();
  static const int kStInfoFieldNumber = 4;
  inline const ::OnlineExchange& stinfo() const;
  inline ::OnlineExchange* mutable_stinfo();
  inline ::OnlineExchange* release_stinfo();
  inline void set_allocated_stinfo(::OnlineExchange* stinfo);

  // @@protoc_insertion_point(class_scope:World_OnlineExchange_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_stinfo();
  inline void clear_has_stinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::OnlineExchange* stinfo_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_OnlineExchange_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_GetUserInfo_Request : public ::google::protobuf::Message {
 public:
  World_GetUserInfo_Request();
  virtual ~World_GetUserInfo_Request();

  World_GetUserInfo_Request(const World_GetUserInfo_Request& from);

  inline World_GetUserInfo_Request& operator=(const World_GetUserInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetUserInfo_Request& default_instance();

  void Swap(World_GetUserInfo_Request* other);

  // implements Message ----------------------------------------------

  World_GetUserInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetUserInfo_Request& from);
  void MergeFrom(const World_GetUserInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iPlatformID = 2;
  inline bool has_iplatformid() const;
  inline void clear_iplatformid();
  static const int kIPlatformIDFieldNumber = 2;
  inline ::google::protobuf::int32 iplatformid() const;
  inline void set_iplatformid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_GetUserInfo_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_iplatformid();
  inline void clear_has_iplatformid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 iplatformid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetUserInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_GetUserInfo_Response : public ::google::protobuf::Message {
 public:
  World_GetUserInfo_Response();
  virtual ~World_GetUserInfo_Response();

  World_GetUserInfo_Response(const World_GetUserInfo_Response& from);

  inline World_GetUserInfo_Response& operator=(const World_GetUserInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetUserInfo_Response& default_instance();

  void Swap(World_GetUserInfo_Response* other);

  // implements Message ----------------------------------------------

  World_GetUserInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetUserInfo_Response& from);
  void MergeFrom(const World_GetUserInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional string strAccount = 2;
  inline bool has_straccount() const;
  inline void clear_straccount();
  static const int kStrAccountFieldNumber = 2;
  inline const ::std::string& straccount() const;
  inline void set_straccount(const ::std::string& value);
  inline void set_straccount(const char* value);
  inline void set_straccount(const char* value, size_t size);
  inline ::std::string* mutable_straccount();
  inline ::std::string* release_straccount();
  inline void set_allocated_straccount(::std::string* straccount);

  // optional uint32 uin = 3;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 3;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional string strNickName = 4;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 4;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // optional int32 iPlatformID = 5;
  inline bool has_iplatformid() const;
  inline void clear_iplatformid();
  static const int kIPlatformIDFieldNumber = 5;
  inline ::google::protobuf::int32 iplatformid() const;
  inline void set_iplatformid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_GetUserInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_straccount();
  inline void clear_has_straccount();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_iplatformid();
  inline void clear_has_iplatformid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* straccount_;
  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::std::string* strnickname_;
  ::google::protobuf::int32 iplatformid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetUserInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_WriteLog_Request : public ::google::protobuf::Message {
 public:
  World_WriteLog_Request();
  virtual ~World_WriteLog_Request();

  World_WriteLog_Request(const World_WriteLog_Request& from);

  inline World_WriteLog_Request& operator=(const World_WriteLog_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_WriteLog_Request& default_instance();

  void Swap(World_WriteLog_Request* other);

  // implements Message ----------------------------------------------

  World_WriteLog_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_WriteLog_Request& from);
  void MergeFrom(const World_WriteLog_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iLogTargetType = 1;
  inline bool has_ilogtargettype() const;
  inline void clear_ilogtargettype();
  static const int kILogTargetTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ilogtargettype() const;
  inline void set_ilogtargettype(::google::protobuf::int32 value);

  // optional string strLogData = 2;
  inline bool has_strlogdata() const;
  inline void clear_strlogdata();
  static const int kStrLogDataFieldNumber = 2;
  inline const ::std::string& strlogdata() const;
  inline void set_strlogdata(const ::std::string& value);
  inline void set_strlogdata(const char* value);
  inline void set_strlogdata(const char* value, size_t size);
  inline ::std::string* mutable_strlogdata();
  inline ::std::string* release_strlogdata();
  inline void set_allocated_strlogdata(::std::string* strlogdata);

  // @@protoc_insertion_point(class_scope:World_WriteLog_Request)
 private:
  inline void set_has_ilogtargettype();
  inline void clear_has_ilogtargettype();
  inline void set_has_strlogdata();
  inline void clear_has_strlogdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlogdata_;
  ::google::protobuf::int32 ilogtargettype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_WriteLog_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_GetCardNo_Request : public ::google::protobuf::Message {
 public:
  World_GetCardNo_Request();
  virtual ~World_GetCardNo_Request();

  World_GetCardNo_Request(const World_GetCardNo_Request& from);

  inline World_GetCardNo_Request& operator=(const World_GetCardNo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetCardNo_Request& default_instance();

  void Swap(World_GetCardNo_Request* other);

  // implements Message ----------------------------------------------

  World_GetCardNo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetCardNo_Request& from);
  void MergeFrom(const World_GetCardNo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iExchangeID = 1;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 1;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // optional int32 iCardID = 2;
  inline bool has_icardid() const;
  inline void clear_icardid();
  static const int kICardIDFieldNumber = 2;
  inline ::google::protobuf::int32 icardid() const;
  inline void set_icardid(::google::protobuf::int32 value);

  // optional uint32 uin = 3;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 3;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iFromZoneID = 4;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 4;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_GetCardNo_Request)
 private:
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();
  inline void set_has_icardid();
  inline void clear_has_icardid();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iexchangeid_;
  ::google::protobuf::int32 icardid_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetCardNo_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_GetCardNo_Response : public ::google::protobuf::Message {
 public:
  World_GetCardNo_Response();
  virtual ~World_GetCardNo_Response();

  World_GetCardNo_Response(const World_GetCardNo_Response& from);

  inline World_GetCardNo_Response& operator=(const World_GetCardNo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_GetCardNo_Response& default_instance();

  void Swap(World_GetCardNo_Response* other);

  // implements Message ----------------------------------------------

  World_GetCardNo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_GetCardNo_Response& from);
  void MergeFrom(const World_GetCardNo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iExchangeID = 2;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 2;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // optional int32 iCardID = 3;
  inline bool has_icardid() const;
  inline void clear_icardid();
  static const int kICardIDFieldNumber = 3;
  inline ::google::protobuf::int32 icardid() const;
  inline void set_icardid(::google::protobuf::int32 value);

  // optional uint32 uin = 4;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 4;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iFromZoneID = 5;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 5;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional string strCardNo = 6;
  inline bool has_strcardno() const;
  inline void clear_strcardno();
  static const int kStrCardNoFieldNumber = 6;
  inline const ::std::string& strcardno() const;
  inline void set_strcardno(const ::std::string& value);
  inline void set_strcardno(const char* value);
  inline void set_strcardno(const char* value, size_t size);
  inline ::std::string* mutable_strcardno();
  inline ::std::string* release_strcardno();
  inline void set_allocated_strcardno(::std::string* strcardno);

  // optional string strCardPwd = 7;
  inline bool has_strcardpwd() const;
  inline void clear_strcardpwd();
  static const int kStrCardPwdFieldNumber = 7;
  inline const ::std::string& strcardpwd() const;
  inline void set_strcardpwd(const ::std::string& value);
  inline void set_strcardpwd(const char* value);
  inline void set_strcardpwd(const char* value, size_t size);
  inline ::std::string* mutable_strcardpwd();
  inline ::std::string* release_strcardpwd();
  inline void set_allocated_strcardpwd(::std::string* strcardpwd);

  // @@protoc_insertion_point(class_scope:World_GetCardNo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();
  inline void set_has_icardid();
  inline void clear_has_icardid();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_strcardno();
  inline void clear_has_strcardno();
  inline void set_has_strcardpwd();
  inline void clear_has_strcardpwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 iexchangeid_;
  ::google::protobuf::int32 icardid_;
  ::google::protobuf::uint32 uin_;
  ::std::string* strcardno_;
  ::std::string* strcardpwd_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_GetCardNo_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_AddExcRec_Request : public ::google::protobuf::Message {
 public:
  World_AddExcRec_Request();
  virtual ~World_AddExcRec_Request();

  World_AddExcRec_Request(const World_AddExcRec_Request& from);

  inline World_AddExcRec_Request& operator=(const World_AddExcRec_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_AddExcRec_Request& default_instance();

  void Swap(World_AddExcRec_Request* other);

  // implements Message ----------------------------------------------

  World_AddExcRec_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_AddExcRec_Request& from);
  void MergeFrom(const World_AddExcRec_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ExchangeRec stRecord = 1;
  inline bool has_strecord() const;
  inline void clear_strecord();
  static const int kStRecordFieldNumber = 1;
  inline const ::ExchangeRec& strecord() const;
  inline ::ExchangeRec* mutable_strecord();
  inline ::ExchangeRec* release_strecord();
  inline void set_allocated_strecord(::ExchangeRec* strecord);

  // @@protoc_insertion_point(class_scope:World_AddExcRec_Request)
 private:
  inline void set_has_strecord();
  inline void clear_has_strecord();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ExchangeRec* strecord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_AddExcRec_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_AddExcRec_Response : public ::google::protobuf::Message {
 public:
  World_AddExcRec_Response();
  virtual ~World_AddExcRec_Response();

  World_AddExcRec_Response(const World_AddExcRec_Response& from);

  inline World_AddExcRec_Response& operator=(const World_AddExcRec_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_AddExcRec_Response& default_instance();

  void Swap(World_AddExcRec_Response* other);

  // implements Message ----------------------------------------------

  World_AddExcRec_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_AddExcRec_Response& from);
  void MergeFrom(const World_AddExcRec_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_AddExcRec_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fWorld_2eproto();

  void InitAsDefaultInstance();
  static World_AddExcRec_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// World_ZoneChanged_Notify

// optional uint32 worldID = 1;
inline bool World_ZoneChanged_Notify::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_ZoneChanged_Notify::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_ZoneChanged_Notify::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_ZoneChanged_Notify::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 World_ZoneChanged_Notify::worldid() const {
  return worldid_;
}
inline void World_ZoneChanged_Notify::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional .ZoneList stZones = 2;
inline bool World_ZoneChanged_Notify::has_stzones() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_ZoneChanged_Notify::set_has_stzones() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_ZoneChanged_Notify::clear_has_stzones() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_ZoneChanged_Notify::clear_stzones() {
  if (stzones_ != NULL) stzones_->::ZoneList::Clear();
  clear_has_stzones();
}
inline const ::ZoneList& World_ZoneChanged_Notify::stzones() const {
  return stzones_ != NULL ? *stzones_ : *default_instance_->stzones_;
}
inline ::ZoneList* World_ZoneChanged_Notify::mutable_stzones() {
  set_has_stzones();
  if (stzones_ == NULL) stzones_ = new ::ZoneList;
  return stzones_;
}
inline ::ZoneList* World_ZoneChanged_Notify::release_stzones() {
  clear_has_stzones();
  ::ZoneList* temp = stzones_;
  stzones_ = NULL;
  return temp;
}
inline void World_ZoneChanged_Notify::set_allocated_stzones(::ZoneList* stzones) {
  delete stzones_;
  stzones_ = stzones;
  if (stzones) {
    set_has_stzones();
  } else {
    clear_has_stzones();
  }
}

// -------------------------------------------------------------------

// World_CreateRole_Request

// optional uint32 uin = 1;
inline bool World_CreateRole_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_CreateRole_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_CreateRole_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_CreateRole_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_CreateRole_Request::uin() const {
  return uin_;
}
inline void World_CreateRole_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 world = 2;
inline bool World_CreateRole_Request::has_world() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_CreateRole_Request::set_has_world() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_CreateRole_Request::clear_has_world() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_CreateRole_Request::clear_world() {
  world_ = 0u;
  clear_has_world();
}
inline ::google::protobuf::uint32 World_CreateRole_Request::world() const {
  return world_;
}
inline void World_CreateRole_Request::set_world(::google::protobuf::uint32 value) {
  set_has_world();
  world_ = value;
}

// optional int32 iRealNameStat = 3;
inline bool World_CreateRole_Request::has_irealnamestat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_CreateRole_Request::set_has_irealnamestat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_CreateRole_Request::clear_has_irealnamestat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_CreateRole_Request::clear_irealnamestat() {
  irealnamestat_ = 0;
  clear_has_irealnamestat();
}
inline ::google::protobuf::int32 World_CreateRole_Request::irealnamestat() const {
  return irealnamestat_;
}
inline void World_CreateRole_Request::set_irealnamestat(::google::protobuf::int32 value) {
  set_has_irealnamestat();
  irealnamestat_ = value;
}

// optional .GameUserInfo stBirthData = 4;
inline bool World_CreateRole_Request::has_stbirthdata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_CreateRole_Request::set_has_stbirthdata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_CreateRole_Request::clear_has_stbirthdata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_CreateRole_Request::clear_stbirthdata() {
  if (stbirthdata_ != NULL) stbirthdata_->::GameUserInfo::Clear();
  clear_has_stbirthdata();
}
inline const ::GameUserInfo& World_CreateRole_Request::stbirthdata() const {
  return stbirthdata_ != NULL ? *stbirthdata_ : *default_instance_->stbirthdata_;
}
inline ::GameUserInfo* World_CreateRole_Request::mutable_stbirthdata() {
  set_has_stbirthdata();
  if (stbirthdata_ == NULL) stbirthdata_ = new ::GameUserInfo;
  return stbirthdata_;
}
inline ::GameUserInfo* World_CreateRole_Request::release_stbirthdata() {
  clear_has_stbirthdata();
  ::GameUserInfo* temp = stbirthdata_;
  stbirthdata_ = NULL;
  return temp;
}
inline void World_CreateRole_Request::set_allocated_stbirthdata(::GameUserInfo* stbirthdata) {
  delete stbirthdata_;
  stbirthdata_ = stbirthdata;
  if (stbirthdata) {
    set_has_stbirthdata();
  } else {
    clear_has_stbirthdata();
  }
}

// optional .KickerInfo stKicker = 5;
inline bool World_CreateRole_Request::has_stkicker() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_CreateRole_Request::set_has_stkicker() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_CreateRole_Request::clear_has_stkicker() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_CreateRole_Request::clear_stkicker() {
  if (stkicker_ != NULL) stkicker_->::KickerInfo::Clear();
  clear_has_stkicker();
}
inline const ::KickerInfo& World_CreateRole_Request::stkicker() const {
  return stkicker_ != NULL ? *stkicker_ : *default_instance_->stkicker_;
}
inline ::KickerInfo* World_CreateRole_Request::mutable_stkicker() {
  set_has_stkicker();
  if (stkicker_ == NULL) stkicker_ = new ::KickerInfo;
  return stkicker_;
}
inline ::KickerInfo* World_CreateRole_Request::release_stkicker() {
  clear_has_stkicker();
  ::KickerInfo* temp = stkicker_;
  stkicker_ = NULL;
  return temp;
}
inline void World_CreateRole_Request::set_allocated_stkicker(::KickerInfo* stkicker) {
  delete stkicker_;
  stkicker_ = stkicker;
  if (stkicker) {
    set_has_stkicker();
  } else {
    clear_has_stkicker();
  }
}

// -------------------------------------------------------------------

// World_CreateRole_Response

// optional int32 iResult = 1;
inline bool World_CreateRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_CreateRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_CreateRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_CreateRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_CreateRole_Response::iresult() const {
  return iresult_;
}
inline void World_CreateRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool World_CreateRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_CreateRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_CreateRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_CreateRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_CreateRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_CreateRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_CreateRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_CreateRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iRealNameStat = 3;
inline bool World_CreateRole_Response::has_irealnamestat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_CreateRole_Response::set_has_irealnamestat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_CreateRole_Response::clear_has_irealnamestat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_CreateRole_Response::clear_irealnamestat() {
  irealnamestat_ = 0;
  clear_has_irealnamestat();
}
inline ::google::protobuf::int32 World_CreateRole_Response::irealnamestat() const {
  return irealnamestat_;
}
inline void World_CreateRole_Response::set_irealnamestat(::google::protobuf::int32 value) {
  set_has_irealnamestat();
  irealnamestat_ = value;
}

// optional .KickerInfo stKicker = 4;
inline bool World_CreateRole_Response::has_stkicker() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_CreateRole_Response::set_has_stkicker() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_CreateRole_Response::clear_has_stkicker() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_CreateRole_Response::clear_stkicker() {
  if (stkicker_ != NULL) stkicker_->::KickerInfo::Clear();
  clear_has_stkicker();
}
inline const ::KickerInfo& World_CreateRole_Response::stkicker() const {
  return stkicker_ != NULL ? *stkicker_ : *default_instance_->stkicker_;
}
inline ::KickerInfo* World_CreateRole_Response::mutable_stkicker() {
  set_has_stkicker();
  if (stkicker_ == NULL) stkicker_ = new ::KickerInfo;
  return stkicker_;
}
inline ::KickerInfo* World_CreateRole_Response::release_stkicker() {
  clear_has_stkicker();
  ::KickerInfo* temp = stkicker_;
  stkicker_ = NULL;
  return temp;
}
inline void World_CreateRole_Response::set_allocated_stkicker(::KickerInfo* stkicker) {
  delete stkicker_;
  stkicker_ = stkicker;
  if (stkicker) {
    set_has_stkicker();
  } else {
    clear_has_stkicker();
  }
}

// -------------------------------------------------------------------

// World_FetchRole_Request

// optional .RoleID stRoleID = 1;
inline bool World_FetchRole_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_FetchRole_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_FetchRole_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_FetchRole_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_FetchRole_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_FetchRole_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_FetchRole_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_FetchRole_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional bool bIsLogin = 2;
inline bool World_FetchRole_Request::has_bislogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_FetchRole_Request::set_has_bislogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_FetchRole_Request::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_FetchRole_Request::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_FetchRole_Request::bislogin() const {
  return bislogin_;
}
inline void World_FetchRole_Request::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// optional int32 iReqID = 4;
inline bool World_FetchRole_Request::has_ireqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_FetchRole_Request::set_has_ireqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_FetchRole_Request::clear_has_ireqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_FetchRole_Request::clear_ireqid() {
  ireqid_ = 0;
  clear_has_ireqid();
}
inline ::google::protobuf::int32 World_FetchRole_Request::ireqid() const {
  return ireqid_;
}
inline void World_FetchRole_Request::set_ireqid(::google::protobuf::int32 value) {
  set_has_ireqid();
  ireqid_ = value;
}

// optional .KickerInfo stKicker = 5;
inline bool World_FetchRole_Request::has_stkicker() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_FetchRole_Request::set_has_stkicker() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_FetchRole_Request::clear_has_stkicker() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_FetchRole_Request::clear_stkicker() {
  if (stkicker_ != NULL) stkicker_->::KickerInfo::Clear();
  clear_has_stkicker();
}
inline const ::KickerInfo& World_FetchRole_Request::stkicker() const {
  return stkicker_ != NULL ? *stkicker_ : *default_instance_->stkicker_;
}
inline ::KickerInfo* World_FetchRole_Request::mutable_stkicker() {
  set_has_stkicker();
  if (stkicker_ == NULL) stkicker_ = new ::KickerInfo;
  return stkicker_;
}
inline ::KickerInfo* World_FetchRole_Request::release_stkicker() {
  clear_has_stkicker();
  ::KickerInfo* temp = stkicker_;
  stkicker_ = NULL;
  return temp;
}
inline void World_FetchRole_Request::set_allocated_stkicker(::KickerInfo* stkicker) {
  delete stkicker_;
  stkicker_ = stkicker;
  if (stkicker) {
    set_has_stkicker();
  } else {
    clear_has_stkicker();
  }
}

// -------------------------------------------------------------------

// World_FetchRole_Response

// optional int32 iResult = 1;
inline bool World_FetchRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_FetchRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_FetchRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_FetchRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_FetchRole_Response::iresult() const {
  return iresult_;
}
inline void World_FetchRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool World_FetchRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_FetchRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_FetchRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_FetchRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_FetchRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_FetchRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_FetchRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_FetchRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional bool bExist = 3;
inline bool World_FetchRole_Response::has_bexist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_FetchRole_Response::set_has_bexist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_FetchRole_Response::clear_has_bexist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_FetchRole_Response::clear_bexist() {
  bexist_ = false;
  clear_has_bexist();
}
inline bool World_FetchRole_Response::bexist() const {
  return bexist_;
}
inline void World_FetchRole_Response::set_bexist(bool value) {
  set_has_bexist();
  bexist_ = value;
}

// optional bool bIsLogin = 4;
inline bool World_FetchRole_Response::has_bislogin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_FetchRole_Response::set_has_bislogin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_FetchRole_Response::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_FetchRole_Response::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_FetchRole_Response::bislogin() const {
  return bislogin_;
}
inline void World_FetchRole_Response::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// optional .GameUserInfo stUserInfo = 5;
inline bool World_FetchRole_Response::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_FetchRole_Response::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_FetchRole_Response::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_FetchRole_Response::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::GameUserInfo::Clear();
  clear_has_stuserinfo();
}
inline const ::GameUserInfo& World_FetchRole_Response::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::GameUserInfo* World_FetchRole_Response::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::GameUserInfo;
  return stuserinfo_;
}
inline ::GameUserInfo* World_FetchRole_Response::release_stuserinfo() {
  clear_has_stuserinfo();
  ::GameUserInfo* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void World_FetchRole_Response::set_allocated_stuserinfo(::GameUserInfo* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// optional .KickerInfo stKicker = 6;
inline bool World_FetchRole_Response::has_stkicker() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void World_FetchRole_Response::set_has_stkicker() {
  _has_bits_[0] |= 0x00000020u;
}
inline void World_FetchRole_Response::clear_has_stkicker() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void World_FetchRole_Response::clear_stkicker() {
  if (stkicker_ != NULL) stkicker_->::KickerInfo::Clear();
  clear_has_stkicker();
}
inline const ::KickerInfo& World_FetchRole_Response::stkicker() const {
  return stkicker_ != NULL ? *stkicker_ : *default_instance_->stkicker_;
}
inline ::KickerInfo* World_FetchRole_Response::mutable_stkicker() {
  set_has_stkicker();
  if (stkicker_ == NULL) stkicker_ = new ::KickerInfo;
  return stkicker_;
}
inline ::KickerInfo* World_FetchRole_Response::release_stkicker() {
  clear_has_stkicker();
  ::KickerInfo* temp = stkicker_;
  stkicker_ = NULL;
  return temp;
}
inline void World_FetchRole_Response::set_allocated_stkicker(::KickerInfo* stkicker) {
  delete stkicker_;
  stkicker_ = stkicker;
  if (stkicker) {
    set_has_stkicker();
  } else {
    clear_has_stkicker();
  }
}

// -------------------------------------------------------------------

// World_UpdateRole_Request

// optional .RoleID stRoleID = 1;
inline bool World_UpdateRole_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateRole_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateRole_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateRole_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_UpdateRole_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_UpdateRole_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_UpdateRole_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_UpdateRole_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iReqID = 2;
inline bool World_UpdateRole_Request::has_ireqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_UpdateRole_Request::set_has_ireqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_UpdateRole_Request::clear_has_ireqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_UpdateRole_Request::clear_ireqid() {
  ireqid_ = 0;
  clear_has_ireqid();
}
inline ::google::protobuf::int32 World_UpdateRole_Request::ireqid() const {
  return ireqid_;
}
inline void World_UpdateRole_Request::set_ireqid(::google::protobuf::int32 value) {
  set_has_ireqid();
  ireqid_ = value;
}

// optional .GameUserInfo stUserInfo = 3;
inline bool World_UpdateRole_Request::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_UpdateRole_Request::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_UpdateRole_Request::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_UpdateRole_Request::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::GameUserInfo::Clear();
  clear_has_stuserinfo();
}
inline const ::GameUserInfo& World_UpdateRole_Request::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::GameUserInfo* World_UpdateRole_Request::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::GameUserInfo;
  return stuserinfo_;
}
inline ::GameUserInfo* World_UpdateRole_Request::release_stuserinfo() {
  clear_has_stuserinfo();
  ::GameUserInfo* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void World_UpdateRole_Request::set_allocated_stuserinfo(::GameUserInfo* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// optional bool bNeedResponse = 4;
inline bool World_UpdateRole_Request::has_bneedresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_UpdateRole_Request::set_has_bneedresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_UpdateRole_Request::clear_has_bneedresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_UpdateRole_Request::clear_bneedresponse() {
  bneedresponse_ = false;
  clear_has_bneedresponse();
}
inline bool World_UpdateRole_Request::bneedresponse() const {
  return bneedresponse_;
}
inline void World_UpdateRole_Request::set_bneedresponse(bool value) {
  set_has_bneedresponse();
  bneedresponse_ = value;
}

// -------------------------------------------------------------------

// World_UpdateRole_Response

// optional .RoleID stRoleID = 1;
inline bool World_UpdateRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_UpdateRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_UpdateRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_UpdateRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_UpdateRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iResult = 2;
inline bool World_UpdateRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_UpdateRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_UpdateRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_UpdateRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_UpdateRole_Response::iresult() const {
  return iresult_;
}
inline void World_UpdateRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// KickerInfo

// optional int32 iFromWorldID = 1;
inline bool KickerInfo::has_ifromworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickerInfo::set_has_ifromworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickerInfo::clear_has_ifromworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickerInfo::clear_ifromworldid() {
  ifromworldid_ = 0;
  clear_has_ifromworldid();
}
inline ::google::protobuf::int32 KickerInfo::ifromworldid() const {
  return ifromworldid_;
}
inline void KickerInfo::set_ifromworldid(::google::protobuf::int32 value) {
  set_has_ifromworldid();
  ifromworldid_ = value;
}

// optional int32 iFromZoneID = 2;
inline bool KickerInfo::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickerInfo::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickerInfo::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickerInfo::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 KickerInfo::ifromzoneid() const {
  return ifromzoneid_;
}
inline void KickerInfo::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional int32 iSessionID = 3;
inline bool KickerInfo::has_isessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickerInfo::set_has_isessionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickerInfo::clear_has_isessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickerInfo::clear_isessionid() {
  isessionid_ = 0;
  clear_has_isessionid();
}
inline ::google::protobuf::int32 KickerInfo::isessionid() const {
  return isessionid_;
}
inline void KickerInfo::set_isessionid(::google::protobuf::int32 value) {
  set_has_isessionid();
  isessionid_ = value;
}

// optional .RoleID stRoleID = 4;
inline bool KickerInfo::has_stroleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KickerInfo::set_has_stroleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KickerInfo::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KickerInfo::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& KickerInfo::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* KickerInfo::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* KickerInfo::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void KickerInfo::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional string strNickName = 5;
inline bool KickerInfo::has_strnickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KickerInfo::set_has_strnickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KickerInfo::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KickerInfo::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& KickerInfo::strnickname() const {
  return *strnickname_;
}
inline void KickerInfo::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void KickerInfo::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void KickerInfo::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KickerInfo::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* KickerInfo::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void KickerInfo::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strChannel = 6;
inline bool KickerInfo::has_strchannel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KickerInfo::set_has_strchannel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KickerInfo::clear_has_strchannel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KickerInfo::clear_strchannel() {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    strchannel_->clear();
  }
  clear_has_strchannel();
}
inline const ::std::string& KickerInfo::strchannel() const {
  return *strchannel_;
}
inline void KickerInfo::set_strchannel(const ::std::string& value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void KickerInfo::set_strchannel(const char* value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void KickerInfo::set_strchannel(const char* value, size_t size) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KickerInfo::mutable_strchannel() {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  return strchannel_;
}
inline ::std::string* KickerInfo::release_strchannel() {
  clear_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannel_;
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void KickerInfo::set_allocated_strchannel(::std::string* strchannel) {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannel_;
  }
  if (strchannel) {
    set_has_strchannel();
    strchannel_ = strchannel;
  } else {
    clear_has_strchannel();
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iRealNameStat = 7;
inline bool KickerInfo::has_irealnamestat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void KickerInfo::set_has_irealnamestat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void KickerInfo::clear_has_irealnamestat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void KickerInfo::clear_irealnamestat() {
  irealnamestat_ = 0;
  clear_has_irealnamestat();
}
inline ::google::protobuf::int32 KickerInfo::irealnamestat() const {
  return irealnamestat_;
}
inline void KickerInfo::set_irealnamestat(::google::protobuf::int32 value) {
  set_has_irealnamestat();
  irealnamestat_ = value;
}

// optional string strAccount = 8;
inline bool KickerInfo::has_straccount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void KickerInfo::set_has_straccount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void KickerInfo::clear_has_straccount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void KickerInfo::clear_straccount() {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    straccount_->clear();
  }
  clear_has_straccount();
}
inline const ::std::string& KickerInfo::straccount() const {
  return *straccount_;
}
inline void KickerInfo::set_straccount(const ::std::string& value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void KickerInfo::set_straccount(const char* value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void KickerInfo::set_straccount(const char* value, size_t size) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KickerInfo::mutable_straccount() {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  return straccount_;
}
inline ::std::string* KickerInfo::release_straccount() {
  clear_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccount_;
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void KickerInfo::set_allocated_straccount(::std::string* straccount) {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    delete straccount_;
  }
  if (straccount) {
    set_has_straccount();
    straccount_ = straccount;
  } else {
    clear_has_straccount();
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strDeviceID = 9;
inline bool KickerInfo::has_strdeviceid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void KickerInfo::set_has_strdeviceid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void KickerInfo::clear_has_strdeviceid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void KickerInfo::clear_strdeviceid() {
  if (strdeviceid_ != &::google::protobuf::internal::kEmptyString) {
    strdeviceid_->clear();
  }
  clear_has_strdeviceid();
}
inline const ::std::string& KickerInfo::strdeviceid() const {
  return *strdeviceid_;
}
inline void KickerInfo::set_strdeviceid(const ::std::string& value) {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  strdeviceid_->assign(value);
}
inline void KickerInfo::set_strdeviceid(const char* value) {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  strdeviceid_->assign(value);
}
inline void KickerInfo::set_strdeviceid(const char* value, size_t size) {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  strdeviceid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KickerInfo::mutable_strdeviceid() {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  return strdeviceid_;
}
inline ::std::string* KickerInfo::release_strdeviceid() {
  clear_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdeviceid_;
    strdeviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void KickerInfo::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strdeviceid_;
  }
  if (strdeviceid) {
    set_has_strdeviceid();
    strdeviceid_ = strdeviceid;
  } else {
    clear_has_strdeviceid();
    strdeviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// World_KickRole_Request

// optional bool bIsLogin = 1;
inline bool World_KickRole_Request::has_bislogin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_KickRole_Request::set_has_bislogin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_KickRole_Request::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_KickRole_Request::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_KickRole_Request::bislogin() const {
  return bislogin_;
}
inline void World_KickRole_Request::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// optional .KickerInfo stKicker = 2;
inline bool World_KickRole_Request::has_stkicker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_KickRole_Request::set_has_stkicker() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_KickRole_Request::clear_has_stkicker() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_KickRole_Request::clear_stkicker() {
  if (stkicker_ != NULL) stkicker_->::KickerInfo::Clear();
  clear_has_stkicker();
}
inline const ::KickerInfo& World_KickRole_Request::stkicker() const {
  return stkicker_ != NULL ? *stkicker_ : *default_instance_->stkicker_;
}
inline ::KickerInfo* World_KickRole_Request::mutable_stkicker() {
  set_has_stkicker();
  if (stkicker_ == NULL) stkicker_ = new ::KickerInfo;
  return stkicker_;
}
inline ::KickerInfo* World_KickRole_Request::release_stkicker() {
  clear_has_stkicker();
  ::KickerInfo* temp = stkicker_;
  stkicker_ = NULL;
  return temp;
}
inline void World_KickRole_Request::set_allocated_stkicker(::KickerInfo* stkicker) {
  delete stkicker_;
  stkicker_ = stkicker;
  if (stkicker) {
    set_has_stkicker();
  } else {
    clear_has_stkicker();
  }
}

// optional uint32 uKickedUin = 3;
inline bool World_KickRole_Request::has_ukickeduin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_KickRole_Request::set_has_ukickeduin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_KickRole_Request::clear_has_ukickeduin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_KickRole_Request::clear_ukickeduin() {
  ukickeduin_ = 0u;
  clear_has_ukickeduin();
}
inline ::google::protobuf::uint32 World_KickRole_Request::ukickeduin() const {
  return ukickeduin_;
}
inline void World_KickRole_Request::set_ukickeduin(::google::protobuf::uint32 value) {
  set_has_ukickeduin();
  ukickeduin_ = value;
}

// -------------------------------------------------------------------

// World_KickRole_Response

// optional int32 iResult = 1;
inline bool World_KickRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_KickRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_KickRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_KickRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_KickRole_Response::iresult() const {
  return iresult_;
}
inline void World_KickRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional bool bIsLogin = 2;
inline bool World_KickRole_Response::has_bislogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_KickRole_Response::set_has_bislogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_KickRole_Response::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_KickRole_Response::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_KickRole_Response::bislogin() const {
  return bislogin_;
}
inline void World_KickRole_Response::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// optional .KickerInfo stKicker = 3;
inline bool World_KickRole_Response::has_stkicker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_KickRole_Response::set_has_stkicker() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_KickRole_Response::clear_has_stkicker() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_KickRole_Response::clear_stkicker() {
  if (stkicker_ != NULL) stkicker_->::KickerInfo::Clear();
  clear_has_stkicker();
}
inline const ::KickerInfo& World_KickRole_Response::stkicker() const {
  return stkicker_ != NULL ? *stkicker_ : *default_instance_->stkicker_;
}
inline ::KickerInfo* World_KickRole_Response::mutable_stkicker() {
  set_has_stkicker();
  if (stkicker_ == NULL) stkicker_ = new ::KickerInfo;
  return stkicker_;
}
inline ::KickerInfo* World_KickRole_Response::release_stkicker() {
  clear_has_stkicker();
  ::KickerInfo* temp = stkicker_;
  stkicker_ = NULL;
  return temp;
}
inline void World_KickRole_Response::set_allocated_stkicker(::KickerInfo* stkicker) {
  delete stkicker_;
  stkicker_ = stkicker;
  if (stkicker) {
    set_has_stkicker();
  } else {
    clear_has_stkicker();
  }
}

// optional uint32 uKickedUin = 4;
inline bool World_KickRole_Response::has_ukickeduin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_KickRole_Response::set_has_ukickeduin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_KickRole_Response::clear_has_ukickeduin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_KickRole_Response::clear_ukickeduin() {
  ukickeduin_ = 0u;
  clear_has_ukickeduin();
}
inline ::google::protobuf::uint32 World_KickRole_Response::ukickeduin() const {
  return ukickeduin_;
}
inline void World_KickRole_Response::set_ukickeduin(::google::protobuf::uint32 value) {
  set_has_ukickeduin();
  ukickeduin_ = value;
}

// -------------------------------------------------------------------

// ZoneOnlineInfo

// optional int32 iZoneID = 1;
inline bool ZoneOnlineInfo::has_izoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneOnlineInfo::set_has_izoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneOnlineInfo::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneOnlineInfo::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 ZoneOnlineInfo::izoneid() const {
  return izoneid_;
}
inline void ZoneOnlineInfo::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iRoleNum = 2;
inline bool ZoneOnlineInfo::has_irolenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneOnlineInfo::set_has_irolenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneOnlineInfo::clear_has_irolenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneOnlineInfo::clear_irolenum() {
  irolenum_ = 0;
  clear_has_irolenum();
}
inline ::google::protobuf::int32 ZoneOnlineInfo::irolenum() const {
  return irolenum_;
}
inline void ZoneOnlineInfo::set_irolenum(::google::protobuf::int32 value) {
  set_has_irolenum();
  irolenum_ = value;
}

// -------------------------------------------------------------------

// WorldOnlineInfo

// optional int32 iWorldID = 1;
inline bool WorldOnlineInfo::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldOnlineInfo::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldOnlineInfo::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldOnlineInfo::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 WorldOnlineInfo::iworldid() const {
  return iworldid_;
}
inline void WorldOnlineInfo::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional int32 iOnlineRoleNum = 2;
inline bool WorldOnlineInfo::has_ionlinerolenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldOnlineInfo::set_has_ionlinerolenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldOnlineInfo::clear_has_ionlinerolenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldOnlineInfo::clear_ionlinerolenum() {
  ionlinerolenum_ = 0;
  clear_has_ionlinerolenum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::ionlinerolenum() const {
  return ionlinerolenum_;
}
inline void WorldOnlineInfo::set_ionlinerolenum(::google::protobuf::int32 value) {
  set_has_ionlinerolenum();
  ionlinerolenum_ = value;
}

// optional int32 iRegisterNum = 3;
inline bool WorldOnlineInfo::has_iregisternum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldOnlineInfo::set_has_iregisternum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldOnlineInfo::clear_has_iregisternum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldOnlineInfo::clear_iregisternum() {
  iregisternum_ = 0;
  clear_has_iregisternum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::iregisternum() const {
  return iregisternum_;
}
inline void WorldOnlineInfo::set_iregisternum(::google::protobuf::int32 value) {
  set_has_iregisternum();
  iregisternum_ = value;
}

// optional int32 iMaxOnlineNum = 4;
inline bool WorldOnlineInfo::has_imaxonlinenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldOnlineInfo::set_has_imaxonlinenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldOnlineInfo::clear_has_imaxonlinenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldOnlineInfo::clear_imaxonlinenum() {
  imaxonlinenum_ = 0;
  clear_has_imaxonlinenum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::imaxonlinenum() const {
  return imaxonlinenum_;
}
inline void WorldOnlineInfo::set_imaxonlinenum(::google::protobuf::int32 value) {
  set_has_imaxonlinenum();
  imaxonlinenum_ = value;
}

// optional int32 iMaxRegisterNum = 5;
inline bool WorldOnlineInfo::has_imaxregisternum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldOnlineInfo::set_has_imaxregisternum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldOnlineInfo::clear_has_imaxregisternum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldOnlineInfo::clear_imaxregisternum() {
  imaxregisternum_ = 0;
  clear_has_imaxregisternum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::imaxregisternum() const {
  return imaxregisternum_;
}
inline void WorldOnlineInfo::set_imaxregisternum(::google::protobuf::int32 value) {
  set_has_imaxregisternum();
  imaxregisternum_ = value;
}

// optional int32 iActiveZoneNum = 6;
inline bool WorldOnlineInfo::has_iactivezonenum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldOnlineInfo::set_has_iactivezonenum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldOnlineInfo::clear_has_iactivezonenum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldOnlineInfo::clear_iactivezonenum() {
  iactivezonenum_ = 0;
  clear_has_iactivezonenum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::iactivezonenum() const {
  return iactivezonenum_;
}
inline void WorldOnlineInfo::set_iactivezonenum(::google::protobuf::int32 value) {
  set_has_iactivezonenum();
  iactivezonenum_ = value;
}

// repeated .ZoneOnlineInfo stZoneInfos = 7;
inline int WorldOnlineInfo::stzoneinfos_size() const {
  return stzoneinfos_.size();
}
inline void WorldOnlineInfo::clear_stzoneinfos() {
  stzoneinfos_.Clear();
}
inline const ::ZoneOnlineInfo& WorldOnlineInfo::stzoneinfos(int index) const {
  return stzoneinfos_.Get(index);
}
inline ::ZoneOnlineInfo* WorldOnlineInfo::mutable_stzoneinfos(int index) {
  return stzoneinfos_.Mutable(index);
}
inline ::ZoneOnlineInfo* WorldOnlineInfo::add_stzoneinfos() {
  return stzoneinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >&
WorldOnlineInfo::stzoneinfos() const {
  return stzoneinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >*
WorldOnlineInfo::mutable_stzoneinfos() {
  return &stzoneinfos_;
}

// -------------------------------------------------------------------

// World_OnlineStat_Request

// optional int32 iWorldID = 1;
inline bool World_OnlineStat_Request::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_OnlineStat_Request::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_OnlineStat_Request::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_OnlineStat_Request::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 World_OnlineStat_Request::iworldid() const {
  return iworldid_;
}
inline void World_OnlineStat_Request::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional .WorldOnlineInfo stWorldInfo = 2;
inline bool World_OnlineStat_Request::has_stworldinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_OnlineStat_Request::set_has_stworldinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_OnlineStat_Request::clear_has_stworldinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_OnlineStat_Request::clear_stworldinfo() {
  if (stworldinfo_ != NULL) stworldinfo_->::WorldOnlineInfo::Clear();
  clear_has_stworldinfo();
}
inline const ::WorldOnlineInfo& World_OnlineStat_Request::stworldinfo() const {
  return stworldinfo_ != NULL ? *stworldinfo_ : *default_instance_->stworldinfo_;
}
inline ::WorldOnlineInfo* World_OnlineStat_Request::mutable_stworldinfo() {
  set_has_stworldinfo();
  if (stworldinfo_ == NULL) stworldinfo_ = new ::WorldOnlineInfo;
  return stworldinfo_;
}
inline ::WorldOnlineInfo* World_OnlineStat_Request::release_stworldinfo() {
  clear_has_stworldinfo();
  ::WorldOnlineInfo* temp = stworldinfo_;
  stworldinfo_ = NULL;
  return temp;
}
inline void World_OnlineStat_Request::set_allocated_stworldinfo(::WorldOnlineInfo* stworldinfo) {
  delete stworldinfo_;
  stworldinfo_ = stworldinfo;
  if (stworldinfo) {
    set_has_stworldinfo();
  } else {
    clear_has_stworldinfo();
  }
}

// optional int32 uRecordTime = 3;
inline bool World_OnlineStat_Request::has_urecordtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_OnlineStat_Request::set_has_urecordtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_OnlineStat_Request::clear_has_urecordtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_OnlineStat_Request::clear_urecordtime() {
  urecordtime_ = 0;
  clear_has_urecordtime();
}
inline ::google::protobuf::int32 World_OnlineStat_Request::urecordtime() const {
  return urecordtime_;
}
inline void World_OnlineStat_Request::set_urecordtime(::google::protobuf::int32 value) {
  set_has_urecordtime();
  urecordtime_ = value;
}

// -------------------------------------------------------------------

// World_OnlineStat_Response

// optional int32 iWorldID = 1;
inline bool World_OnlineStat_Response::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_OnlineStat_Response::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_OnlineStat_Response::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_OnlineStat_Response::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 World_OnlineStat_Response::iworldid() const {
  return iworldid_;
}
inline void World_OnlineStat_Response::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional int32 iInstanceID = 2;
inline bool World_OnlineStat_Response::has_iinstanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_OnlineStat_Response::set_has_iinstanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_OnlineStat_Response::clear_has_iinstanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_OnlineStat_Response::clear_iinstanceid() {
  iinstanceid_ = 0;
  clear_has_iinstanceid();
}
inline ::google::protobuf::int32 World_OnlineStat_Response::iinstanceid() const {
  return iinstanceid_;
}
inline void World_OnlineStat_Response::set_iinstanceid(::google::protobuf::int32 value) {
  set_has_iinstanceid();
  iinstanceid_ = value;
}

// -------------------------------------------------------------------

// World_Chat_Notify

// optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
inline bool World_Chat_Notify::has_ichannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_Chat_Notify::set_has_ichannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_Chat_Notify::clear_has_ichannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_Chat_Notify::clear_ichannel() {
  ichannel_ = 0;
  clear_has_ichannel();
}
inline ::ChatChannelType World_Chat_Notify::ichannel() const {
  return static_cast< ::ChatChannelType >(ichannel_);
}
inline void World_Chat_Notify::set_ichannel(::ChatChannelType value) {
  assert(::ChatChannelType_IsValid(value));
  set_has_ichannel();
  ichannel_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool World_Chat_Notify::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_Chat_Notify::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_Chat_Notify::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_Chat_Notify::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_Chat_Notify::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_Chat_Notify::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_Chat_Notify::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_Chat_Notify::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iZoneID = 4;
inline bool World_Chat_Notify::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_Chat_Notify::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_Chat_Notify::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_Chat_Notify::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 World_Chat_Notify::izoneid() const {
  return izoneid_;
}
inline void World_Chat_Notify::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional string szNickName = 3;
inline bool World_Chat_Notify::has_sznickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_Chat_Notify::set_has_sznickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_Chat_Notify::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_Chat_Notify::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::kEmptyString) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& World_Chat_Notify::sznickname() const {
  return *sznickname_;
}
inline void World_Chat_Notify::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
}
inline void World_Chat_Notify::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
}
inline void World_Chat_Notify::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_Chat_Notify::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    sznickname_ = new ::std::string;
  }
  return sznickname_;
}
inline ::std::string* World_Chat_Notify::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_Chat_Notify::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::kEmptyString) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .RoleID stTargetID = 5;
inline bool World_Chat_Notify::has_sttargetid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_Chat_Notify::set_has_sttargetid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_Chat_Notify::clear_has_sttargetid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_Chat_Notify::clear_sttargetid() {
  if (sttargetid_ != NULL) sttargetid_->::RoleID::Clear();
  clear_has_sttargetid();
}
inline const ::RoleID& World_Chat_Notify::sttargetid() const {
  return sttargetid_ != NULL ? *sttargetid_ : *default_instance_->sttargetid_;
}
inline ::RoleID* World_Chat_Notify::mutable_sttargetid() {
  set_has_sttargetid();
  if (sttargetid_ == NULL) sttargetid_ = new ::RoleID;
  return sttargetid_;
}
inline ::RoleID* World_Chat_Notify::release_sttargetid() {
  clear_has_sttargetid();
  ::RoleID* temp = sttargetid_;
  sttargetid_ = NULL;
  return temp;
}
inline void World_Chat_Notify::set_allocated_sttargetid(::RoleID* sttargetid) {
  delete sttargetid_;
  sttargetid_ = sttargetid;
  if (sttargetid) {
    set_has_sttargetid();
  } else {
    clear_has_sttargetid();
  }
}

// optional string szMessage = 6;
inline bool World_Chat_Notify::has_szmessage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void World_Chat_Notify::set_has_szmessage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void World_Chat_Notify::clear_has_szmessage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void World_Chat_Notify::clear_szmessage() {
  if (szmessage_ != &::google::protobuf::internal::kEmptyString) {
    szmessage_->clear();
  }
  clear_has_szmessage();
}
inline const ::std::string& World_Chat_Notify::szmessage() const {
  return *szmessage_;
}
inline void World_Chat_Notify::set_szmessage(const ::std::string& value) {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  szmessage_->assign(value);
}
inline void World_Chat_Notify::set_szmessage(const char* value) {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  szmessage_->assign(value);
}
inline void World_Chat_Notify::set_szmessage(const char* value, size_t size) {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  szmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_Chat_Notify::mutable_szmessage() {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  return szmessage_;
}
inline ::std::string* World_Chat_Notify::release_szmessage() {
  clear_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szmessage_;
    szmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_Chat_Notify::set_allocated_szmessage(::std::string* szmessage) {
  if (szmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete szmessage_;
  }
  if (szmessage) {
    set_has_szmessage();
    szmessage_ = szmessage;
  } else {
    clear_has_szmessage();
    szmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UpdateRankInfo

// optional int32 iRankType = 1;
inline bool UpdateRankInfo::has_iranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRankInfo::set_has_iranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRankInfo::clear_has_iranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRankInfo::clear_iranktype() {
  iranktype_ = 0;
  clear_has_iranktype();
}
inline ::google::protobuf::int32 UpdateRankInfo::iranktype() const {
  return iranktype_;
}
inline void UpdateRankInfo::set_iranktype(::google::protobuf::int32 value) {
  set_has_iranktype();
  iranktype_ = value;
}

// optional .RankInfo stRank = 2;
inline bool UpdateRankInfo::has_strank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateRankInfo::set_has_strank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateRankInfo::clear_has_strank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateRankInfo::clear_strank() {
  if (strank_ != NULL) strank_->::RankInfo::Clear();
  clear_has_strank();
}
inline const ::RankInfo& UpdateRankInfo::strank() const {
  return strank_ != NULL ? *strank_ : *default_instance_->strank_;
}
inline ::RankInfo* UpdateRankInfo::mutable_strank() {
  set_has_strank();
  if (strank_ == NULL) strank_ = new ::RankInfo;
  return strank_;
}
inline ::RankInfo* UpdateRankInfo::release_strank() {
  clear_has_strank();
  ::RankInfo* temp = strank_;
  strank_ = NULL;
  return temp;
}
inline void UpdateRankInfo::set_allocated_strank(::RankInfo* strank) {
  delete strank_;
  strank_ = strank;
  if (strank) {
    set_has_strank();
  } else {
    clear_has_strank();
  }
}

// -------------------------------------------------------------------

// World_UpdateRank_Request

// optional int32 iFromZoneID = 1;
inline bool World_UpdateRank_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateRank_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateRank_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateRank_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_UpdateRank_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_UpdateRank_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// repeated .UpdateRankInfo stUpdateRanks = 2;
inline int World_UpdateRank_Request::stupdateranks_size() const {
  return stupdateranks_.size();
}
inline void World_UpdateRank_Request::clear_stupdateranks() {
  stupdateranks_.Clear();
}
inline const ::UpdateRankInfo& World_UpdateRank_Request::stupdateranks(int index) const {
  return stupdateranks_.Get(index);
}
inline ::UpdateRankInfo* World_UpdateRank_Request::mutable_stupdateranks(int index) {
  return stupdateranks_.Mutable(index);
}
inline ::UpdateRankInfo* World_UpdateRank_Request::add_stupdateranks() {
  return stupdateranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UpdateRankInfo >&
World_UpdateRank_Request::stupdateranks() const {
  return stupdateranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::UpdateRankInfo >*
World_UpdateRank_Request::mutable_stupdateranks() {
  return &stupdateranks_;
}

// -------------------------------------------------------------------

// World_UpdateRank_Response

// optional int32 iResult = 1;
inline bool World_UpdateRank_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateRank_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateRank_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateRank_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_UpdateRank_Response::iresult() const {
  return iresult_;
}
inline void World_UpdateRank_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// World_GetRankInfo_Request

// optional int32 iType = 1;
inline bool World_GetRankInfo_Request::has_itype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetRankInfo_Request::set_has_itype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetRankInfo_Request::clear_has_itype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetRankInfo_Request::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 World_GetRankInfo_Request::itype() const {
  return itype_;
}
inline void World_GetRankInfo_Request::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional uint32 iVersionID = 2;
inline bool World_GetRankInfo_Request::has_iversionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetRankInfo_Request::set_has_iversionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetRankInfo_Request::clear_has_iversionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetRankInfo_Request::clear_iversionid() {
  iversionid_ = 0u;
  clear_has_iversionid();
}
inline ::google::protobuf::uint32 World_GetRankInfo_Request::iversionid() const {
  return iversionid_;
}
inline void World_GetRankInfo_Request::set_iversionid(::google::protobuf::uint32 value) {
  set_has_iversionid();
  iversionid_ = value;
}

// optional int32 iFromZoneID = 3;
inline bool World_GetRankInfo_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetRankInfo_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetRankInfo_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetRankInfo_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_GetRankInfo_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_GetRankInfo_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// -------------------------------------------------------------------

// World_GetRankInfo_Response

// optional int32 iResult = 1;
inline bool World_GetRankInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetRankInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetRankInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetRankInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_GetRankInfo_Response::iresult() const {
  return iresult_;
}
inline void World_GetRankInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iType = 2;
inline bool World_GetRankInfo_Response::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetRankInfo_Response::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetRankInfo_Response::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetRankInfo_Response::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 World_GetRankInfo_Response::itype() const {
  return itype_;
}
inline void World_GetRankInfo_Response::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional uint32 iVersionID = 3;
inline bool World_GetRankInfo_Response::has_iversionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetRankInfo_Response::set_has_iversionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetRankInfo_Response::clear_has_iversionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetRankInfo_Response::clear_iversionid() {
  iversionid_ = 0u;
  clear_has_iversionid();
}
inline ::google::protobuf::uint32 World_GetRankInfo_Response::iversionid() const {
  return iversionid_;
}
inline void World_GetRankInfo_Response::set_iversionid(::google::protobuf::uint32 value) {
  set_has_iversionid();
  iversionid_ = value;
}

// optional int32 iLastUpdate = 4;
inline bool World_GetRankInfo_Response::has_ilastupdate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_GetRankInfo_Response::set_has_ilastupdate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_GetRankInfo_Response::clear_has_ilastupdate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_GetRankInfo_Response::clear_ilastupdate() {
  ilastupdate_ = 0;
  clear_has_ilastupdate();
}
inline ::google::protobuf::int32 World_GetRankInfo_Response::ilastupdate() const {
  return ilastupdate_;
}
inline void World_GetRankInfo_Response::set_ilastupdate(::google::protobuf::int32 value) {
  set_has_ilastupdate();
  ilastupdate_ = value;
}

// repeated .RankInfo stRanks = 5;
inline int World_GetRankInfo_Response::stranks_size() const {
  return stranks_.size();
}
inline void World_GetRankInfo_Response::clear_stranks() {
  stranks_.Clear();
}
inline const ::RankInfo& World_GetRankInfo_Response::stranks(int index) const {
  return stranks_.Get(index);
}
inline ::RankInfo* World_GetRankInfo_Response::mutable_stranks(int index) {
  return stranks_.Mutable(index);
}
inline ::RankInfo* World_GetRankInfo_Response::add_stranks() {
  return stranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
World_GetRankInfo_Response::stranks() const {
  return stranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
World_GetRankInfo_Response::mutable_stranks() {
  return &stranks_;
}

// repeated .RankInfo stLastRanks = 6;
inline int World_GetRankInfo_Response::stlastranks_size() const {
  return stlastranks_.size();
}
inline void World_GetRankInfo_Response::clear_stlastranks() {
  stlastranks_.Clear();
}
inline const ::RankInfo& World_GetRankInfo_Response::stlastranks(int index) const {
  return stlastranks_.Get(index);
}
inline ::RankInfo* World_GetRankInfo_Response::mutable_stlastranks(int index) {
  return stlastranks_.Mutable(index);
}
inline ::RankInfo* World_GetRankInfo_Response::add_stlastranks() {
  return stlastranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
World_GetRankInfo_Response::stlastranks() const {
  return stlastranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
World_GetRankInfo_Response::mutable_stlastranks() {
  return &stlastranks_;
}

// -------------------------------------------------------------------

// World_SendMail_Request

// optional .OneMailInfo stMailInfo = 1;
inline bool World_SendMail_Request::has_stmailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_SendMail_Request::set_has_stmailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_SendMail_Request::clear_has_stmailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_SendMail_Request::clear_stmailinfo() {
  if (stmailinfo_ != NULL) stmailinfo_->::OneMailInfo::Clear();
  clear_has_stmailinfo();
}
inline const ::OneMailInfo& World_SendMail_Request::stmailinfo() const {
  return stmailinfo_ != NULL ? *stmailinfo_ : *default_instance_->stmailinfo_;
}
inline ::OneMailInfo* World_SendMail_Request::mutable_stmailinfo() {
  set_has_stmailinfo();
  if (stmailinfo_ == NULL) stmailinfo_ = new ::OneMailInfo;
  return stmailinfo_;
}
inline ::OneMailInfo* World_SendMail_Request::release_stmailinfo() {
  clear_has_stmailinfo();
  ::OneMailInfo* temp = stmailinfo_;
  stmailinfo_ = NULL;
  return temp;
}
inline void World_SendMail_Request::set_allocated_stmailinfo(::OneMailInfo* stmailinfo) {
  delete stmailinfo_;
  stmailinfo_ = stmailinfo;
  if (stmailinfo) {
    set_has_stmailinfo();
  } else {
    clear_has_stmailinfo();
  }
}

// optional uint32 uiFromUin = 2;
inline bool World_SendMail_Request::has_uifromuin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_SendMail_Request::set_has_uifromuin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_SendMail_Request::clear_has_uifromuin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_SendMail_Request::clear_uifromuin() {
  uifromuin_ = 0u;
  clear_has_uifromuin();
}
inline ::google::protobuf::uint32 World_SendMail_Request::uifromuin() const {
  return uifromuin_;
}
inline void World_SendMail_Request::set_uifromuin(::google::protobuf::uint32 value) {
  set_has_uifromuin();
  uifromuin_ = value;
}

// optional uint32 uiToUin = 3;
inline bool World_SendMail_Request::has_uitouin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_SendMail_Request::set_has_uitouin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_SendMail_Request::clear_has_uitouin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_SendMail_Request::clear_uitouin() {
  uitouin_ = 0u;
  clear_has_uitouin();
}
inline ::google::protobuf::uint32 World_SendMail_Request::uitouin() const {
  return uitouin_;
}
inline void World_SendMail_Request::set_uitouin(::google::protobuf::uint32 value) {
  set_has_uitouin();
  uitouin_ = value;
}

// optional int32 iTryTimes = 4;
inline bool World_SendMail_Request::has_itrytimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_SendMail_Request::set_has_itrytimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_SendMail_Request::clear_has_itrytimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_SendMail_Request::clear_itrytimes() {
  itrytimes_ = 0;
  clear_has_itrytimes();
}
inline ::google::protobuf::int32 World_SendMail_Request::itrytimes() const {
  return itrytimes_;
}
inline void World_SendMail_Request::set_itrytimes(::google::protobuf::int32 value) {
  set_has_itrytimes();
  itrytimes_ = value;
}

// -------------------------------------------------------------------

// World_SendMail_Response

// optional int32 iResult = 1;
inline bool World_SendMail_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_SendMail_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_SendMail_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_SendMail_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_SendMail_Response::iresult() const {
  return iresult_;
}
inline void World_SendMail_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .OneMailInfo stMailInfo = 2;
inline bool World_SendMail_Response::has_stmailinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_SendMail_Response::set_has_stmailinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_SendMail_Response::clear_has_stmailinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_SendMail_Response::clear_stmailinfo() {
  if (stmailinfo_ != NULL) stmailinfo_->::OneMailInfo::Clear();
  clear_has_stmailinfo();
}
inline const ::OneMailInfo& World_SendMail_Response::stmailinfo() const {
  return stmailinfo_ != NULL ? *stmailinfo_ : *default_instance_->stmailinfo_;
}
inline ::OneMailInfo* World_SendMail_Response::mutable_stmailinfo() {
  set_has_stmailinfo();
  if (stmailinfo_ == NULL) stmailinfo_ = new ::OneMailInfo;
  return stmailinfo_;
}
inline ::OneMailInfo* World_SendMail_Response::release_stmailinfo() {
  clear_has_stmailinfo();
  ::OneMailInfo* temp = stmailinfo_;
  stmailinfo_ = NULL;
  return temp;
}
inline void World_SendMail_Response::set_allocated_stmailinfo(::OneMailInfo* stmailinfo) {
  delete stmailinfo_;
  stmailinfo_ = stmailinfo;
  if (stmailinfo) {
    set_has_stmailinfo();
  } else {
    clear_has_stmailinfo();
  }
}

// optional uint32 uiFromUin = 3;
inline bool World_SendMail_Response::has_uifromuin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_SendMail_Response::set_has_uifromuin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_SendMail_Response::clear_has_uifromuin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_SendMail_Response::clear_uifromuin() {
  uifromuin_ = 0u;
  clear_has_uifromuin();
}
inline ::google::protobuf::uint32 World_SendMail_Response::uifromuin() const {
  return uifromuin_;
}
inline void World_SendMail_Response::set_uifromuin(::google::protobuf::uint32 value) {
  set_has_uifromuin();
  uifromuin_ = value;
}

// optional uint32 uiToUin = 4;
inline bool World_SendMail_Response::has_uitouin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_SendMail_Response::set_has_uitouin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_SendMail_Response::clear_has_uitouin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_SendMail_Response::clear_uitouin() {
  uitouin_ = 0u;
  clear_has_uitouin();
}
inline ::google::protobuf::uint32 World_SendMail_Response::uitouin() const {
  return uitouin_;
}
inline void World_SendMail_Response::set_uitouin(::google::protobuf::uint32 value) {
  set_has_uitouin();
  uitouin_ = value;
}

// optional int32 iTryTimes = 5;
inline bool World_SendMail_Response::has_itrytimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_SendMail_Response::set_has_itrytimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_SendMail_Response::clear_has_itrytimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_SendMail_Response::clear_itrytimes() {
  itrytimes_ = 0;
  clear_has_itrytimes();
}
inline ::google::protobuf::int32 World_SendMail_Response::itrytimes() const {
  return itrytimes_;
}
inline void World_SendMail_Response::set_itrytimes(::google::protobuf::int32 value) {
  set_has_itrytimes();
  itrytimes_ = value;
}

// -------------------------------------------------------------------

// World_AddLimitNum_Request

// optional uint32 uin = 1;
inline bool World_AddLimitNum_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_AddLimitNum_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_AddLimitNum_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_AddLimitNum_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_AddLimitNum_Request::uin() const {
  return uin_;
}
inline void World_AddLimitNum_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iExchangeID = 2;
inline bool World_AddLimitNum_Request::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_AddLimitNum_Request::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_AddLimitNum_Request::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_AddLimitNum_Request::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 World_AddLimitNum_Request::iexchangeid() const {
  return iexchangeid_;
}
inline void World_AddLimitNum_Request::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// optional int32 iAddNum = 3;
inline bool World_AddLimitNum_Request::has_iaddnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_AddLimitNum_Request::set_has_iaddnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_AddLimitNum_Request::clear_has_iaddnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_AddLimitNum_Request::clear_iaddnum() {
  iaddnum_ = 0;
  clear_has_iaddnum();
}
inline ::google::protobuf::int32 World_AddLimitNum_Request::iaddnum() const {
  return iaddnum_;
}
inline void World_AddLimitNum_Request::set_iaddnum(::google::protobuf::int32 value) {
  set_has_iaddnum();
  iaddnum_ = value;
}

// optional int32 iZoneID = 4;
inline bool World_AddLimitNum_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_AddLimitNum_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_AddLimitNum_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_AddLimitNum_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 World_AddLimitNum_Request::izoneid() const {
  return izoneid_;
}
inline void World_AddLimitNum_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iReason = 5;
inline bool World_AddLimitNum_Request::has_ireason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_AddLimitNum_Request::set_has_ireason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_AddLimitNum_Request::clear_has_ireason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_AddLimitNum_Request::clear_ireason() {
  ireason_ = 0;
  clear_has_ireason();
}
inline ::google::protobuf::int32 World_AddLimitNum_Request::ireason() const {
  return ireason_;
}
inline void World_AddLimitNum_Request::set_ireason(::google::protobuf::int32 value) {
  set_has_ireason();
  ireason_ = value;
}

// -------------------------------------------------------------------

// World_AddLimitNum_Response

// optional int32 iResult = 1;
inline bool World_AddLimitNum_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_AddLimitNum_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_AddLimitNum_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_AddLimitNum_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_AddLimitNum_Response::iresult() const {
  return iresult_;
}
inline void World_AddLimitNum_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uin = 2;
inline bool World_AddLimitNum_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_AddLimitNum_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_AddLimitNum_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_AddLimitNum_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_AddLimitNum_Response::uin() const {
  return uin_;
}
inline void World_AddLimitNum_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iExchangeID = 3;
inline bool World_AddLimitNum_Response::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_AddLimitNum_Response::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_AddLimitNum_Response::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_AddLimitNum_Response::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 World_AddLimitNum_Response::iexchangeid() const {
  return iexchangeid_;
}
inline void World_AddLimitNum_Response::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// optional int32 iReason = 4;
inline bool World_AddLimitNum_Response::has_ireason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_AddLimitNum_Response::set_has_ireason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_AddLimitNum_Response::clear_has_ireason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_AddLimitNum_Response::clear_ireason() {
  ireason_ = 0;
  clear_has_ireason();
}
inline ::google::protobuf::int32 World_AddLimitNum_Response::ireason() const {
  return ireason_;
}
inline void World_AddLimitNum_Response::set_ireason(::google::protobuf::int32 value) {
  set_has_ireason();
  ireason_ = value;
}

// -------------------------------------------------------------------

// World_UpdatePrizeInfo_Request

// repeated .PrizeInfo stPrizes = 1;
inline int World_UpdatePrizeInfo_Request::stprizes_size() const {
  return stprizes_.size();
}
inline void World_UpdatePrizeInfo_Request::clear_stprizes() {
  stprizes_.Clear();
}
inline const ::PrizeInfo& World_UpdatePrizeInfo_Request::stprizes(int index) const {
  return stprizes_.Get(index);
}
inline ::PrizeInfo* World_UpdatePrizeInfo_Request::mutable_stprizes(int index) {
  return stprizes_.Mutable(index);
}
inline ::PrizeInfo* World_UpdatePrizeInfo_Request::add_stprizes() {
  return stprizes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PrizeInfo >&
World_UpdatePrizeInfo_Request::stprizes() const {
  return stprizes_;
}
inline ::google::protobuf::RepeatedPtrField< ::PrizeInfo >*
World_UpdatePrizeInfo_Request::mutable_stprizes() {
  return &stprizes_;
}

// -------------------------------------------------------------------

// World_UpdateBetInfo_Request

// repeated .NumberBetInfo stBetInfos = 1;
inline int World_UpdateBetInfo_Request::stbetinfos_size() const {
  return stbetinfos_.size();
}
inline void World_UpdateBetInfo_Request::clear_stbetinfos() {
  stbetinfos_.Clear();
}
inline const ::NumberBetInfo& World_UpdateBetInfo_Request::stbetinfos(int index) const {
  return stbetinfos_.Get(index);
}
inline ::NumberBetInfo* World_UpdateBetInfo_Request::mutable_stbetinfos(int index) {
  return stbetinfos_.Mutable(index);
}
inline ::NumberBetInfo* World_UpdateBetInfo_Request::add_stbetinfos() {
  return stbetinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NumberBetInfo >&
World_UpdateBetInfo_Request::stbetinfos() const {
  return stbetinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::NumberBetInfo >*
World_UpdateBetInfo_Request::mutable_stbetinfos() {
  return &stbetinfos_;
}

// -------------------------------------------------------------------

// World_UpdateLasvegas_Notify

// optional .LasvegasInfo stInfo = 1;
inline bool World_UpdateLasvegas_Notify::has_stinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateLasvegas_Notify::set_has_stinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateLasvegas_Notify::clear_has_stinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateLasvegas_Notify::clear_stinfo() {
  if (stinfo_ != NULL) stinfo_->::LasvegasInfo::Clear();
  clear_has_stinfo();
}
inline const ::LasvegasInfo& World_UpdateLasvegas_Notify::stinfo() const {
  return stinfo_ != NULL ? *stinfo_ : *default_instance_->stinfo_;
}
inline ::LasvegasInfo* World_UpdateLasvegas_Notify::mutable_stinfo() {
  set_has_stinfo();
  if (stinfo_ == NULL) stinfo_ = new ::LasvegasInfo;
  return stinfo_;
}
inline ::LasvegasInfo* World_UpdateLasvegas_Notify::release_stinfo() {
  clear_has_stinfo();
  ::LasvegasInfo* temp = stinfo_;
  stinfo_ = NULL;
  return temp;
}
inline void World_UpdateLasvegas_Notify::set_allocated_stinfo(::LasvegasInfo* stinfo) {
  delete stinfo_;
  stinfo_ = stinfo;
  if (stinfo) {
    set_has_stinfo();
  } else {
    clear_has_stinfo();
  }
}

// -------------------------------------------------------------------

// World_UserRecharge_Request

// optional uint32 uin = 1;
inline bool World_UserRecharge_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UserRecharge_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UserRecharge_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UserRecharge_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_UserRecharge_Request::uin() const {
  return uin_;
}
inline void World_UserRecharge_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional string strOrderID = 2;
inline bool World_UserRecharge_Request::has_strorderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_UserRecharge_Request::set_has_strorderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_UserRecharge_Request::clear_has_strorderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_UserRecharge_Request::clear_strorderid() {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    strorderid_->clear();
  }
  clear_has_strorderid();
}
inline const ::std::string& World_UserRecharge_Request::strorderid() const {
  return *strorderid_;
}
inline void World_UserRecharge_Request::set_strorderid(const ::std::string& value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void World_UserRecharge_Request::set_strorderid(const char* value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void World_UserRecharge_Request::set_strorderid(const char* value, size_t size) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_UserRecharge_Request::mutable_strorderid() {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  return strorderid_;
}
inline ::std::string* World_UserRecharge_Request::release_strorderid() {
  clear_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strorderid_;
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_UserRecharge_Request::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete strorderid_;
  }
  if (strorderid) {
    set_has_strorderid();
    strorderid_ = strorderid;
  } else {
    clear_has_strorderid();
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iRMB = 3;
inline bool World_UserRecharge_Request::has_irmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_UserRecharge_Request::set_has_irmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_UserRecharge_Request::clear_has_irmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_UserRecharge_Request::clear_irmb() {
  irmb_ = 0;
  clear_has_irmb();
}
inline ::google::protobuf::int32 World_UserRecharge_Request::irmb() const {
  return irmb_;
}
inline void World_UserRecharge_Request::set_irmb(::google::protobuf::int32 value) {
  set_has_irmb();
  irmb_ = value;
}

// optional int32 iRechargeID = 4;
inline bool World_UserRecharge_Request::has_irechargeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_UserRecharge_Request::set_has_irechargeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_UserRecharge_Request::clear_has_irechargeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_UserRecharge_Request::clear_irechargeid() {
  irechargeid_ = 0;
  clear_has_irechargeid();
}
inline ::google::protobuf::int32 World_UserRecharge_Request::irechargeid() const {
  return irechargeid_;
}
inline void World_UserRecharge_Request::set_irechargeid(::google::protobuf::int32 value) {
  set_has_irechargeid();
  irechargeid_ = value;
}

// optional int32 iTime = 5;
inline bool World_UserRecharge_Request::has_itime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_UserRecharge_Request::set_has_itime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_UserRecharge_Request::clear_has_itime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_UserRecharge_Request::clear_itime() {
  itime_ = 0;
  clear_has_itime();
}
inline ::google::protobuf::int32 World_UserRecharge_Request::itime() const {
  return itime_;
}
inline void World_UserRecharge_Request::set_itime(::google::protobuf::int32 value) {
  set_has_itime();
  itime_ = value;
}

// optional int32 iPlatform = 6;
inline bool World_UserRecharge_Request::has_iplatform() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void World_UserRecharge_Request::set_has_iplatform() {
  _has_bits_[0] |= 0x00000020u;
}
inline void World_UserRecharge_Request::clear_has_iplatform() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void World_UserRecharge_Request::clear_iplatform() {
  iplatform_ = 0;
  clear_has_iplatform();
}
inline ::google::protobuf::int32 World_UserRecharge_Request::iplatform() const {
  return iplatform_;
}
inline void World_UserRecharge_Request::set_iplatform(::google::protobuf::int32 value) {
  set_has_iplatform();
  iplatform_ = value;
}

// -------------------------------------------------------------------

// World_UserRecharge_Response

// optional int32 iResult = 1;
inline bool World_UserRecharge_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UserRecharge_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UserRecharge_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UserRecharge_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_UserRecharge_Response::iresult() const {
  return iresult_;
}
inline void World_UserRecharge_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uin = 2;
inline bool World_UserRecharge_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_UserRecharge_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_UserRecharge_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_UserRecharge_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_UserRecharge_Response::uin() const {
  return uin_;
}
inline void World_UserRecharge_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional string strOrderID = 3;
inline bool World_UserRecharge_Response::has_strorderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_UserRecharge_Response::set_has_strorderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_UserRecharge_Response::clear_has_strorderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_UserRecharge_Response::clear_strorderid() {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    strorderid_->clear();
  }
  clear_has_strorderid();
}
inline const ::std::string& World_UserRecharge_Response::strorderid() const {
  return *strorderid_;
}
inline void World_UserRecharge_Response::set_strorderid(const ::std::string& value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void World_UserRecharge_Response::set_strorderid(const char* value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void World_UserRecharge_Response::set_strorderid(const char* value, size_t size) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_UserRecharge_Response::mutable_strorderid() {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  return strorderid_;
}
inline ::std::string* World_UserRecharge_Response::release_strorderid() {
  clear_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strorderid_;
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_UserRecharge_Response::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete strorderid_;
  }
  if (strorderid) {
    set_has_strorderid();
    strorderid_ = strorderid;
  } else {
    clear_has_strorderid();
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iRechargeID = 4;
inline bool World_UserRecharge_Response::has_irechargeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_UserRecharge_Response::set_has_irechargeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_UserRecharge_Response::clear_has_irechargeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_UserRecharge_Response::clear_irechargeid() {
  irechargeid_ = 0;
  clear_has_irechargeid();
}
inline ::google::protobuf::int32 World_UserRecharge_Response::irechargeid() const {
  return irechargeid_;
}
inline void World_UserRecharge_Response::set_irechargeid(::google::protobuf::int32 value) {
  set_has_irechargeid();
  irechargeid_ = value;
}

// optional int32 iPlatform = 5;
inline bool World_UserRecharge_Response::has_iplatform() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_UserRecharge_Response::set_has_iplatform() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_UserRecharge_Response::clear_has_iplatform() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_UserRecharge_Response::clear_iplatform() {
  iplatform_ = 0;
  clear_has_iplatform();
}
inline ::google::protobuf::int32 World_UserRecharge_Response::iplatform() const {
  return iplatform_;
}
inline void World_UserRecharge_Response::set_iplatform(::google::protobuf::int32 value) {
  set_has_iplatform();
  iplatform_ = value;
}

// -------------------------------------------------------------------

// GameMaster_Request

// optional int32 iOperaType = 1;
inline bool GameMaster_Request::has_ioperatype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMaster_Request::set_has_ioperatype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMaster_Request::clear_has_ioperatype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMaster_Request::clear_ioperatype() {
  ioperatype_ = 0;
  clear_has_ioperatype();
}
inline ::google::protobuf::int32 GameMaster_Request::ioperatype() const {
  return ioperatype_;
}
inline void GameMaster_Request::set_ioperatype(::google::protobuf::int32 value) {
  set_has_ioperatype();
  ioperatype_ = value;
}

// optional uint32 uFromUin = 2;
inline bool GameMaster_Request::has_ufromuin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMaster_Request::set_has_ufromuin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMaster_Request::clear_has_ufromuin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMaster_Request::clear_ufromuin() {
  ufromuin_ = 0u;
  clear_has_ufromuin();
}
inline ::google::protobuf::uint32 GameMaster_Request::ufromuin() const {
  return ufromuin_;
}
inline void GameMaster_Request::set_ufromuin(::google::protobuf::uint32 value) {
  set_has_ufromuin();
  ufromuin_ = value;
}

// optional uint32 uToUin = 3;
inline bool GameMaster_Request::has_utouin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameMaster_Request::set_has_utouin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameMaster_Request::clear_has_utouin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameMaster_Request::clear_utouin() {
  utouin_ = 0u;
  clear_has_utouin();
}
inline ::google::protobuf::uint32 GameMaster_Request::utouin() const {
  return utouin_;
}
inline void GameMaster_Request::set_utouin(::google::protobuf::uint32 value) {
  set_has_utouin();
  utouin_ = value;
}

// repeated string strParams = 4;
inline int GameMaster_Request::strparams_size() const {
  return strparams_.size();
}
inline void GameMaster_Request::clear_strparams() {
  strparams_.Clear();
}
inline const ::std::string& GameMaster_Request::strparams(int index) const {
  return strparams_.Get(index);
}
inline ::std::string* GameMaster_Request::mutable_strparams(int index) {
  return strparams_.Mutable(index);
}
inline void GameMaster_Request::set_strparams(int index, const ::std::string& value) {
  strparams_.Mutable(index)->assign(value);
}
inline void GameMaster_Request::set_strparams(int index, const char* value) {
  strparams_.Mutable(index)->assign(value);
}
inline void GameMaster_Request::set_strparams(int index, const char* value, size_t size) {
  strparams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameMaster_Request::add_strparams() {
  return strparams_.Add();
}
inline void GameMaster_Request::add_strparams(const ::std::string& value) {
  strparams_.Add()->assign(value);
}
inline void GameMaster_Request::add_strparams(const char* value) {
  strparams_.Add()->assign(value);
}
inline void GameMaster_Request::add_strparams(const char* value, size_t size) {
  strparams_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GameMaster_Request::strparams() const {
  return strparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GameMaster_Request::mutable_strparams() {
  return &strparams_;
}

// optional int32 iVIPMin = 5;
inline bool GameMaster_Request::has_ivipmin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameMaster_Request::set_has_ivipmin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameMaster_Request::clear_has_ivipmin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameMaster_Request::clear_ivipmin() {
  ivipmin_ = 0;
  clear_has_ivipmin();
}
inline ::google::protobuf::int32 GameMaster_Request::ivipmin() const {
  return ivipmin_;
}
inline void GameMaster_Request::set_ivipmin(::google::protobuf::int32 value) {
  set_has_ivipmin();
  ivipmin_ = value;
}

// optional int32 iVIPMax = 6;
inline bool GameMaster_Request::has_ivipmax() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameMaster_Request::set_has_ivipmax() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameMaster_Request::clear_has_ivipmax() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameMaster_Request::clear_ivipmax() {
  ivipmax_ = 0;
  clear_has_ivipmax();
}
inline ::google::protobuf::int32 GameMaster_Request::ivipmax() const {
  return ivipmax_;
}
inline void GameMaster_Request::set_ivipmax(::google::protobuf::int32 value) {
  set_has_ivipmax();
  ivipmax_ = value;
}

// repeated string strChannelIDs = 7;
inline int GameMaster_Request::strchannelids_size() const {
  return strchannelids_.size();
}
inline void GameMaster_Request::clear_strchannelids() {
  strchannelids_.Clear();
}
inline const ::std::string& GameMaster_Request::strchannelids(int index) const {
  return strchannelids_.Get(index);
}
inline ::std::string* GameMaster_Request::mutable_strchannelids(int index) {
  return strchannelids_.Mutable(index);
}
inline void GameMaster_Request::set_strchannelids(int index, const ::std::string& value) {
  strchannelids_.Mutable(index)->assign(value);
}
inline void GameMaster_Request::set_strchannelids(int index, const char* value) {
  strchannelids_.Mutable(index)->assign(value);
}
inline void GameMaster_Request::set_strchannelids(int index, const char* value, size_t size) {
  strchannelids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameMaster_Request::add_strchannelids() {
  return strchannelids_.Add();
}
inline void GameMaster_Request::add_strchannelids(const ::std::string& value) {
  strchannelids_.Add()->assign(value);
}
inline void GameMaster_Request::add_strchannelids(const char* value) {
  strchannelids_.Add()->assign(value);
}
inline void GameMaster_Request::add_strchannelids(const char* value, size_t size) {
  strchannelids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GameMaster_Request::strchannelids() const {
  return strchannelids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GameMaster_Request::mutable_strchannelids() {
  return &strchannelids_;
}

// optional int32 iMailEndTime = 9;
inline bool GameMaster_Request::has_imailendtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameMaster_Request::set_has_imailendtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameMaster_Request::clear_has_imailendtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameMaster_Request::clear_imailendtime() {
  imailendtime_ = 0;
  clear_has_imailendtime();
}
inline ::google::protobuf::int32 GameMaster_Request::imailendtime() const {
  return imailendtime_;
}
inline void GameMaster_Request::set_imailendtime(::google::protobuf::int32 value) {
  set_has_imailendtime();
  imailendtime_ = value;
}

// optional int32 iFromZoneID = 8;
inline bool GameMaster_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameMaster_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameMaster_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameMaster_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 GameMaster_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void GameMaster_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// -------------------------------------------------------------------

// GameMaster_Response

// optional int32 iResult = 1;
inline bool GameMaster_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMaster_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMaster_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMaster_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 GameMaster_Response::iresult() const {
  return iresult_;
}
inline void GameMaster_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iOperaType = 2;
inline bool GameMaster_Response::has_ioperatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMaster_Response::set_has_ioperatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMaster_Response::clear_has_ioperatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMaster_Response::clear_ioperatype() {
  ioperatype_ = 0;
  clear_has_ioperatype();
}
inline ::google::protobuf::int32 GameMaster_Response::ioperatype() const {
  return ioperatype_;
}
inline void GameMaster_Response::set_ioperatype(::google::protobuf::int32 value) {
  set_has_ioperatype();
  ioperatype_ = value;
}

// optional uint32 uFromUin = 3;
inline bool GameMaster_Response::has_ufromuin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameMaster_Response::set_has_ufromuin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameMaster_Response::clear_has_ufromuin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameMaster_Response::clear_ufromuin() {
  ufromuin_ = 0u;
  clear_has_ufromuin();
}
inline ::google::protobuf::uint32 GameMaster_Response::ufromuin() const {
  return ufromuin_;
}
inline void GameMaster_Response::set_ufromuin(::google::protobuf::uint32 value) {
  set_has_ufromuin();
  ufromuin_ = value;
}

// optional uint32 uToUin = 4;
inline bool GameMaster_Response::has_utouin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameMaster_Response::set_has_utouin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameMaster_Response::clear_has_utouin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameMaster_Response::clear_utouin() {
  utouin_ = 0u;
  clear_has_utouin();
}
inline ::google::protobuf::uint32 GameMaster_Response::utouin() const {
  return utouin_;
}
inline void GameMaster_Response::set_utouin(::google::protobuf::uint32 value) {
  set_has_utouin();
  utouin_ = value;
}

// optional .BASEDBINFO stBaseInfo = 5;
inline bool GameMaster_Response::has_stbaseinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameMaster_Response::set_has_stbaseinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameMaster_Response::clear_has_stbaseinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameMaster_Response::clear_stbaseinfo() {
  if (stbaseinfo_ != NULL) stbaseinfo_->::BASEDBINFO::Clear();
  clear_has_stbaseinfo();
}
inline const ::BASEDBINFO& GameMaster_Response::stbaseinfo() const {
  return stbaseinfo_ != NULL ? *stbaseinfo_ : *default_instance_->stbaseinfo_;
}
inline ::BASEDBINFO* GameMaster_Response::mutable_stbaseinfo() {
  set_has_stbaseinfo();
  if (stbaseinfo_ == NULL) stbaseinfo_ = new ::BASEDBINFO;
  return stbaseinfo_;
}
inline ::BASEDBINFO* GameMaster_Response::release_stbaseinfo() {
  clear_has_stbaseinfo();
  ::BASEDBINFO* temp = stbaseinfo_;
  stbaseinfo_ = NULL;
  return temp;
}
inline void GameMaster_Response::set_allocated_stbaseinfo(::BASEDBINFO* stbaseinfo) {
  delete stbaseinfo_;
  stbaseinfo_ = stbaseinfo;
  if (stbaseinfo) {
    set_has_stbaseinfo();
  } else {
    clear_has_stbaseinfo();
  }
}

// optional .ITEMDBINFO stItemInfo = 6;
inline bool GameMaster_Response::has_stiteminfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameMaster_Response::set_has_stiteminfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameMaster_Response::clear_has_stiteminfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameMaster_Response::clear_stiteminfo() {
  if (stiteminfo_ != NULL) stiteminfo_->::ITEMDBINFO::Clear();
  clear_has_stiteminfo();
}
inline const ::ITEMDBINFO& GameMaster_Response::stiteminfo() const {
  return stiteminfo_ != NULL ? *stiteminfo_ : *default_instance_->stiteminfo_;
}
inline ::ITEMDBINFO* GameMaster_Response::mutable_stiteminfo() {
  set_has_stiteminfo();
  if (stiteminfo_ == NULL) stiteminfo_ = new ::ITEMDBINFO;
  return stiteminfo_;
}
inline ::ITEMDBINFO* GameMaster_Response::release_stiteminfo() {
  clear_has_stiteminfo();
  ::ITEMDBINFO* temp = stiteminfo_;
  stiteminfo_ = NULL;
  return temp;
}
inline void GameMaster_Response::set_allocated_stiteminfo(::ITEMDBINFO* stiteminfo) {
  delete stiteminfo_;
  stiteminfo_ = stiteminfo;
  if (stiteminfo) {
    set_has_stiteminfo();
  } else {
    clear_has_stiteminfo();
  }
}

// -------------------------------------------------------------------

// World_SystemMailID_Notify

// optional uint32 uSystemUniqID = 1;
inline bool World_SystemMailID_Notify::has_usystemuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_SystemMailID_Notify::set_has_usystemuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_SystemMailID_Notify::clear_has_usystemuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_SystemMailID_Notify::clear_usystemuniqid() {
  usystemuniqid_ = 0u;
  clear_has_usystemuniqid();
}
inline ::google::protobuf::uint32 World_SystemMailID_Notify::usystemuniqid() const {
  return usystemuniqid_;
}
inline void World_SystemMailID_Notify::set_usystemuniqid(::google::protobuf::uint32 value) {
  set_has_usystemuniqid();
  usystemuniqid_ = value;
}

// -------------------------------------------------------------------

// World_GetSystemMail_Request

// optional uint32 uin = 1;
inline bool World_GetSystemMail_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetSystemMail_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetSystemMail_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetSystemMail_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_GetSystemMail_Request::uin() const {
  return uin_;
}
inline void World_GetSystemMail_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 uRoleSystemUniqID = 2;
inline bool World_GetSystemMail_Request::has_urolesystemuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetSystemMail_Request::set_has_urolesystemuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetSystemMail_Request::clear_has_urolesystemuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetSystemMail_Request::clear_urolesystemuniqid() {
  urolesystemuniqid_ = 0u;
  clear_has_urolesystemuniqid();
}
inline ::google::protobuf::uint32 World_GetSystemMail_Request::urolesystemuniqid() const {
  return urolesystemuniqid_;
}
inline void World_GetSystemMail_Request::set_urolesystemuniqid(::google::protobuf::uint32 value) {
  set_has_urolesystemuniqid();
  urolesystemuniqid_ = value;
}

// optional int32 iVIPLevel = 3;
inline bool World_GetSystemMail_Request::has_iviplevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetSystemMail_Request::set_has_iviplevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetSystemMail_Request::clear_has_iviplevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetSystemMail_Request::clear_iviplevel() {
  iviplevel_ = 0;
  clear_has_iviplevel();
}
inline ::google::protobuf::int32 World_GetSystemMail_Request::iviplevel() const {
  return iviplevel_;
}
inline void World_GetSystemMail_Request::set_iviplevel(::google::protobuf::int32 value) {
  set_has_iviplevel();
  iviplevel_ = value;
}

// optional string strChannel = 4;
inline bool World_GetSystemMail_Request::has_strchannel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_GetSystemMail_Request::set_has_strchannel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_GetSystemMail_Request::clear_has_strchannel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_GetSystemMail_Request::clear_strchannel() {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    strchannel_->clear();
  }
  clear_has_strchannel();
}
inline const ::std::string& World_GetSystemMail_Request::strchannel() const {
  return *strchannel_;
}
inline void World_GetSystemMail_Request::set_strchannel(const ::std::string& value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void World_GetSystemMail_Request::set_strchannel(const char* value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void World_GetSystemMail_Request::set_strchannel(const char* value, size_t size) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_GetSystemMail_Request::mutable_strchannel() {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  return strchannel_;
}
inline ::std::string* World_GetSystemMail_Request::release_strchannel() {
  clear_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannel_;
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_GetSystemMail_Request::set_allocated_strchannel(::std::string* strchannel) {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannel_;
  }
  if (strchannel) {
    set_has_strchannel();
    strchannel_ = strchannel;
  } else {
    clear_has_strchannel();
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iFromZoneID = 5;
inline bool World_GetSystemMail_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_GetSystemMail_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_GetSystemMail_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_GetSystemMail_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_GetSystemMail_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_GetSystemMail_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional int32 iReason = 6;
inline bool World_GetSystemMail_Request::has_ireason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void World_GetSystemMail_Request::set_has_ireason() {
  _has_bits_[0] |= 0x00000020u;
}
inline void World_GetSystemMail_Request::clear_has_ireason() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void World_GetSystemMail_Request::clear_ireason() {
  ireason_ = 0;
  clear_has_ireason();
}
inline ::google::protobuf::int32 World_GetSystemMail_Request::ireason() const {
  return ireason_;
}
inline void World_GetSystemMail_Request::set_ireason(::google::protobuf::int32 value) {
  set_has_ireason();
  ireason_ = value;
}

// -------------------------------------------------------------------

// World_GetSystemMail_Response

// optional int32 iResult = 1;
inline bool World_GetSystemMail_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetSystemMail_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetSystemMail_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetSystemMail_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_GetSystemMail_Response::iresult() const {
  return iresult_;
}
inline void World_GetSystemMail_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uin = 2;
inline bool World_GetSystemMail_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetSystemMail_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetSystemMail_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetSystemMail_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_GetSystemMail_Response::uin() const {
  return uin_;
}
inline void World_GetSystemMail_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 uSystemUniqID = 3;
inline bool World_GetSystemMail_Response::has_usystemuniqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetSystemMail_Response::set_has_usystemuniqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetSystemMail_Response::clear_has_usystemuniqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetSystemMail_Response::clear_usystemuniqid() {
  usystemuniqid_ = 0u;
  clear_has_usystemuniqid();
}
inline ::google::protobuf::uint32 World_GetSystemMail_Response::usystemuniqid() const {
  return usystemuniqid_;
}
inline void World_GetSystemMail_Response::set_usystemuniqid(::google::protobuf::uint32 value) {
  set_has_usystemuniqid();
  usystemuniqid_ = value;
}

// repeated .OneMailInfo stMails = 4;
inline int World_GetSystemMail_Response::stmails_size() const {
  return stmails_.size();
}
inline void World_GetSystemMail_Response::clear_stmails() {
  stmails_.Clear();
}
inline const ::OneMailInfo& World_GetSystemMail_Response::stmails(int index) const {
  return stmails_.Get(index);
}
inline ::OneMailInfo* World_GetSystemMail_Response::mutable_stmails(int index) {
  return stmails_.Mutable(index);
}
inline ::OneMailInfo* World_GetSystemMail_Response::add_stmails() {
  return stmails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneMailInfo >&
World_GetSystemMail_Response::stmails() const {
  return stmails_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneMailInfo >*
World_GetSystemMail_Response::mutable_stmails() {
  return &stmails_;
}

// -------------------------------------------------------------------

// OnlineExchange

// optional int32 iItemID = 1;
inline bool OnlineExchange::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineExchange::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineExchange::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineExchange::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 OnlineExchange::iitemid() const {
  return iitemid_;
}
inline void OnlineExchange::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// optional int32 iItemNum = 2;
inline bool OnlineExchange::has_iitemnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineExchange::set_has_iitemnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineExchange::clear_has_iitemnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineExchange::clear_iitemnum() {
  iitemnum_ = 0;
  clear_has_iitemnum();
}
inline ::google::protobuf::int32 OnlineExchange::iitemnum() const {
  return iitemnum_;
}
inline void OnlineExchange::set_iitemnum(::google::protobuf::int32 value) {
  set_has_iitemnum();
  iitemnum_ = value;
}

// optional int32 iType = 3;
inline bool OnlineExchange::has_itype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnlineExchange::set_has_itype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnlineExchange::clear_has_itype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnlineExchange::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 OnlineExchange::itype() const {
  return itype_;
}
inline void OnlineExchange::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional int32 iExchangeNum = 4;
inline bool OnlineExchange::has_iexchangenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OnlineExchange::set_has_iexchangenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OnlineExchange::clear_has_iexchangenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OnlineExchange::clear_iexchangenum() {
  iexchangenum_ = 0;
  clear_has_iexchangenum();
}
inline ::google::protobuf::int32 OnlineExchange::iexchangenum() const {
  return iexchangenum_;
}
inline void OnlineExchange::set_iexchangenum(::google::protobuf::int32 value) {
  set_has_iexchangenum();
  iexchangenum_ = value;
}

// optional string strPhoneNum = 5;
inline bool OnlineExchange::has_strphonenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OnlineExchange::set_has_strphonenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OnlineExchange::clear_has_strphonenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OnlineExchange::clear_strphonenum() {
  if (strphonenum_ != &::google::protobuf::internal::kEmptyString) {
    strphonenum_->clear();
  }
  clear_has_strphonenum();
}
inline const ::std::string& OnlineExchange::strphonenum() const {
  return *strphonenum_;
}
inline void OnlineExchange::set_strphonenum(const ::std::string& value) {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  strphonenum_->assign(value);
}
inline void OnlineExchange::set_strphonenum(const char* value) {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  strphonenum_->assign(value);
}
inline void OnlineExchange::set_strphonenum(const char* value, size_t size) {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  strphonenum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OnlineExchange::mutable_strphonenum() {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  return strphonenum_;
}
inline ::std::string* OnlineExchange::release_strphonenum() {
  clear_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strphonenum_;
    strphonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OnlineExchange::set_allocated_strphonenum(::std::string* strphonenum) {
  if (strphonenum_ != &::google::protobuf::internal::kEmptyString) {
    delete strphonenum_;
  }
  if (strphonenum) {
    set_has_strphonenum();
    strphonenum_ = strphonenum;
  } else {
    clear_has_strphonenum();
    strphonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// World_OnlineExchange_Request

// optional uint32 uin = 1;
inline bool World_OnlineExchange_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_OnlineExchange_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_OnlineExchange_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_OnlineExchange_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_OnlineExchange_Request::uin() const {
  return uin_;
}
inline void World_OnlineExchange_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iFromZoneID = 2;
inline bool World_OnlineExchange_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_OnlineExchange_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_OnlineExchange_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_OnlineExchange_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_OnlineExchange_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_OnlineExchange_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional .OnlineExchange stInfo = 3;
inline bool World_OnlineExchange_Request::has_stinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_OnlineExchange_Request::set_has_stinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_OnlineExchange_Request::clear_has_stinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_OnlineExchange_Request::clear_stinfo() {
  if (stinfo_ != NULL) stinfo_->::OnlineExchange::Clear();
  clear_has_stinfo();
}
inline const ::OnlineExchange& World_OnlineExchange_Request::stinfo() const {
  return stinfo_ != NULL ? *stinfo_ : *default_instance_->stinfo_;
}
inline ::OnlineExchange* World_OnlineExchange_Request::mutable_stinfo() {
  set_has_stinfo();
  if (stinfo_ == NULL) stinfo_ = new ::OnlineExchange;
  return stinfo_;
}
inline ::OnlineExchange* World_OnlineExchange_Request::release_stinfo() {
  clear_has_stinfo();
  ::OnlineExchange* temp = stinfo_;
  stinfo_ = NULL;
  return temp;
}
inline void World_OnlineExchange_Request::set_allocated_stinfo(::OnlineExchange* stinfo) {
  delete stinfo_;
  stinfo_ = stinfo;
  if (stinfo) {
    set_has_stinfo();
  } else {
    clear_has_stinfo();
  }
}

// -------------------------------------------------------------------

// World_OnlineExchange_Response

// optional int32 iResult = 1;
inline bool World_OnlineExchange_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_OnlineExchange_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_OnlineExchange_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_OnlineExchange_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_OnlineExchange_Response::iresult() const {
  return iresult_;
}
inline void World_OnlineExchange_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uin = 2;
inline bool World_OnlineExchange_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_OnlineExchange_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_OnlineExchange_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_OnlineExchange_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_OnlineExchange_Response::uin() const {
  return uin_;
}
inline void World_OnlineExchange_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iFromZoneID = 3;
inline bool World_OnlineExchange_Response::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_OnlineExchange_Response::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_OnlineExchange_Response::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_OnlineExchange_Response::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_OnlineExchange_Response::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_OnlineExchange_Response::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional .OnlineExchange stInfo = 4;
inline bool World_OnlineExchange_Response::has_stinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_OnlineExchange_Response::set_has_stinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_OnlineExchange_Response::clear_has_stinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_OnlineExchange_Response::clear_stinfo() {
  if (stinfo_ != NULL) stinfo_->::OnlineExchange::Clear();
  clear_has_stinfo();
}
inline const ::OnlineExchange& World_OnlineExchange_Response::stinfo() const {
  return stinfo_ != NULL ? *stinfo_ : *default_instance_->stinfo_;
}
inline ::OnlineExchange* World_OnlineExchange_Response::mutable_stinfo() {
  set_has_stinfo();
  if (stinfo_ == NULL) stinfo_ = new ::OnlineExchange;
  return stinfo_;
}
inline ::OnlineExchange* World_OnlineExchange_Response::release_stinfo() {
  clear_has_stinfo();
  ::OnlineExchange* temp = stinfo_;
  stinfo_ = NULL;
  return temp;
}
inline void World_OnlineExchange_Response::set_allocated_stinfo(::OnlineExchange* stinfo) {
  delete stinfo_;
  stinfo_ = stinfo;
  if (stinfo) {
    set_has_stinfo();
  } else {
    clear_has_stinfo();
  }
}

// -------------------------------------------------------------------

// World_GetUserInfo_Request

// optional uint32 uin = 1;
inline bool World_GetUserInfo_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetUserInfo_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetUserInfo_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetUserInfo_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_GetUserInfo_Request::uin() const {
  return uin_;
}
inline void World_GetUserInfo_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iPlatformID = 2;
inline bool World_GetUserInfo_Request::has_iplatformid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetUserInfo_Request::set_has_iplatformid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetUserInfo_Request::clear_has_iplatformid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetUserInfo_Request::clear_iplatformid() {
  iplatformid_ = 0;
  clear_has_iplatformid();
}
inline ::google::protobuf::int32 World_GetUserInfo_Request::iplatformid() const {
  return iplatformid_;
}
inline void World_GetUserInfo_Request::set_iplatformid(::google::protobuf::int32 value) {
  set_has_iplatformid();
  iplatformid_ = value;
}

// -------------------------------------------------------------------

// World_GetUserInfo_Response

// optional int32 iResult = 1;
inline bool World_GetUserInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetUserInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetUserInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetUserInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_GetUserInfo_Response::iresult() const {
  return iresult_;
}
inline void World_GetUserInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional string strAccount = 2;
inline bool World_GetUserInfo_Response::has_straccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetUserInfo_Response::set_has_straccount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetUserInfo_Response::clear_has_straccount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetUserInfo_Response::clear_straccount() {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    straccount_->clear();
  }
  clear_has_straccount();
}
inline const ::std::string& World_GetUserInfo_Response::straccount() const {
  return *straccount_;
}
inline void World_GetUserInfo_Response::set_straccount(const ::std::string& value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void World_GetUserInfo_Response::set_straccount(const char* value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void World_GetUserInfo_Response::set_straccount(const char* value, size_t size) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_GetUserInfo_Response::mutable_straccount() {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  return straccount_;
}
inline ::std::string* World_GetUserInfo_Response::release_straccount() {
  clear_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccount_;
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_GetUserInfo_Response::set_allocated_straccount(::std::string* straccount) {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    delete straccount_;
  }
  if (straccount) {
    set_has_straccount();
    straccount_ = straccount;
  } else {
    clear_has_straccount();
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 uin = 3;
inline bool World_GetUserInfo_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetUserInfo_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetUserInfo_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetUserInfo_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_GetUserInfo_Response::uin() const {
  return uin_;
}
inline void World_GetUserInfo_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional string strNickName = 4;
inline bool World_GetUserInfo_Response::has_strnickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_GetUserInfo_Response::set_has_strnickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_GetUserInfo_Response::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_GetUserInfo_Response::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& World_GetUserInfo_Response::strnickname() const {
  return *strnickname_;
}
inline void World_GetUserInfo_Response::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void World_GetUserInfo_Response::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void World_GetUserInfo_Response::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_GetUserInfo_Response::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* World_GetUserInfo_Response::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_GetUserInfo_Response::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iPlatformID = 5;
inline bool World_GetUserInfo_Response::has_iplatformid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_GetUserInfo_Response::set_has_iplatformid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_GetUserInfo_Response::clear_has_iplatformid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_GetUserInfo_Response::clear_iplatformid() {
  iplatformid_ = 0;
  clear_has_iplatformid();
}
inline ::google::protobuf::int32 World_GetUserInfo_Response::iplatformid() const {
  return iplatformid_;
}
inline void World_GetUserInfo_Response::set_iplatformid(::google::protobuf::int32 value) {
  set_has_iplatformid();
  iplatformid_ = value;
}

// -------------------------------------------------------------------

// World_WriteLog_Request

// optional int32 iLogTargetType = 1;
inline bool World_WriteLog_Request::has_ilogtargettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_WriteLog_Request::set_has_ilogtargettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_WriteLog_Request::clear_has_ilogtargettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_WriteLog_Request::clear_ilogtargettype() {
  ilogtargettype_ = 0;
  clear_has_ilogtargettype();
}
inline ::google::protobuf::int32 World_WriteLog_Request::ilogtargettype() const {
  return ilogtargettype_;
}
inline void World_WriteLog_Request::set_ilogtargettype(::google::protobuf::int32 value) {
  set_has_ilogtargettype();
  ilogtargettype_ = value;
}

// optional string strLogData = 2;
inline bool World_WriteLog_Request::has_strlogdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_WriteLog_Request::set_has_strlogdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_WriteLog_Request::clear_has_strlogdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_WriteLog_Request::clear_strlogdata() {
  if (strlogdata_ != &::google::protobuf::internal::kEmptyString) {
    strlogdata_->clear();
  }
  clear_has_strlogdata();
}
inline const ::std::string& World_WriteLog_Request::strlogdata() const {
  return *strlogdata_;
}
inline void World_WriteLog_Request::set_strlogdata(const ::std::string& value) {
  set_has_strlogdata();
  if (strlogdata_ == &::google::protobuf::internal::kEmptyString) {
    strlogdata_ = new ::std::string;
  }
  strlogdata_->assign(value);
}
inline void World_WriteLog_Request::set_strlogdata(const char* value) {
  set_has_strlogdata();
  if (strlogdata_ == &::google::protobuf::internal::kEmptyString) {
    strlogdata_ = new ::std::string;
  }
  strlogdata_->assign(value);
}
inline void World_WriteLog_Request::set_strlogdata(const char* value, size_t size) {
  set_has_strlogdata();
  if (strlogdata_ == &::google::protobuf::internal::kEmptyString) {
    strlogdata_ = new ::std::string;
  }
  strlogdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_WriteLog_Request::mutable_strlogdata() {
  set_has_strlogdata();
  if (strlogdata_ == &::google::protobuf::internal::kEmptyString) {
    strlogdata_ = new ::std::string;
  }
  return strlogdata_;
}
inline ::std::string* World_WriteLog_Request::release_strlogdata() {
  clear_has_strlogdata();
  if (strlogdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlogdata_;
    strlogdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_WriteLog_Request::set_allocated_strlogdata(::std::string* strlogdata) {
  if (strlogdata_ != &::google::protobuf::internal::kEmptyString) {
    delete strlogdata_;
  }
  if (strlogdata) {
    set_has_strlogdata();
    strlogdata_ = strlogdata;
  } else {
    clear_has_strlogdata();
    strlogdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// World_GetCardNo_Request

// optional int32 iExchangeID = 1;
inline bool World_GetCardNo_Request::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetCardNo_Request::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetCardNo_Request::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetCardNo_Request::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 World_GetCardNo_Request::iexchangeid() const {
  return iexchangeid_;
}
inline void World_GetCardNo_Request::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// optional int32 iCardID = 2;
inline bool World_GetCardNo_Request::has_icardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetCardNo_Request::set_has_icardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetCardNo_Request::clear_has_icardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetCardNo_Request::clear_icardid() {
  icardid_ = 0;
  clear_has_icardid();
}
inline ::google::protobuf::int32 World_GetCardNo_Request::icardid() const {
  return icardid_;
}
inline void World_GetCardNo_Request::set_icardid(::google::protobuf::int32 value) {
  set_has_icardid();
  icardid_ = value;
}

// optional uint32 uin = 3;
inline bool World_GetCardNo_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetCardNo_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetCardNo_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetCardNo_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_GetCardNo_Request::uin() const {
  return uin_;
}
inline void World_GetCardNo_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iFromZoneID = 4;
inline bool World_GetCardNo_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_GetCardNo_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_GetCardNo_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_GetCardNo_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_GetCardNo_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_GetCardNo_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// -------------------------------------------------------------------

// World_GetCardNo_Response

// optional int32 iResult = 1;
inline bool World_GetCardNo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_GetCardNo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_GetCardNo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_GetCardNo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_GetCardNo_Response::iresult() const {
  return iresult_;
}
inline void World_GetCardNo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iExchangeID = 2;
inline bool World_GetCardNo_Response::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_GetCardNo_Response::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_GetCardNo_Response::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_GetCardNo_Response::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 World_GetCardNo_Response::iexchangeid() const {
  return iexchangeid_;
}
inline void World_GetCardNo_Response::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// optional int32 iCardID = 3;
inline bool World_GetCardNo_Response::has_icardid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_GetCardNo_Response::set_has_icardid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_GetCardNo_Response::clear_has_icardid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_GetCardNo_Response::clear_icardid() {
  icardid_ = 0;
  clear_has_icardid();
}
inline ::google::protobuf::int32 World_GetCardNo_Response::icardid() const {
  return icardid_;
}
inline void World_GetCardNo_Response::set_icardid(::google::protobuf::int32 value) {
  set_has_icardid();
  icardid_ = value;
}

// optional uint32 uin = 4;
inline bool World_GetCardNo_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_GetCardNo_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_GetCardNo_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_GetCardNo_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_GetCardNo_Response::uin() const {
  return uin_;
}
inline void World_GetCardNo_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iFromZoneID = 5;
inline bool World_GetCardNo_Response::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_GetCardNo_Response::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_GetCardNo_Response::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_GetCardNo_Response::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_GetCardNo_Response::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_GetCardNo_Response::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional string strCardNo = 6;
inline bool World_GetCardNo_Response::has_strcardno() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void World_GetCardNo_Response::set_has_strcardno() {
  _has_bits_[0] |= 0x00000020u;
}
inline void World_GetCardNo_Response::clear_has_strcardno() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void World_GetCardNo_Response::clear_strcardno() {
  if (strcardno_ != &::google::protobuf::internal::kEmptyString) {
    strcardno_->clear();
  }
  clear_has_strcardno();
}
inline const ::std::string& World_GetCardNo_Response::strcardno() const {
  return *strcardno_;
}
inline void World_GetCardNo_Response::set_strcardno(const ::std::string& value) {
  set_has_strcardno();
  if (strcardno_ == &::google::protobuf::internal::kEmptyString) {
    strcardno_ = new ::std::string;
  }
  strcardno_->assign(value);
}
inline void World_GetCardNo_Response::set_strcardno(const char* value) {
  set_has_strcardno();
  if (strcardno_ == &::google::protobuf::internal::kEmptyString) {
    strcardno_ = new ::std::string;
  }
  strcardno_->assign(value);
}
inline void World_GetCardNo_Response::set_strcardno(const char* value, size_t size) {
  set_has_strcardno();
  if (strcardno_ == &::google::protobuf::internal::kEmptyString) {
    strcardno_ = new ::std::string;
  }
  strcardno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_GetCardNo_Response::mutable_strcardno() {
  set_has_strcardno();
  if (strcardno_ == &::google::protobuf::internal::kEmptyString) {
    strcardno_ = new ::std::string;
  }
  return strcardno_;
}
inline ::std::string* World_GetCardNo_Response::release_strcardno() {
  clear_has_strcardno();
  if (strcardno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcardno_;
    strcardno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_GetCardNo_Response::set_allocated_strcardno(::std::string* strcardno) {
  if (strcardno_ != &::google::protobuf::internal::kEmptyString) {
    delete strcardno_;
  }
  if (strcardno) {
    set_has_strcardno();
    strcardno_ = strcardno;
  } else {
    clear_has_strcardno();
    strcardno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strCardPwd = 7;
inline bool World_GetCardNo_Response::has_strcardpwd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void World_GetCardNo_Response::set_has_strcardpwd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void World_GetCardNo_Response::clear_has_strcardpwd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void World_GetCardNo_Response::clear_strcardpwd() {
  if (strcardpwd_ != &::google::protobuf::internal::kEmptyString) {
    strcardpwd_->clear();
  }
  clear_has_strcardpwd();
}
inline const ::std::string& World_GetCardNo_Response::strcardpwd() const {
  return *strcardpwd_;
}
inline void World_GetCardNo_Response::set_strcardpwd(const ::std::string& value) {
  set_has_strcardpwd();
  if (strcardpwd_ == &::google::protobuf::internal::kEmptyString) {
    strcardpwd_ = new ::std::string;
  }
  strcardpwd_->assign(value);
}
inline void World_GetCardNo_Response::set_strcardpwd(const char* value) {
  set_has_strcardpwd();
  if (strcardpwd_ == &::google::protobuf::internal::kEmptyString) {
    strcardpwd_ = new ::std::string;
  }
  strcardpwd_->assign(value);
}
inline void World_GetCardNo_Response::set_strcardpwd(const char* value, size_t size) {
  set_has_strcardpwd();
  if (strcardpwd_ == &::google::protobuf::internal::kEmptyString) {
    strcardpwd_ = new ::std::string;
  }
  strcardpwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_GetCardNo_Response::mutable_strcardpwd() {
  set_has_strcardpwd();
  if (strcardpwd_ == &::google::protobuf::internal::kEmptyString) {
    strcardpwd_ = new ::std::string;
  }
  return strcardpwd_;
}
inline ::std::string* World_GetCardNo_Response::release_strcardpwd() {
  clear_has_strcardpwd();
  if (strcardpwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcardpwd_;
    strcardpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_GetCardNo_Response::set_allocated_strcardpwd(::std::string* strcardpwd) {
  if (strcardpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete strcardpwd_;
  }
  if (strcardpwd) {
    set_has_strcardpwd();
    strcardpwd_ = strcardpwd;
  } else {
    clear_has_strcardpwd();
    strcardpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// World_AddExcRec_Request

// optional .ExchangeRec stRecord = 1;
inline bool World_AddExcRec_Request::has_strecord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_AddExcRec_Request::set_has_strecord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_AddExcRec_Request::clear_has_strecord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_AddExcRec_Request::clear_strecord() {
  if (strecord_ != NULL) strecord_->::ExchangeRec::Clear();
  clear_has_strecord();
}
inline const ::ExchangeRec& World_AddExcRec_Request::strecord() const {
  return strecord_ != NULL ? *strecord_ : *default_instance_->strecord_;
}
inline ::ExchangeRec* World_AddExcRec_Request::mutable_strecord() {
  set_has_strecord();
  if (strecord_ == NULL) strecord_ = new ::ExchangeRec;
  return strecord_;
}
inline ::ExchangeRec* World_AddExcRec_Request::release_strecord() {
  clear_has_strecord();
  ::ExchangeRec* temp = strecord_;
  strecord_ = NULL;
  return temp;
}
inline void World_AddExcRec_Request::set_allocated_strecord(::ExchangeRec* strecord) {
  delete strecord_;
  strecord_ = strecord;
  if (strecord) {
    set_has_strecord();
  } else {
    clear_has_strecord();
  }
}

// -------------------------------------------------------------------

// World_AddExcRec_Response

// optional int32 iResult = 1;
inline bool World_AddExcRec_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_AddExcRec_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_AddExcRec_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_AddExcRec_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_AddExcRec_Response::iresult() const {
  return iresult_;
}
inline void World_AddExcRec_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LimitReasonType>() {
  return ::LimitReasonType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RechargeType>() {
  return ::RechargeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MailReasonType>() {
  return ::MailReasonType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OnlineExchangeType>() {
  return ::OnlineExchangeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_5fWorld_2eproto__INCLUDED
