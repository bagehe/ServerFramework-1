// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol_Zone.proto

#ifndef PROTOBUF_GameProtocol_5fZone_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_5fZone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol_Common.pb.h"
#include "GameProtocol_USERDB.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

class GameLoginInfo;
class Zone_LoginServer_Request;
class Zone_LoginServer_Response;
class Zone_Logout_Notify;
class Zone_GetFriendInfo_Request;
class Zone_GetFriendInfo_Response;
class Zone_OnlineRole_Request;
class Zone_LoginServer_Notify;
class Zone_RepOpera_Request;
class Zone_RepOpera_Response;
class OneRepSlot;
class Zone_RepChange_Notify;
class UserResourceChange;
class Zone_ResourceChange_Notify;
class Zone_Chat_Request;
class Zone_Chat_Response;
class Zone_DoFish_Request;
class Zone_DoFish_Response;
class Zone_FormTime_Notify;
class Zone_SyncTime_Notify;
class SEATUSERINFO;
class Zone_SeatUser_Notify;
class FISHINFO;
class Zone_FishInfo_Notify;
class POS;
class BULLETINFO;
class Zone_BulletInfo_Notify;
class FORMFISHOUTINFO;
class Zone_FormInfo_Notify;
class Zone_ExitFish_Request;
class Zone_ExitFish_Response;
class Zone_ExitFish_Notify;
class Zone_ChangeGun_Request;
class Zone_ChangeGun_Response;
class Zone_ChangeGun_Notify;
class Zone_ShootBullet_Request;
class Zone_ShootBullet_Response;
class Zone_ShootBullet_Notify;
class Zone_HitFish_Request;
class Zone_HitFish_Response;
class Zone_HitFish_Notify;
class Zone_HitFormFish_Request;
class Zone_HitFormFish_Response;
class Zone_BoomFishInfo_Notify;
class Zone_Lottery_Request;
class Zone_Lottery_Response;
class Zone_AddTicket_Notify;
class QuestChange;
class Zone_QuestChange_Notify;
class Zone_FinQuest_Request;
class Zone_FinQuest_Response;
class RewardInfo;
class Zone_GetReward_Notify;
class Zone_SetExchange_Request;
class Zone_SetExchange_Response;
class Zone_ExchangeItem_Request;
class Zone_ExchangeItem_Response;
class Zone_NewMailInfo_Notify;
class Zone_MailOpera_Request;
class Zone_MailOpera_Response;
class Zone_GetLivness_Request;
class Zone_GetLivness_Response;
class Zone_GetRankInfo_Request;
class Zone_GetRankInfo_Response;
class Zone_UseSkill_Request;
class Zone_UseSkill_Response;
class Zone_UseSkill_Notify;
class Zone_GetLimitNum_Request;
class LimitInfo;
class Zone_GetLimitNum_Response;
class Zone_ChooseAimFish_Request;
class Zone_ChooseAimFish_Response;
class Zone_ChooseAimFish_Notify;
class Zone_GetUserAlms_Request;
class Zone_GetUserAlms_Response;
class Zone_UpdateAlms_Notify;
class Zone_LimitLottery_Request;
class Zone_LimitLottery_Response;
class Zone_PayLotteryRecord_Request;
class PayLotteryRecord;
class Zone_PayLotteryRecord_Response;
class HorseLampInfo;
class Zone_HorseLamp_Notify;
class Zone_EnterLasvegas_Request;
class Zone_EnterLasvegas_Response;
class Zone_LasvegasBet_Request;
class Zone_LasvegasBet_Response;
class Zone_UpdateLasvegas_Notify;
class Zone_GetRewardInfo_Request;
class Zone_GetRewardInfo_Response;
class Zone_GetLoginReward_Request;
class Zone_GetLoginReward_Response;
class Zone_GetPayRecord_Request;
class Zone_GetPayRecord_Response;
class Zone_GetPayGift_Request;
class Zone_GetPayGift_Response;
class Zone_UpdateMonthTime_Notify;
class Zone_FishUserUpdate_Notify;
class Zone_VipExpUpdate_Notify;
class Zone_UserRecharge_Notify;
class Zone_GetPayOrder_Request;
class Zone_GetPayOrder_Response;
class Zone_FinGuide_Request;
class Zone_FinGuide_Response;
class Zone_UpdateName_Request;
class Zone_UpdateName_Response;
class Zone_UserRecharge_Request;
class Zone_UserRecharge_Response;
class Zone_GetExchangeRec_Request;
class Zone_GetExchangeRec_Response;

enum ReqOperaType {
  REQ_OPERA_TYPE_INVALID = 0,
  REQ_OPERA_TYPE_OPEN = 1,
  REQ_OPERA_TYPE_USE = 2,
  REQ_OPERA_TYPE_SENDGIFT = 3,
  REQ_OPERA_TYPE_STYLE = 4,
  REQ_OPERA_TYPE_MONTH = 5
};
bool ReqOperaType_IsValid(int value);
const ReqOperaType ReqOperaType_MIN = REQ_OPERA_TYPE_INVALID;
const ReqOperaType ReqOperaType_MAX = REQ_OPERA_TYPE_MONTH;
const int ReqOperaType_ARRAYSIZE = ReqOperaType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReqOperaType_descriptor();
inline const ::std::string& ReqOperaType_Name(ReqOperaType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReqOperaType_descriptor(), value);
}
inline bool ReqOperaType_Parse(
    const ::std::string& name, ReqOperaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReqOperaType>(
    ReqOperaType_descriptor(), name, value);
}
enum GMOperaType {
  GM_OPERA_INVALID = 0,
  GM_OPERA_ADDRES = 1,
  GM_OPERA_ADDITEM = 2,
  GM_OPERA_HORSELAMP = 3,
  GM_OPERA_SENDMAIL = 4,
  GM_OPERA_RECHARGE = 5,
  GM_OPERA_GETBASEINFO = 6,
  GM_OPERA_GETREPINFO = 7,
  GM_OPERA_DELMAIL = 8,
  GM_OPERA_MAX = 100
};
bool GMOperaType_IsValid(int value);
const GMOperaType GMOperaType_MIN = GM_OPERA_INVALID;
const GMOperaType GMOperaType_MAX = GM_OPERA_MAX;
const int GMOperaType_ARRAYSIZE = GMOperaType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GMOperaType_descriptor();
inline const ::std::string& GMOperaType_Name(GMOperaType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GMOperaType_descriptor(), value);
}
inline bool GMOperaType_Parse(
    const ::std::string& name, GMOperaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GMOperaType>(
    GMOperaType_descriptor(), name, value);
}
enum LotteryType {
  LOTTERY_TYPE_INVALID = 0,
  LOTTERY_TYPE_RECHARGE = 1,
  LOTTERY_TYPE_TICKET = 2
};
bool LotteryType_IsValid(int value);
const LotteryType LotteryType_MIN = LOTTERY_TYPE_INVALID;
const LotteryType LotteryType_MAX = LOTTERY_TYPE_TICKET;
const int LotteryType_ARRAYSIZE = LotteryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LotteryType_descriptor();
inline const ::std::string& LotteryType_Name(LotteryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LotteryType_descriptor(), value);
}
inline bool LotteryType_Parse(
    const ::std::string& name, LotteryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LotteryType>(
    LotteryType_descriptor(), name, value);
}
enum QuestChangeType {
  QUEST_CHANGE_INVALID = 0,
  QUEST_CHANGE_ADD = 1,
  QUEST_CHANGE_DELETE = 2,
  QUEST_CHANGE_UPDATE = 3,
  QUEST_CHANGE_FIN = 4
};
bool QuestChangeType_IsValid(int value);
const QuestChangeType QuestChangeType_MIN = QUEST_CHANGE_INVALID;
const QuestChangeType QuestChangeType_MAX = QUEST_CHANGE_FIN;
const int QuestChangeType_ARRAYSIZE = QuestChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestChangeType_descriptor();
inline const ::std::string& QuestChangeType_Name(QuestChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestChangeType_descriptor(), value);
}
inline bool QuestChangeType_Parse(
    const ::std::string& name, QuestChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestChangeType>(
    QuestChangeType_descriptor(), name, value);
}
enum MailOperaType {
  MAIL_OPERA_INVALID = 0,
  MAIL_OPERA_READ = 1,
  MAIL_OPERA_RECIEVE = 2,
  MAIL_OPERA_DELETE = 3,
  MAIL_OPERA_ONERECIEVE = 4,
  MAIL_OPERA_ONEDELETE = 5,
  MAIL_OPERA_MAX = 6
};
bool MailOperaType_IsValid(int value);
const MailOperaType MailOperaType_MIN = MAIL_OPERA_INVALID;
const MailOperaType MailOperaType_MAX = MAIL_OPERA_MAX;
const int MailOperaType_ARRAYSIZE = MailOperaType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailOperaType_descriptor();
inline const ::std::string& MailOperaType_Name(MailOperaType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailOperaType_descriptor(), value);
}
inline bool MailOperaType_Parse(
    const ::std::string& name, MailOperaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailOperaType>(
    MailOperaType_descriptor(), name, value);
}
enum SkillType {
  SKILL_TYPE_INVALID = 0,
  SKILL_TYPE_AUTOSHOOT = 1,
  SKILL_TYPE_AIMFISH = 2,
  SKILL_TYPE_WARHEAD = 3,
  SKILL_TYPE_WILD = 4,
  SKILL_TYPE_PREWARHEAD = 5
};
bool SkillType_IsValid(int value);
const SkillType SkillType_MIN = SKILL_TYPE_INVALID;
const SkillType SkillType_MAX = SKILL_TYPE_PREWARHEAD;
const int SkillType_ARRAYSIZE = SkillType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillType_descriptor();
inline const ::std::string& SkillType_Name(SkillType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillType_descriptor(), value);
}
inline bool SkillType_Parse(
    const ::std::string& name, SkillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillType>(
    SkillType_descriptor(), name, value);
}
enum PayGiftType {
  PAY_GIFT_INVALID = 0,
  PAY_GIFT_FIRST = 1,
  PAY_GIFT_MONTHCARD = 2
};
bool PayGiftType_IsValid(int value);
const PayGiftType PayGiftType_MIN = PAY_GIFT_INVALID;
const PayGiftType PayGiftType_MAX = PAY_GIFT_MONTHCARD;
const int PayGiftType_ARRAYSIZE = PayGiftType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PayGiftType_descriptor();
inline const ::std::string& PayGiftType_Name(PayGiftType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PayGiftType_descriptor(), value);
}
inline bool PayGiftType_Parse(
    const ::std::string& name, PayGiftType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PayGiftType>(
    PayGiftType_descriptor(), name, value);
}
// ===================================================================

class GameLoginInfo : public ::google::protobuf::Message {
 public:
  GameLoginInfo();
  virtual ~GameLoginInfo();

  GameLoginInfo(const GameLoginInfo& from);

  inline GameLoginInfo& operator=(const GameLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameLoginInfo& default_instance();

  void Swap(GameLoginInfo* other);

  // implements Message ----------------------------------------------

  GameLoginInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameLoginInfo& from);
  void MergeFrom(const GameLoginInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BASEDBINFO stBaseInfo = 1;
  inline bool has_stbaseinfo() const;
  inline void clear_stbaseinfo();
  static const int kStBaseInfoFieldNumber = 1;
  inline const ::BASEDBINFO& stbaseinfo() const;
  inline ::BASEDBINFO* mutable_stbaseinfo();
  inline ::BASEDBINFO* release_stbaseinfo();
  inline void set_allocated_stbaseinfo(::BASEDBINFO* stbaseinfo);

  // optional .QUESTDBINFO stQuestInfo = 2;
  inline bool has_stquestinfo() const;
  inline void clear_stquestinfo();
  static const int kStQuestInfoFieldNumber = 2;
  inline const ::QUESTDBINFO& stquestinfo() const;
  inline ::QUESTDBINFO* mutable_stquestinfo();
  inline ::QUESTDBINFO* release_stquestinfo();
  inline void set_allocated_stquestinfo(::QUESTDBINFO* stquestinfo);

  // optional .ITEMDBINFO stItemInfo = 3;
  inline bool has_stiteminfo() const;
  inline void clear_stiteminfo();
  static const int kStItemInfoFieldNumber = 3;
  inline const ::ITEMDBINFO& stiteminfo() const;
  inline ::ITEMDBINFO* mutable_stiteminfo();
  inline ::ITEMDBINFO* release_stiteminfo();
  inline void set_allocated_stiteminfo(::ITEMDBINFO* stiteminfo);

  // optional .FRIENDDBINFO stFriendInfo = 4;
  inline bool has_stfriendinfo() const;
  inline void clear_stfriendinfo();
  static const int kStFriendInfoFieldNumber = 4;
  inline const ::FRIENDDBINFO& stfriendinfo() const;
  inline ::FRIENDDBINFO* mutable_stfriendinfo();
  inline ::FRIENDDBINFO* release_stfriendinfo();
  inline void set_allocated_stfriendinfo(::FRIENDDBINFO* stfriendinfo);

  // optional .MAILDBINFO stMailInfo = 5;
  inline bool has_stmailinfo() const;
  inline void clear_stmailinfo();
  static const int kStMailInfoFieldNumber = 5;
  inline const ::MAILDBINFO& stmailinfo() const;
  inline ::MAILDBINFO* mutable_stmailinfo();
  inline ::MAILDBINFO* release_stmailinfo();
  inline void set_allocated_stmailinfo(::MAILDBINFO* stmailinfo);

  // optional .RESERVED1DBINFO stReserved1 = 6;
  inline bool has_streserved1() const;
  inline void clear_streserved1();
  static const int kStReserved1FieldNumber = 6;
  inline const ::RESERVED1DBINFO& streserved1() const;
  inline ::RESERVED1DBINFO* mutable_streserved1();
  inline ::RESERVED1DBINFO* release_streserved1();
  inline void set_allocated_streserved1(::RESERVED1DBINFO* streserved1);

  // optional .RESERVED2DBINFO stReserved2 = 7;
  inline bool has_streserved2() const;
  inline void clear_streserved2();
  static const int kStReserved2FieldNumber = 7;
  inline const ::RESERVED2DBINFO& streserved2() const;
  inline ::RESERVED2DBINFO* mutable_streserved2();
  inline ::RESERVED2DBINFO* release_streserved2();
  inline void set_allocated_streserved2(::RESERVED2DBINFO* streserved2);

  // @@protoc_insertion_point(class_scope:GameLoginInfo)
 private:
  inline void set_has_stbaseinfo();
  inline void clear_has_stbaseinfo();
  inline void set_has_stquestinfo();
  inline void clear_has_stquestinfo();
  inline void set_has_stiteminfo();
  inline void clear_has_stiteminfo();
  inline void set_has_stfriendinfo();
  inline void clear_has_stfriendinfo();
  inline void set_has_stmailinfo();
  inline void clear_has_stmailinfo();
  inline void set_has_streserved1();
  inline void clear_has_streserved1();
  inline void set_has_streserved2();
  inline void clear_has_streserved2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BASEDBINFO* stbaseinfo_;
  ::QUESTDBINFO* stquestinfo_;
  ::ITEMDBINFO* stiteminfo_;
  ::FRIENDDBINFO* stfriendinfo_;
  ::MAILDBINFO* stmailinfo_;
  ::RESERVED1DBINFO* streserved1_;
  ::RESERVED2DBINFO* streserved2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static GameLoginInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LoginServer_Request : public ::google::protobuf::Message {
 public:
  Zone_LoginServer_Request();
  virtual ~Zone_LoginServer_Request();

  Zone_LoginServer_Request(const Zone_LoginServer_Request& from);

  inline Zone_LoginServer_Request& operator=(const Zone_LoginServer_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LoginServer_Request& default_instance();

  void Swap(Zone_LoginServer_Request* other);

  // implements Message ----------------------------------------------

  Zone_LoginServer_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LoginServer_Request& from);
  void MergeFrom(const Zone_LoginServer_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional uint32 uLoginReason = 3;
  inline bool has_uloginreason() const;
  inline void clear_uloginreason();
  static const int kULoginReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 uloginreason() const;
  inline void set_uloginreason(::google::protobuf::uint32 value);

  // optional uint32 uClientVersion = 4;
  inline bool has_uclientversion() const;
  inline void clear_uclientversion();
  static const int kUClientVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 uclientversion() const;
  inline void set_uclientversion(::google::protobuf::uint32 value);

  // optional string strSessionKey = 5;
  inline bool has_strsessionkey() const;
  inline void clear_strsessionkey();
  static const int kStrSessionKeyFieldNumber = 5;
  inline const ::std::string& strsessionkey() const;
  inline void set_strsessionkey(const ::std::string& value);
  inline void set_strsessionkey(const char* value);
  inline void set_strsessionkey(const char* value, size_t size);
  inline ::std::string* mutable_strsessionkey();
  inline ::std::string* release_strsessionkey();
  inline void set_allocated_strsessionkey(::std::string* strsessionkey);

  // optional string strNickName = 6;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 6;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // optional string strChannel = 7;
  inline bool has_strchannel() const;
  inline void clear_strchannel();
  static const int kStrChannelFieldNumber = 7;
  inline const ::std::string& strchannel() const;
  inline void set_strchannel(const ::std::string& value);
  inline void set_strchannel(const char* value);
  inline void set_strchannel(const char* value, size_t size);
  inline ::std::string* mutable_strchannel();
  inline ::std::string* release_strchannel();
  inline void set_allocated_strchannel(::std::string* strchannel);

  // optional int32 iRealNameStat = 8;
  inline bool has_irealnamestat() const;
  inline void clear_irealnamestat();
  static const int kIRealNameStatFieldNumber = 8;
  inline ::google::protobuf::int32 irealnamestat() const;
  inline void set_irealnamestat(::google::protobuf::int32 value);

  // optional string strAccount = 9;
  inline bool has_straccount() const;
  inline void clear_straccount();
  static const int kStrAccountFieldNumber = 9;
  inline const ::std::string& straccount() const;
  inline void set_straccount(const ::std::string& value);
  inline void set_straccount(const char* value);
  inline void set_straccount(const char* value, size_t size);
  inline ::std::string* mutable_straccount();
  inline ::std::string* release_straccount();
  inline void set_allocated_straccount(::std::string* straccount);

  // optional string strDeviceID = 10;
  inline bool has_strdeviceid() const;
  inline void clear_strdeviceid();
  static const int kStrDeviceIDFieldNumber = 10;
  inline const ::std::string& strdeviceid() const;
  inline void set_strdeviceid(const ::std::string& value);
  inline void set_strdeviceid(const char* value);
  inline void set_strdeviceid(const char* value, size_t size);
  inline ::std::string* mutable_strdeviceid();
  inline ::std::string* release_strdeviceid();
  inline void set_allocated_strdeviceid(::std::string* strdeviceid);

  // optional bool bIsNew = 11;
  inline bool has_bisnew() const;
  inline void clear_bisnew();
  static const int kBIsNewFieldNumber = 11;
  inline bool bisnew() const;
  inline void set_bisnew(bool value);

  // @@protoc_insertion_point(class_scope:Zone_LoginServer_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_uloginreason();
  inline void clear_has_uloginreason();
  inline void set_has_uclientversion();
  inline void clear_has_uclientversion();
  inline void set_has_strsessionkey();
  inline void clear_has_strsessionkey();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_strchannel();
  inline void clear_has_strchannel();
  inline void set_has_irealnamestat();
  inline void clear_has_irealnamestat();
  inline void set_has_straccount();
  inline void clear_has_straccount();
  inline void set_has_strdeviceid();
  inline void clear_has_strdeviceid();
  inline void set_has_bisnew();
  inline void clear_has_bisnew();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::uint32 uloginreason_;
  ::google::protobuf::uint32 uclientversion_;
  ::std::string* strsessionkey_;
  ::std::string* strnickname_;
  ::std::string* strchannel_;
  ::std::string* straccount_;
  ::google::protobuf::int32 irealnamestat_;
  bool bisnew_;
  ::std::string* strdeviceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LoginServer_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LoginServer_Response : public ::google::protobuf::Message {
 public:
  Zone_LoginServer_Response();
  virtual ~Zone_LoginServer_Response();

  Zone_LoginServer_Response(const Zone_LoginServer_Response& from);

  inline Zone_LoginServer_Response& operator=(const Zone_LoginServer_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LoginServer_Response& default_instance();

  void Swap(Zone_LoginServer_Response* other);

  // implements Message ----------------------------------------------

  Zone_LoginServer_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LoginServer_Response& from);
  void MergeFrom(const Zone_LoginServer_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iZoneID = 3;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 3;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iWorldID = 4;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 4;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional .GameLoginInfo stLoginInfo = 5;
  inline bool has_stlogininfo() const;
  inline void clear_stlogininfo();
  static const int kStLoginInfoFieldNumber = 5;
  inline const ::GameLoginInfo& stlogininfo() const;
  inline ::GameLoginInfo* mutable_stlogininfo();
  inline ::GameLoginInfo* release_stlogininfo();
  inline void set_allocated_stlogininfo(::GameLoginInfo* stlogininfo);

  // @@protoc_insertion_point(class_scope:Zone_LoginServer_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_stlogininfo();
  inline void clear_has_stlogininfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::int32 iworldid_;
  ::GameLoginInfo* stlogininfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LoginServer_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Logout_Notify : public ::google::protobuf::Message {
 public:
  Zone_Logout_Notify();
  virtual ~Zone_Logout_Notify();

  Zone_Logout_Notify(const Zone_Logout_Notify& from);

  inline Zone_Logout_Notify& operator=(const Zone_Logout_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Logout_Notify& default_instance();

  void Swap(Zone_Logout_Notify* other);

  // implements Message ----------------------------------------------

  Zone_Logout_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Logout_Notify& from);
  void MergeFrom(const Zone_Logout_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // @@protoc_insertion_point(class_scope:Zone_Logout_Notify)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Logout_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetFriendInfo_Request : public ::google::protobuf::Message {
 public:
  Zone_GetFriendInfo_Request();
  virtual ~Zone_GetFriendInfo_Request();

  Zone_GetFriendInfo_Request(const Zone_GetFriendInfo_Request& from);

  inline Zone_GetFriendInfo_Request& operator=(const Zone_GetFriendInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetFriendInfo_Request& default_instance();

  void Swap(Zone_GetFriendInfo_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetFriendInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetFriendInfo_Request& from);
  void MergeFrom(const Zone_GetFriendInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ucReqType = 1;
  inline bool has_ucreqtype() const;
  inline void clear_ucreqtype();
  static const int kUcReqTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ucreqtype() const;
  inline void set_ucreqtype(::google::protobuf::uint32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 friend_uin = 3;
  inline bool has_friend_uin() const;
  inline void clear_friend_uin();
  static const int kFriendUinFieldNumber = 3;
  inline ::google::protobuf::uint32 friend_uin() const;
  inline void set_friend_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetFriendInfo_Request)
 private:
  inline void set_has_ucreqtype();
  inline void clear_has_ucreqtype();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_friend_uin();
  inline void clear_has_friend_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ucreqtype_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 friend_uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetFriendInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetFriendInfo_Response : public ::google::protobuf::Message {
 public:
  Zone_GetFriendInfo_Response();
  virtual ~Zone_GetFriendInfo_Response();

  Zone_GetFriendInfo_Response(const Zone_GetFriendInfo_Response& from);

  inline Zone_GetFriendInfo_Response& operator=(const Zone_GetFriendInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetFriendInfo_Response& default_instance();

  void Swap(Zone_GetFriendInfo_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetFriendInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetFriendInfo_Response& from);
  void MergeFrom(const Zone_GetFriendInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetFriendInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetFriendInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_OnlineRole_Request : public ::google::protobuf::Message {
 public:
  Zone_OnlineRole_Request();
  virtual ~Zone_OnlineRole_Request();

  Zone_OnlineRole_Request(const Zone_OnlineRole_Request& from);

  inline Zone_OnlineRole_Request& operator=(const Zone_OnlineRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_OnlineRole_Request& default_instance();

  void Swap(Zone_OnlineRole_Request* other);

  // implements Message ----------------------------------------------

  Zone_OnlineRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_OnlineRole_Request& from);
  void MergeFrom(const Zone_OnlineRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional int32 iZoneID = 2;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iRoleNum = 3;
  inline bool has_irolenum() const;
  inline void clear_irolenum();
  static const int kIRoleNumFieldNumber = 3;
  inline ::google::protobuf::int32 irolenum() const;
  inline void set_irolenum(::google::protobuf::int32 value);

  // optional string strRecordTime = 4;
  inline bool has_strrecordtime() const;
  inline void clear_strrecordtime();
  static const int kStrRecordTimeFieldNumber = 4;
  inline const ::std::string& strrecordtime() const;
  inline void set_strrecordtime(const ::std::string& value);
  inline void set_strrecordtime(const char* value);
  inline void set_strrecordtime(const char* value, size_t size);
  inline ::std::string* mutable_strrecordtime();
  inline ::std::string* release_strrecordtime();
  inline void set_allocated_strrecordtime(::std::string* strrecordtime);

  // @@protoc_insertion_point(class_scope:Zone_OnlineRole_Request)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_irolenum();
  inline void clear_has_irolenum();
  inline void set_has_strrecordtime();
  inline void clear_has_strrecordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 izoneid_;
  ::std::string* strrecordtime_;
  ::google::protobuf::int32 irolenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_OnlineRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LoginServer_Notify : public ::google::protobuf::Message {
 public:
  Zone_LoginServer_Notify();
  virtual ~Zone_LoginServer_Notify();

  Zone_LoginServer_Notify(const Zone_LoginServer_Notify& from);

  inline Zone_LoginServer_Notify& operator=(const Zone_LoginServer_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LoginServer_Notify& default_instance();

  void Swap(Zone_LoginServer_Notify* other);

  // implements Message ----------------------------------------------

  Zone_LoginServer_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LoginServer_Notify& from);
  void MergeFrom(const Zone_LoginServer_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iZoneID = 4;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 4;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_LoginServer_Notify)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 izoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LoginServer_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RepOpera_Request : public ::google::protobuf::Message {
 public:
  Zone_RepOpera_Request();
  virtual ~Zone_RepOpera_Request();

  Zone_RepOpera_Request(const Zone_RepOpera_Request& from);

  inline Zone_RepOpera_Request& operator=(const Zone_RepOpera_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RepOpera_Request& default_instance();

  void Swap(Zone_RepOpera_Request* other);

  // implements Message ----------------------------------------------

  Zone_RepOpera_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RepOpera_Request& from);
  void MergeFrom(const Zone_RepOpera_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReqOperaType eType = 1 [default = REQ_OPERA_TYPE_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 1;
  inline ::ReqOperaType etype() const;
  inline void set_etype(::ReqOperaType value);

  // optional int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // optional int32 iItemNum = 3;
  inline bool has_iitemnum() const;
  inline void clear_iitemnum();
  static const int kIItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 iitemnum() const;
  inline void set_iitemnum(::google::protobuf::int32 value);

  // optional uint32 uToUin = 4;
  inline bool has_utouin() const;
  inline void clear_utouin();
  static const int kUToUinFieldNumber = 4;
  inline ::google::protobuf::uint32 utouin() const;
  inline void set_utouin(::google::protobuf::uint32 value);

  // optional string strPhoneNum = 5;
  inline bool has_strphonenum() const;
  inline void clear_strphonenum();
  static const int kStrPhoneNumFieldNumber = 5;
  inline const ::std::string& strphonenum() const;
  inline void set_strphonenum(const ::std::string& value);
  inline void set_strphonenum(const char* value);
  inline void set_strphonenum(const char* value, size_t size);
  inline ::std::string* mutable_strphonenum();
  inline ::std::string* release_strphonenum();
  inline void set_allocated_strphonenum(::std::string* strphonenum);

  // @@protoc_insertion_point(class_scope:Zone_RepOpera_Request)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_iitemnum();
  inline void clear_has_iitemnum();
  inline void set_has_utouin();
  inline void clear_has_utouin();
  inline void set_has_strphonenum();
  inline void clear_has_strphonenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int etype_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 iitemnum_;
  ::google::protobuf::uint32 utouin_;
  ::std::string* strphonenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_RepOpera_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RepOpera_Response : public ::google::protobuf::Message {
 public:
  Zone_RepOpera_Response();
  virtual ~Zone_RepOpera_Response();

  Zone_RepOpera_Response(const Zone_RepOpera_Response& from);

  inline Zone_RepOpera_Response& operator=(const Zone_RepOpera_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RepOpera_Response& default_instance();

  void Swap(Zone_RepOpera_Response* other);

  // implements Message ----------------------------------------------

  Zone_RepOpera_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RepOpera_Response& from);
  void MergeFrom(const Zone_RepOpera_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .ReqOperaType eType = 2 [default = REQ_OPERA_TYPE_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 2;
  inline ::ReqOperaType etype() const;
  inline void set_etype(::ReqOperaType value);

  // optional int32 iItemID = 3;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // optional int32 iItemNum = 4;
  inline bool has_iitemnum() const;
  inline void clear_iitemnum();
  static const int kIItemNumFieldNumber = 4;
  inline ::google::protobuf::int32 iitemnum() const;
  inline void set_iitemnum(::google::protobuf::int32 value);

  // optional uint32 uToUin = 5;
  inline bool has_utouin() const;
  inline void clear_utouin();
  static const int kUToUinFieldNumber = 5;
  inline ::google::protobuf::uint32 utouin() const;
  inline void set_utouin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_RepOpera_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_iitemnum();
  inline void clear_has_iitemnum();
  inline void set_has_utouin();
  inline void clear_has_utouin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  int etype_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 iitemnum_;
  ::google::protobuf::uint32 utouin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_RepOpera_Response* default_instance_;
};
// -------------------------------------------------------------------

class OneRepSlot : public ::google::protobuf::Message {
 public:
  OneRepSlot();
  virtual ~OneRepSlot();

  OneRepSlot(const OneRepSlot& from);

  inline OneRepSlot& operator=(const OneRepSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneRepSlot& default_instance();

  void Swap(OneRepSlot* other);

  // implements Message ----------------------------------------------

  OneRepSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneRepSlot& from);
  void MergeFrom(const OneRepSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iChangeChannel = 3;
  inline bool has_ichangechannel() const;
  inline void clear_ichangechannel();
  static const int kIChangeChannelFieldNumber = 3;
  inline ::google::protobuf::int32 ichangechannel() const;
  inline void set_ichangechannel(::google::protobuf::int32 value);

  // optional .OneSlotInfo stSlotInfo = 2;
  inline bool has_stslotinfo() const;
  inline void clear_stslotinfo();
  static const int kStSlotInfoFieldNumber = 2;
  inline const ::OneSlotInfo& stslotinfo() const;
  inline ::OneSlotInfo* mutable_stslotinfo();
  inline ::OneSlotInfo* release_stslotinfo();
  inline void set_allocated_stslotinfo(::OneSlotInfo* stslotinfo);

  // @@protoc_insertion_point(class_scope:OneRepSlot)
 private:
  inline void set_has_ichangechannel();
  inline void clear_has_ichangechannel();
  inline void set_has_stslotinfo();
  inline void clear_has_stslotinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::OneSlotInfo* stslotinfo_;
  ::google::protobuf::int32 ichangechannel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static OneRepSlot* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RepChange_Notify : public ::google::protobuf::Message {
 public:
  Zone_RepChange_Notify();
  virtual ~Zone_RepChange_Notify();

  Zone_RepChange_Notify(const Zone_RepChange_Notify& from);

  inline Zone_RepChange_Notify& operator=(const Zone_RepChange_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RepChange_Notify& default_instance();

  void Swap(Zone_RepChange_Notify* other);

  // implements Message ----------------------------------------------

  Zone_RepChange_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RepChange_Notify& from);
  void MergeFrom(const Zone_RepChange_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneRepSlot stItems = 1;
  inline int stitems_size() const;
  inline void clear_stitems();
  static const int kStItemsFieldNumber = 1;
  inline const ::OneRepSlot& stitems(int index) const;
  inline ::OneRepSlot* mutable_stitems(int index);
  inline ::OneRepSlot* add_stitems();
  inline const ::google::protobuf::RepeatedPtrField< ::OneRepSlot >&
      stitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneRepSlot >*
      mutable_stitems();

  // @@protoc_insertion_point(class_scope:Zone_RepChange_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneRepSlot > stitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_RepChange_Notify* default_instance_;
};
// -------------------------------------------------------------------

class UserResourceChange : public ::google::protobuf::Message {
 public:
  UserResourceChange();
  virtual ~UserResourceChange();

  UserResourceChange(const UserResourceChange& from);

  inline UserResourceChange& operator=(const UserResourceChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserResourceChange& default_instance();

  void Swap(UserResourceChange* other);

  // implements Message ----------------------------------------------

  UserResourceChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserResourceChange& from);
  void MergeFrom(const UserResourceChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResType = 1;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 1;
  inline ::google::protobuf::int32 irestype() const;
  inline void set_irestype(::google::protobuf::int32 value);

  // optional int32 iNewResNum = 2;
  inline bool has_inewresnum() const;
  inline void clear_inewresnum();
  static const int kINewResNumFieldNumber = 2;
  inline ::google::protobuf::int32 inewresnum() const;
  inline void set_inewresnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserResourceChange)
 private:
  inline void set_has_irestype();
  inline void clear_has_irestype();
  inline void set_has_inewresnum();
  inline void clear_has_inewresnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irestype_;
  ::google::protobuf::int32 inewresnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static UserResourceChange* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ResourceChange_Notify : public ::google::protobuf::Message {
 public:
  Zone_ResourceChange_Notify();
  virtual ~Zone_ResourceChange_Notify();

  Zone_ResourceChange_Notify(const Zone_ResourceChange_Notify& from);

  inline Zone_ResourceChange_Notify& operator=(const Zone_ResourceChange_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ResourceChange_Notify& default_instance();

  void Swap(Zone_ResourceChange_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ResourceChange_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ResourceChange_Notify& from);
  void MergeFrom(const Zone_ResourceChange_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserResourceChange stChangeInfos = 1;
  inline int stchangeinfos_size() const;
  inline void clear_stchangeinfos();
  static const int kStChangeInfosFieldNumber = 1;
  inline const ::UserResourceChange& stchangeinfos(int index) const;
  inline ::UserResourceChange* mutable_stchangeinfos(int index);
  inline ::UserResourceChange* add_stchangeinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::UserResourceChange >&
      stchangeinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserResourceChange >*
      mutable_stchangeinfos();

  // @@protoc_insertion_point(class_scope:Zone_ResourceChange_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::UserResourceChange > stchangeinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ResourceChange_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Chat_Request : public ::google::protobuf::Message {
 public:
  Zone_Chat_Request();
  virtual ~Zone_Chat_Request();

  Zone_Chat_Request(const Zone_Chat_Request& from);

  inline Zone_Chat_Request& operator=(const Zone_Chat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Chat_Request& default_instance();

  void Swap(Zone_Chat_Request* other);

  // implements Message ----------------------------------------------

  Zone_Chat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Chat_Request& from);
  void MergeFrom(const Zone_Chat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
  inline bool has_ichannel() const;
  inline void clear_ichannel();
  static const int kIChannelFieldNumber = 1;
  inline ::ChatChannelType ichannel() const;
  inline void set_ichannel(::ChatChannelType value);

  // optional .RoleID stTargetRoleID = 2;
  inline bool has_sttargetroleid() const;
  inline void clear_sttargetroleid();
  static const int kStTargetRoleIDFieldNumber = 2;
  inline const ::RoleID& sttargetroleid() const;
  inline ::RoleID* mutable_sttargetroleid();
  inline ::RoleID* release_sttargetroleid();
  inline void set_allocated_sttargetroleid(::RoleID* sttargetroleid);

  // optional string strMessage = 3;
  inline bool has_strmessage() const;
  inline void clear_strmessage();
  static const int kStrMessageFieldNumber = 3;
  inline const ::std::string& strmessage() const;
  inline void set_strmessage(const ::std::string& value);
  inline void set_strmessage(const char* value);
  inline void set_strmessage(const char* value, size_t size);
  inline ::std::string* mutable_strmessage();
  inline ::std::string* release_strmessage();
  inline void set_allocated_strmessage(::std::string* strmessage);

  // @@protoc_insertion_point(class_scope:Zone_Chat_Request)
 private:
  inline void set_has_ichannel();
  inline void clear_has_ichannel();
  inline void set_has_sttargetroleid();
  inline void clear_has_sttargetroleid();
  inline void set_has_strmessage();
  inline void clear_has_strmessage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* sttargetroleid_;
  ::std::string* strmessage_;
  int ichannel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Chat_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Chat_Response : public ::google::protobuf::Message {
 public:
  Zone_Chat_Response();
  virtual ~Zone_Chat_Response();

  Zone_Chat_Response(const Zone_Chat_Response& from);

  inline Zone_Chat_Response& operator=(const Zone_Chat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Chat_Response& default_instance();

  void Swap(Zone_Chat_Response* other);

  // implements Message ----------------------------------------------

  Zone_Chat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Chat_Response& from);
  void MergeFrom(const Zone_Chat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_Chat_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Chat_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DoFish_Request : public ::google::protobuf::Message {
 public:
  Zone_DoFish_Request();
  virtual ~Zone_DoFish_Request();

  Zone_DoFish_Request(const Zone_DoFish_Request& from);

  inline Zone_DoFish_Request& operator=(const Zone_DoFish_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DoFish_Request& default_instance();

  void Swap(Zone_DoFish_Request* other);

  // implements Message ----------------------------------------------

  Zone_DoFish_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DoFish_Request& from);
  void MergeFrom(const Zone_DoFish_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFishRoomID = 1;
  inline bool has_ifishroomid() const;
  inline void clear_ifishroomid();
  static const int kIFishRoomIDFieldNumber = 1;
  inline ::google::protobuf::int32 ifishroomid() const;
  inline void set_ifishroomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_DoFish_Request)
 private:
  inline void set_has_ifishroomid();
  inline void clear_has_ifishroomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifishroomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_DoFish_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DoFish_Response : public ::google::protobuf::Message {
 public:
  Zone_DoFish_Response();
  virtual ~Zone_DoFish_Response();

  Zone_DoFish_Response(const Zone_DoFish_Response& from);

  inline Zone_DoFish_Response& operator=(const Zone_DoFish_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DoFish_Response& default_instance();

  void Swap(Zone_DoFish_Response* other);

  // implements Message ----------------------------------------------

  Zone_DoFish_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DoFish_Response& from);
  void MergeFrom(const Zone_DoFish_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iFishRoomID = 2;
  inline bool has_ifishroomid() const;
  inline void clear_ifishroomid();
  static const int kIFishRoomIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifishroomid() const;
  inline void set_ifishroomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_DoFish_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ifishroomid();
  inline void clear_has_ifishroomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 ifishroomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_DoFish_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FormTime_Notify : public ::google::protobuf::Message {
 public:
  Zone_FormTime_Notify();
  virtual ~Zone_FormTime_Notify();

  Zone_FormTime_Notify(const Zone_FormTime_Notify& from);

  inline Zone_FormTime_Notify& operator=(const Zone_FormTime_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FormTime_Notify& default_instance();

  void Swap(Zone_FormTime_Notify* other);

  // implements Message ----------------------------------------------

  Zone_FormTime_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FormTime_Notify& from);
  void MergeFrom(const Zone_FormTime_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bIsBegin = 1;
  inline bool has_bisbegin() const;
  inline void clear_bisbegin();
  static const int kBIsBeginFieldNumber = 1;
  inline bool bisbegin() const;
  inline void set_bisbegin(bool value);

  // optional int64 lTime = 2;
  inline bool has_ltime() const;
  inline void clear_ltime();
  static const int kLTimeFieldNumber = 2;
  inline ::google::protobuf::int64 ltime() const;
  inline void set_ltime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Zone_FormTime_Notify)
 private:
  inline void set_has_bisbegin();
  inline void clear_has_bisbegin();
  inline void set_has_ltime();
  inline void clear_has_ltime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 ltime_;
  bool bisbegin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FormTime_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SyncTime_Notify : public ::google::protobuf::Message {
 public:
  Zone_SyncTime_Notify();
  virtual ~Zone_SyncTime_Notify();

  Zone_SyncTime_Notify(const Zone_SyncTime_Notify& from);

  inline Zone_SyncTime_Notify& operator=(const Zone_SyncTime_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SyncTime_Notify& default_instance();

  void Swap(Zone_SyncTime_Notify* other);

  // implements Message ----------------------------------------------

  Zone_SyncTime_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SyncTime_Notify& from);
  void MergeFrom(const Zone_SyncTime_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 lServerTime = 1;
  inline bool has_lservertime() const;
  inline void clear_lservertime();
  static const int kLServerTimeFieldNumber = 1;
  inline ::google::protobuf::int64 lservertime() const;
  inline void set_lservertime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Zone_SyncTime_Notify)
 private:
  inline void set_has_lservertime();
  inline void clear_has_lservertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 lservertime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_SyncTime_Notify* default_instance_;
};
// -------------------------------------------------------------------

class SEATUSERINFO : public ::google::protobuf::Message {
 public:
  SEATUSERINFO();
  virtual ~SEATUSERINFO();

  SEATUSERINFO(const SEATUSERINFO& from);

  inline SEATUSERINFO& operator=(const SEATUSERINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SEATUSERINFO& default_instance();

  void Swap(SEATUSERINFO* other);

  // implements Message ----------------------------------------------

  SEATUSERINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SEATUSERINFO& from);
  void MergeFrom(const SEATUSERINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iSeat = 1;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 1;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iGunID = 3;
  inline bool has_igunid() const;
  inline void clear_igunid();
  static const int kIGunIDFieldNumber = 3;
  inline ::google::protobuf::int32 igunid() const;
  inline void set_igunid(::google::protobuf::int32 value);

  // optional int64 lCoins = 4;
  inline bool has_lcoins() const;
  inline void clear_lcoins();
  static const int kLCoinsFieldNumber = 4;
  inline ::google::protobuf::int64 lcoins() const;
  inline void set_lcoins(::google::protobuf::int64 value);

  // optional int64 lTickets = 6;
  inline bool has_ltickets() const;
  inline void clear_ltickets();
  static const int kLTicketsFieldNumber = 6;
  inline ::google::protobuf::int64 ltickets() const;
  inline void set_ltickets(::google::protobuf::int64 value);

  // optional string strNickName = 5;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 5;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // optional int32 iGunStyleID = 7;
  inline bool has_igunstyleid() const;
  inline void clear_igunstyleid();
  static const int kIGunStyleIDFieldNumber = 7;
  inline ::google::protobuf::int32 igunstyleid() const;
  inline void set_igunstyleid(::google::protobuf::int32 value);

  // optional string strPicID = 8;
  inline bool has_strpicid() const;
  inline void clear_strpicid();
  static const int kStrPicIDFieldNumber = 8;
  inline const ::std::string& strpicid() const;
  inline void set_strpicid(const ::std::string& value);
  inline void set_strpicid(const char* value);
  inline void set_strpicid(const char* value, size_t size);
  inline ::std::string* mutable_strpicid();
  inline ::std::string* release_strpicid();
  inline void set_allocated_strpicid(::std::string* strpicid);

  // optional int32 iVIPLevel = 9;
  inline bool has_iviplevel() const;
  inline void clear_iviplevel();
  static const int kIVIPLevelFieldNumber = 9;
  inline ::google::protobuf::int32 iviplevel() const;
  inline void set_iviplevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SEATUSERINFO)
 private:
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_igunid();
  inline void clear_has_igunid();
  inline void set_has_lcoins();
  inline void clear_has_lcoins();
  inline void set_has_ltickets();
  inline void clear_has_ltickets();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_igunstyleid();
  inline void clear_has_igunstyleid();
  inline void set_has_strpicid();
  inline void clear_has_strpicid();
  inline void set_has_iviplevel();
  inline void clear_has_iviplevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iseat_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int64 lcoins_;
  ::google::protobuf::int64 ltickets_;
  ::google::protobuf::int32 igunid_;
  ::google::protobuf::int32 igunstyleid_;
  ::std::string* strnickname_;
  ::std::string* strpicid_;
  ::google::protobuf::int32 iviplevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static SEATUSERINFO* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SeatUser_Notify : public ::google::protobuf::Message {
 public:
  Zone_SeatUser_Notify();
  virtual ~Zone_SeatUser_Notify();

  Zone_SeatUser_Notify(const Zone_SeatUser_Notify& from);

  inline Zone_SeatUser_Notify& operator=(const Zone_SeatUser_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SeatUser_Notify& default_instance();

  void Swap(Zone_SeatUser_Notify* other);

  // implements Message ----------------------------------------------

  Zone_SeatUser_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SeatUser_Notify& from);
  void MergeFrom(const Zone_SeatUser_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SEATUSERINFO stUsers = 1;
  inline int stusers_size() const;
  inline void clear_stusers();
  static const int kStUsersFieldNumber = 1;
  inline const ::SEATUSERINFO& stusers(int index) const;
  inline ::SEATUSERINFO* mutable_stusers(int index);
  inline ::SEATUSERINFO* add_stusers();
  inline const ::google::protobuf::RepeatedPtrField< ::SEATUSERINFO >&
      stusers() const;
  inline ::google::protobuf::RepeatedPtrField< ::SEATUSERINFO >*
      mutable_stusers();

  // @@protoc_insertion_point(class_scope:Zone_SeatUser_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SEATUSERINFO > stusers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_SeatUser_Notify* default_instance_;
};
// -------------------------------------------------------------------

class FISHINFO : public ::google::protobuf::Message {
 public:
  FISHINFO();
  virtual ~FISHINFO();

  FISHINFO(const FISHINFO& from);

  inline FISHINFO& operator=(const FISHINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FISHINFO& default_instance();

  void Swap(FISHINFO* other);

  // implements Message ----------------------------------------------

  FISHINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FISHINFO& from);
  void MergeFrom(const FISHINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uUniqID = 1;
  inline bool has_uuniqid() const;
  inline void clear_uuniqid();
  static const int kUUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uuniqid() const;
  inline void set_uuniqid(::google::protobuf::uint32 value);

  // optional int32 iFishID = 2;
  inline bool has_ifishid() const;
  inline void clear_ifishid();
  static const int kIFishIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifishid() const;
  inline void set_ifishid(::google::protobuf::int32 value);

  // optional int32 iFishSeqID = 3;
  inline bool has_ifishseqid() const;
  inline void clear_ifishseqid();
  static const int kIFishSeqIDFieldNumber = 3;
  inline ::google::protobuf::int32 ifishseqid() const;
  inline void set_ifishseqid(::google::protobuf::int32 value);

  // optional int32 iTraceID = 4;
  inline bool has_itraceid() const;
  inline void clear_itraceid();
  static const int kITraceIDFieldNumber = 4;
  inline ::google::protobuf::int32 itraceid() const;
  inline void set_itraceid(::google::protobuf::int32 value);

  // optional int64 lBorTime = 5;
  inline bool has_lbortime() const;
  inline void clear_lbortime();
  static const int kLBorTimeFieldNumber = 5;
  inline ::google::protobuf::int64 lbortime() const;
  inline void set_lbortime(::google::protobuf::int64 value);

  // optional int64 lDeadTime = 6;
  inline bool has_ldeadtime() const;
  inline void clear_ldeadtime();
  static const int kLDeadTimeFieldNumber = 6;
  inline ::google::protobuf::int64 ldeadtime() const;
  inline void set_ldeadtime(::google::protobuf::int64 value);

  // optional uint32 cIndex = 7;
  inline bool has_cindex() const;
  inline void clear_cindex();
  static const int kCIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 cindex() const;
  inline void set_cindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FISHINFO)
 private:
  inline void set_has_uuniqid();
  inline void clear_has_uuniqid();
  inline void set_has_ifishid();
  inline void clear_has_ifishid();
  inline void set_has_ifishseqid();
  inline void clear_has_ifishseqid();
  inline void set_has_itraceid();
  inline void clear_has_itraceid();
  inline void set_has_lbortime();
  inline void clear_has_lbortime();
  inline void set_has_ldeadtime();
  inline void clear_has_ldeadtime();
  inline void set_has_cindex();
  inline void clear_has_cindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uuniqid_;
  ::google::protobuf::int32 ifishid_;
  ::google::protobuf::int32 ifishseqid_;
  ::google::protobuf::int32 itraceid_;
  ::google::protobuf::int64 lbortime_;
  ::google::protobuf::int64 ldeadtime_;
  ::google::protobuf::uint32 cindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static FISHINFO* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FishInfo_Notify : public ::google::protobuf::Message {
 public:
  Zone_FishInfo_Notify();
  virtual ~Zone_FishInfo_Notify();

  Zone_FishInfo_Notify(const Zone_FishInfo_Notify& from);

  inline Zone_FishInfo_Notify& operator=(const Zone_FishInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FishInfo_Notify& default_instance();

  void Swap(Zone_FishInfo_Notify* other);

  // implements Message ----------------------------------------------

  Zone_FishInfo_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FishInfo_Notify& from);
  void MergeFrom(const Zone_FishInfo_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FISHINFO stFishes = 1;
  inline int stfishes_size() const;
  inline void clear_stfishes();
  static const int kStFishesFieldNumber = 1;
  inline const ::FISHINFO& stfishes(int index) const;
  inline ::FISHINFO* mutable_stfishes(int index);
  inline ::FISHINFO* add_stfishes();
  inline const ::google::protobuf::RepeatedPtrField< ::FISHINFO >&
      stfishes() const;
  inline ::google::protobuf::RepeatedPtrField< ::FISHINFO >*
      mutable_stfishes();

  // @@protoc_insertion_point(class_scope:Zone_FishInfo_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FISHINFO > stfishes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FishInfo_Notify* default_instance_;
};
// -------------------------------------------------------------------

class POS : public ::google::protobuf::Message {
 public:
  POS();
  virtual ~POS();

  POS(const POS& from);

  inline POS& operator=(const POS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const POS& default_instance();

  void Swap(POS* other);

  // implements Message ----------------------------------------------

  POS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const POS& from);
  void MergeFrom(const POS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iX = 1;
  inline bool has_ix() const;
  inline void clear_ix();
  static const int kIXFieldNumber = 1;
  inline ::google::protobuf::int32 ix() const;
  inline void set_ix(::google::protobuf::int32 value);

  // optional int32 iY = 2;
  inline bool has_iy() const;
  inline void clear_iy();
  static const int kIYFieldNumber = 2;
  inline ::google::protobuf::int32 iy() const;
  inline void set_iy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POS)
 private:
  inline void set_has_ix();
  inline void clear_has_ix();
  inline void set_has_iy();
  inline void clear_has_iy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ix_;
  ::google::protobuf::int32 iy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static POS* default_instance_;
};
// -------------------------------------------------------------------

class BULLETINFO : public ::google::protobuf::Message {
 public:
  BULLETINFO();
  virtual ~BULLETINFO();

  BULLETINFO(const BULLETINFO& from);

  inline BULLETINFO& operator=(const BULLETINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BULLETINFO& default_instance();

  void Swap(BULLETINFO* other);

  // implements Message ----------------------------------------------

  BULLETINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BULLETINFO& from);
  void MergeFrom(const BULLETINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uUniqID = 1;
  inline bool has_uuniqid() const;
  inline void clear_uuniqid();
  static const int kUUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uuniqid() const;
  inline void set_uuniqid(::google::protobuf::uint32 value);

  // optional int32 iGunID = 2;
  inline bool has_igunid() const;
  inline void clear_igunid();
  static const int kIGunIDFieldNumber = 2;
  inline ::google::protobuf::int32 igunid() const;
  inline void set_igunid(::google::protobuf::int32 value);

  // optional int32 iSeat = 3;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 3;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional .POS stTargetPos = 4;
  inline bool has_sttargetpos() const;
  inline void clear_sttargetpos();
  static const int kStTargetPosFieldNumber = 4;
  inline const ::POS& sttargetpos() const;
  inline ::POS* mutable_sttargetpos();
  inline ::POS* release_sttargetpos();
  inline void set_allocated_sttargetpos(::POS* sttargetpos);

  // optional int64 lShootTime = 5;
  inline bool has_lshoottime() const;
  inline void clear_lshoottime();
  static const int kLShootTimeFieldNumber = 5;
  inline ::google::protobuf::int64 lshoottime() const;
  inline void set_lshoottime(::google::protobuf::int64 value);

  // optional uint32 uFishUniqID = 6;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 6;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional bool bIsAimFormFish = 7;
  inline bool has_bisaimformfish() const;
  inline void clear_bisaimformfish();
  static const int kBIsAimFormFishFieldNumber = 7;
  inline bool bisaimformfish() const;
  inline void set_bisaimformfish(bool value);

  // optional int32 iFishIndex = 8;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 8;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BULLETINFO)
 private:
  inline void set_has_uuniqid();
  inline void clear_has_uuniqid();
  inline void set_has_igunid();
  inline void clear_has_igunid();
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_sttargetpos();
  inline void clear_has_sttargetpos();
  inline void set_has_lshoottime();
  inline void clear_has_lshoottime();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_bisaimformfish();
  inline void clear_has_bisaimformfish();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uuniqid_;
  ::google::protobuf::int32 igunid_;
  ::POS* sttargetpos_;
  ::google::protobuf::int32 iseat_;
  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int64 lshoottime_;
  bool bisaimformfish_;
  ::google::protobuf::int32 ifishindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static BULLETINFO* default_instance_;
};
// -------------------------------------------------------------------

class Zone_BulletInfo_Notify : public ::google::protobuf::Message {
 public:
  Zone_BulletInfo_Notify();
  virtual ~Zone_BulletInfo_Notify();

  Zone_BulletInfo_Notify(const Zone_BulletInfo_Notify& from);

  inline Zone_BulletInfo_Notify& operator=(const Zone_BulletInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_BulletInfo_Notify& default_instance();

  void Swap(Zone_BulletInfo_Notify* other);

  // implements Message ----------------------------------------------

  Zone_BulletInfo_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_BulletInfo_Notify& from);
  void MergeFrom(const Zone_BulletInfo_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BULLETINFO stBullets = 1;
  inline int stbullets_size() const;
  inline void clear_stbullets();
  static const int kStBulletsFieldNumber = 1;
  inline const ::BULLETINFO& stbullets(int index) const;
  inline ::BULLETINFO* mutable_stbullets(int index);
  inline ::BULLETINFO* add_stbullets();
  inline const ::google::protobuf::RepeatedPtrField< ::BULLETINFO >&
      stbullets() const;
  inline ::google::protobuf::RepeatedPtrField< ::BULLETINFO >*
      mutable_stbullets();

  // @@protoc_insertion_point(class_scope:Zone_BulletInfo_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BULLETINFO > stbullets_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_BulletInfo_Notify* default_instance_;
};
// -------------------------------------------------------------------

class FORMFISHOUTINFO : public ::google::protobuf::Message {
 public:
  FORMFISHOUTINFO();
  virtual ~FORMFISHOUTINFO();

  FORMFISHOUTINFO(const FORMFISHOUTINFO& from);

  inline FORMFISHOUTINFO& operator=(const FORMFISHOUTINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FORMFISHOUTINFO& default_instance();

  void Swap(FORMFISHOUTINFO* other);

  // implements Message ----------------------------------------------

  FORMFISHOUTINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FORMFISHOUTINFO& from);
  void MergeFrom(const FORMFISHOUTINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iOutID = 1;
  inline bool has_ioutid() const;
  inline void clear_ioutid();
  static const int kIOutIDFieldNumber = 1;
  inline ::google::protobuf::int32 ioutid() const;
  inline void set_ioutid(::google::protobuf::int32 value);

  // optional int32 iFishID = 2;
  inline bool has_ifishid() const;
  inline void clear_ifishid();
  static const int kIFishIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifishid() const;
  inline void set_ifishid(::google::protobuf::int32 value);

  // optional int32 iFishSeqID = 3;
  inline bool has_ifishseqid() const;
  inline void clear_ifishseqid();
  static const int kIFishSeqIDFieldNumber = 3;
  inline ::google::protobuf::int32 ifishseqid() const;
  inline void set_ifishseqid(::google::protobuf::int32 value);

  // optional int32 iTraceID = 4;
  inline bool has_itraceid() const;
  inline void clear_itraceid();
  static const int kITraceIDFieldNumber = 4;
  inline ::google::protobuf::int32 itraceid() const;
  inline void set_itraceid(::google::protobuf::int32 value);

  // optional int64 lBeginTime = 5;
  inline bool has_lbegintime() const;
  inline void clear_lbegintime();
  static const int kLBeginTimeFieldNumber = 5;
  inline ::google::protobuf::int64 lbegintime() const;
  inline void set_lbegintime(::google::protobuf::int64 value);

  // optional int32 iRemaiNum = 6;
  inline bool has_iremainum() const;
  inline void clear_iremainum();
  static const int kIRemaiNumFieldNumber = 6;
  inline ::google::protobuf::int32 iremainum() const;
  inline void set_iremainum(::google::protobuf::int32 value);

  // optional int32 iInterval = 7;
  inline bool has_iinterval() const;
  inline void clear_iinterval();
  static const int kIIntervalFieldNumber = 7;
  inline ::google::protobuf::int32 iinterval() const;
  inline void set_iinterval(::google::protobuf::int32 value);

  // repeated uint64 szAliveFish = 8;
  inline int szalivefish_size() const;
  inline void clear_szalivefish();
  static const int kSzAliveFishFieldNumber = 8;
  inline ::google::protobuf::uint64 szalivefish(int index) const;
  inline void set_szalivefish(int index, ::google::protobuf::uint64 value);
  inline void add_szalivefish(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      szalivefish() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_szalivefish();

  // @@protoc_insertion_point(class_scope:FORMFISHOUTINFO)
 private:
  inline void set_has_ioutid();
  inline void clear_has_ioutid();
  inline void set_has_ifishid();
  inline void clear_has_ifishid();
  inline void set_has_ifishseqid();
  inline void clear_has_ifishseqid();
  inline void set_has_itraceid();
  inline void clear_has_itraceid();
  inline void set_has_lbegintime();
  inline void clear_has_lbegintime();
  inline void set_has_iremainum();
  inline void clear_has_iremainum();
  inline void set_has_iinterval();
  inline void clear_has_iinterval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ioutid_;
  ::google::protobuf::int32 ifishid_;
  ::google::protobuf::int32 ifishseqid_;
  ::google::protobuf::int32 itraceid_;
  ::google::protobuf::int64 lbegintime_;
  ::google::protobuf::int32 iremainum_;
  ::google::protobuf::int32 iinterval_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > szalivefish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static FORMFISHOUTINFO* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FormInfo_Notify : public ::google::protobuf::Message {
 public:
  Zone_FormInfo_Notify();
  virtual ~Zone_FormInfo_Notify();

  Zone_FormInfo_Notify(const Zone_FormInfo_Notify& from);

  inline Zone_FormInfo_Notify& operator=(const Zone_FormInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FormInfo_Notify& default_instance();

  void Swap(Zone_FormInfo_Notify* other);

  // implements Message ----------------------------------------------

  Zone_FormInfo_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FormInfo_Notify& from);
  void MergeFrom(const Zone_FormInfo_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FORMFISHOUTINFO stFormInfos = 1;
  inline int stforminfos_size() const;
  inline void clear_stforminfos();
  static const int kStFormInfosFieldNumber = 1;
  inline const ::FORMFISHOUTINFO& stforminfos(int index) const;
  inline ::FORMFISHOUTINFO* mutable_stforminfos(int index);
  inline ::FORMFISHOUTINFO* add_stforminfos();
  inline const ::google::protobuf::RepeatedPtrField< ::FORMFISHOUTINFO >&
      stforminfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::FORMFISHOUTINFO >*
      mutable_stforminfos();

  // @@protoc_insertion_point(class_scope:Zone_FormInfo_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FORMFISHOUTINFO > stforminfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FormInfo_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ExitFish_Request : public ::google::protobuf::Message {
 public:
  Zone_ExitFish_Request();
  virtual ~Zone_ExitFish_Request();

  Zone_ExitFish_Request(const Zone_ExitFish_Request& from);

  inline Zone_ExitFish_Request& operator=(const Zone_ExitFish_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ExitFish_Request& default_instance();

  void Swap(Zone_ExitFish_Request* other);

  // implements Message ----------------------------------------------

  Zone_ExitFish_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ExitFish_Request& from);
  void MergeFrom(const Zone_ExitFish_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFishRoomID = 1;
  inline bool has_ifishroomid() const;
  inline void clear_ifishroomid();
  static const int kIFishRoomIDFieldNumber = 1;
  inline ::google::protobuf::int32 ifishroomid() const;
  inline void set_ifishroomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ExitFish_Request)
 private:
  inline void set_has_ifishroomid();
  inline void clear_has_ifishroomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifishroomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ExitFish_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ExitFish_Response : public ::google::protobuf::Message {
 public:
  Zone_ExitFish_Response();
  virtual ~Zone_ExitFish_Response();

  Zone_ExitFish_Response(const Zone_ExitFish_Response& from);

  inline Zone_ExitFish_Response& operator=(const Zone_ExitFish_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ExitFish_Response& default_instance();

  void Swap(Zone_ExitFish_Response* other);

  // implements Message ----------------------------------------------

  Zone_ExitFish_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ExitFish_Response& from);
  void MergeFrom(const Zone_ExitFish_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ExitFish_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ExitFish_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ExitFish_Notify : public ::google::protobuf::Message {
 public:
  Zone_ExitFish_Notify();
  virtual ~Zone_ExitFish_Notify();

  Zone_ExitFish_Notify(const Zone_ExitFish_Notify& from);

  inline Zone_ExitFish_Notify& operator=(const Zone_ExitFish_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ExitFish_Notify& default_instance();

  void Swap(Zone_ExitFish_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ExitFish_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ExitFish_Notify& from);
  void MergeFrom(const Zone_ExitFish_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iSeat = 1;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 1;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional bool bForceExit = 2;
  inline bool has_bforceexit() const;
  inline void clear_bforceexit();
  static const int kBForceExitFieldNumber = 2;
  inline bool bforceexit() const;
  inline void set_bforceexit(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ExitFish_Notify)
 private:
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_bforceexit();
  inline void clear_has_bforceexit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iseat_;
  bool bforceexit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ExitFish_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChangeGun_Request : public ::google::protobuf::Message {
 public:
  Zone_ChangeGun_Request();
  virtual ~Zone_ChangeGun_Request();

  Zone_ChangeGun_Request(const Zone_ChangeGun_Request& from);

  inline Zone_ChangeGun_Request& operator=(const Zone_ChangeGun_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChangeGun_Request& default_instance();

  void Swap(Zone_ChangeGun_Request* other);

  // implements Message ----------------------------------------------

  Zone_ChangeGun_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChangeGun_Request& from);
  void MergeFrom(const Zone_ChangeGun_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iNewGunID = 1;
  inline bool has_inewgunid() const;
  inline void clear_inewgunid();
  static const int kINewGunIDFieldNumber = 1;
  inline ::google::protobuf::int32 inewgunid() const;
  inline void set_inewgunid(::google::protobuf::int32 value);

  // optional bool bIsStyle = 2;
  inline bool has_bisstyle() const;
  inline void clear_bisstyle();
  static const int kBIsStyleFieldNumber = 2;
  inline bool bisstyle() const;
  inline void set_bisstyle(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ChangeGun_Request)
 private:
  inline void set_has_inewgunid();
  inline void clear_has_inewgunid();
  inline void set_has_bisstyle();
  inline void clear_has_bisstyle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 inewgunid_;
  bool bisstyle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChangeGun_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChangeGun_Response : public ::google::protobuf::Message {
 public:
  Zone_ChangeGun_Response();
  virtual ~Zone_ChangeGun_Response();

  Zone_ChangeGun_Response(const Zone_ChangeGun_Response& from);

  inline Zone_ChangeGun_Response& operator=(const Zone_ChangeGun_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChangeGun_Response& default_instance();

  void Swap(Zone_ChangeGun_Response* other);

  // implements Message ----------------------------------------------

  Zone_ChangeGun_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChangeGun_Response& from);
  void MergeFrom(const Zone_ChangeGun_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iNewGunID = 2;
  inline bool has_inewgunid() const;
  inline void clear_inewgunid();
  static const int kINewGunIDFieldNumber = 2;
  inline ::google::protobuf::int32 inewgunid() const;
  inline void set_inewgunid(::google::protobuf::int32 value);

  // optional bool bIsStyle = 3;
  inline bool has_bisstyle() const;
  inline void clear_bisstyle();
  static const int kBIsStyleFieldNumber = 3;
  inline bool bisstyle() const;
  inline void set_bisstyle(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ChangeGun_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_inewgunid();
  inline void clear_has_inewgunid();
  inline void set_has_bisstyle();
  inline void clear_has_bisstyle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 inewgunid_;
  bool bisstyle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChangeGun_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChangeGun_Notify : public ::google::protobuf::Message {
 public:
  Zone_ChangeGun_Notify();
  virtual ~Zone_ChangeGun_Notify();

  Zone_ChangeGun_Notify(const Zone_ChangeGun_Notify& from);

  inline Zone_ChangeGun_Notify& operator=(const Zone_ChangeGun_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChangeGun_Notify& default_instance();

  void Swap(Zone_ChangeGun_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ChangeGun_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChangeGun_Notify& from);
  void MergeFrom(const Zone_ChangeGun_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iSeat = 1;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 1;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional int32 iNewGunID = 2;
  inline bool has_inewgunid() const;
  inline void clear_inewgunid();
  static const int kINewGunIDFieldNumber = 2;
  inline ::google::protobuf::int32 inewgunid() const;
  inline void set_inewgunid(::google::protobuf::int32 value);

  // optional bool bIsStyle = 3;
  inline bool has_bisstyle() const;
  inline void clear_bisstyle();
  static const int kBIsStyleFieldNumber = 3;
  inline bool bisstyle() const;
  inline void set_bisstyle(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ChangeGun_Notify)
 private:
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_inewgunid();
  inline void clear_has_inewgunid();
  inline void set_has_bisstyle();
  inline void clear_has_bisstyle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iseat_;
  ::google::protobuf::int32 inewgunid_;
  bool bisstyle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChangeGun_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ShootBullet_Request : public ::google::protobuf::Message {
 public:
  Zone_ShootBullet_Request();
  virtual ~Zone_ShootBullet_Request();

  Zone_ShootBullet_Request(const Zone_ShootBullet_Request& from);

  inline Zone_ShootBullet_Request& operator=(const Zone_ShootBullet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ShootBullet_Request& default_instance();

  void Swap(Zone_ShootBullet_Request* other);

  // implements Message ----------------------------------------------

  Zone_ShootBullet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ShootBullet_Request& from);
  void MergeFrom(const Zone_ShootBullet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 lShootTime = 1;
  inline bool has_lshoottime() const;
  inline void clear_lshoottime();
  static const int kLShootTimeFieldNumber = 1;
  inline ::google::protobuf::int64 lshoottime() const;
  inline void set_lshoottime(::google::protobuf::int64 value);

  // optional int32 iPosX = 2;
  inline bool has_iposx() const;
  inline void clear_iposx();
  static const int kIPosXFieldNumber = 2;
  inline ::google::protobuf::int32 iposx() const;
  inline void set_iposx(::google::protobuf::int32 value);

  // optional int32 iPosY = 3;
  inline bool has_iposy() const;
  inline void clear_iposy();
  static const int kIPosYFieldNumber = 3;
  inline ::google::protobuf::int32 iposy() const;
  inline void set_iposy(::google::protobuf::int32 value);

  // optional bool bAutoShoot = 4;
  inline bool has_bautoshoot() const;
  inline void clear_bautoshoot();
  static const int kBAutoShootFieldNumber = 4;
  inline bool bautoshoot() const;
  inline void set_bautoshoot(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ShootBullet_Request)
 private:
  inline void set_has_lshoottime();
  inline void clear_has_lshoottime();
  inline void set_has_iposx();
  inline void clear_has_iposx();
  inline void set_has_iposy();
  inline void clear_has_iposy();
  inline void set_has_bautoshoot();
  inline void clear_has_bautoshoot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 lshoottime_;
  ::google::protobuf::int32 iposx_;
  ::google::protobuf::int32 iposy_;
  bool bautoshoot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ShootBullet_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ShootBullet_Response : public ::google::protobuf::Message {
 public:
  Zone_ShootBullet_Response();
  virtual ~Zone_ShootBullet_Response();

  Zone_ShootBullet_Response(const Zone_ShootBullet_Response& from);

  inline Zone_ShootBullet_Response& operator=(const Zone_ShootBullet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ShootBullet_Response& default_instance();

  void Swap(Zone_ShootBullet_Response* other);

  // implements Message ----------------------------------------------

  Zone_ShootBullet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ShootBullet_Response& from);
  void MergeFrom(const Zone_ShootBullet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ShootBullet_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ShootBullet_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ShootBullet_Notify : public ::google::protobuf::Message {
 public:
  Zone_ShootBullet_Notify();
  virtual ~Zone_ShootBullet_Notify();

  Zone_ShootBullet_Notify(const Zone_ShootBullet_Notify& from);

  inline Zone_ShootBullet_Notify& operator=(const Zone_ShootBullet_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ShootBullet_Notify& default_instance();

  void Swap(Zone_ShootBullet_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ShootBullet_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ShootBullet_Notify& from);
  void MergeFrom(const Zone_ShootBullet_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uUniqID = 1;
  inline bool has_uuniqid() const;
  inline void clear_uuniqid();
  static const int kUUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uuniqid() const;
  inline void set_uuniqid(::google::protobuf::uint32 value);

  // optional int32 iGunID = 2;
  inline bool has_igunid() const;
  inline void clear_igunid();
  static const int kIGunIDFieldNumber = 2;
  inline ::google::protobuf::int32 igunid() const;
  inline void set_igunid(::google::protobuf::int32 value);

  // optional int32 iSeat = 3;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 3;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional .POS stTargetPos = 4;
  inline bool has_sttargetpos() const;
  inline void clear_sttargetpos();
  static const int kStTargetPosFieldNumber = 4;
  inline const ::POS& sttargetpos() const;
  inline ::POS* mutable_sttargetpos();
  inline ::POS* release_sttargetpos();
  inline void set_allocated_sttargetpos(::POS* sttargetpos);

  // optional int64 lShootTime = 5;
  inline bool has_lshoottime() const;
  inline void clear_lshoottime();
  static const int kLShootTimeFieldNumber = 5;
  inline ::google::protobuf::int64 lshoottime() const;
  inline void set_lshoottime(::google::protobuf::int64 value);

  // optional uint32 uFishUniqID = 6;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 6;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional bool bIsAimFormFish = 7;
  inline bool has_bisaimformfish() const;
  inline void clear_bisaimformfish();
  static const int kBIsAimFormFishFieldNumber = 7;
  inline bool bisaimformfish() const;
  inline void set_bisaimformfish(bool value);

  // optional int32 iFishIndex = 8;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 8;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // optional bool bIsWildBullet = 9;
  inline bool has_biswildbullet() const;
  inline void clear_biswildbullet();
  static const int kBIsWildBulletFieldNumber = 9;
  inline bool biswildbullet() const;
  inline void set_biswildbullet(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ShootBullet_Notify)
 private:
  inline void set_has_uuniqid();
  inline void clear_has_uuniqid();
  inline void set_has_igunid();
  inline void clear_has_igunid();
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_sttargetpos();
  inline void clear_has_sttargetpos();
  inline void set_has_lshoottime();
  inline void clear_has_lshoottime();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_bisaimformfish();
  inline void clear_has_bisaimformfish();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();
  inline void set_has_biswildbullet();
  inline void clear_has_biswildbullet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uuniqid_;
  ::google::protobuf::int32 igunid_;
  ::POS* sttargetpos_;
  ::google::protobuf::int32 iseat_;
  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int64 lshoottime_;
  ::google::protobuf::int32 ifishindex_;
  bool bisaimformfish_;
  bool biswildbullet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ShootBullet_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_HitFish_Request : public ::google::protobuf::Message {
 public:
  Zone_HitFish_Request();
  virtual ~Zone_HitFish_Request();

  Zone_HitFish_Request(const Zone_HitFish_Request& from);

  inline Zone_HitFish_Request& operator=(const Zone_HitFish_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_HitFish_Request& default_instance();

  void Swap(Zone_HitFish_Request* other);

  // implements Message ----------------------------------------------

  Zone_HitFish_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_HitFish_Request& from);
  void MergeFrom(const Zone_HitFish_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 lHitTime = 1;
  inline bool has_lhittime() const;
  inline void clear_lhittime();
  static const int kLHitTimeFieldNumber = 1;
  inline ::google::protobuf::int64 lhittime() const;
  inline void set_lhittime(::google::protobuf::int64 value);

  // optional uint32 uBulletUniqID = 2;
  inline bool has_ubulletuniqid() const;
  inline void clear_ubulletuniqid();
  static const int kUBulletUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 ubulletuniqid() const;
  inline void set_ubulletuniqid(::google::protobuf::uint32 value);

  // optional uint32 uFishUniqID = 3;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 3;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional int32 iFishIndex = 4;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 4;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_HitFish_Request)
 private:
  inline void set_has_lhittime();
  inline void clear_has_lhittime();
  inline void set_has_ubulletuniqid();
  inline void clear_has_ubulletuniqid();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 lhittime_;
  ::google::protobuf::uint32 ubulletuniqid_;
  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int32 ifishindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_HitFish_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_HitFish_Response : public ::google::protobuf::Message {
 public:
  Zone_HitFish_Response();
  virtual ~Zone_HitFish_Response();

  Zone_HitFish_Response(const Zone_HitFish_Response& from);

  inline Zone_HitFish_Response& operator=(const Zone_HitFish_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_HitFish_Response& default_instance();

  void Swap(Zone_HitFish_Response* other);

  // implements Message ----------------------------------------------

  Zone_HitFish_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_HitFish_Response& from);
  void MergeFrom(const Zone_HitFish_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_HitFish_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_HitFish_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_HitFish_Notify : public ::google::protobuf::Message {
 public:
  Zone_HitFish_Notify();
  virtual ~Zone_HitFish_Notify();

  Zone_HitFish_Notify(const Zone_HitFish_Notify& from);

  inline Zone_HitFish_Notify& operator=(const Zone_HitFish_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_HitFish_Notify& default_instance();

  void Swap(Zone_HitFish_Notify* other);

  // implements Message ----------------------------------------------

  Zone_HitFish_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_HitFish_Notify& from);
  void MergeFrom(const Zone_HitFish_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uBulletUniqID = 1;
  inline bool has_ubulletuniqid() const;
  inline void clear_ubulletuniqid();
  static const int kUBulletUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 ubulletuniqid() const;
  inline void set_ubulletuniqid(::google::protobuf::uint32 value);

  // optional uint32 uFishUniqID = 2;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional int32 iSeat = 3;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 3;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional int32 iRewardCoins = 4;
  inline bool has_irewardcoins() const;
  inline void clear_irewardcoins();
  static const int kIRewardCoinsFieldNumber = 4;
  inline ::google::protobuf::int32 irewardcoins() const;
  inline void set_irewardcoins(::google::protobuf::int32 value);

  // optional bool bIsForm = 5;
  inline bool has_bisform() const;
  inline void clear_bisform();
  static const int kBIsFormFieldNumber = 5;
  inline bool bisform() const;
  inline void set_bisform(bool value);

  // optional int32 iFishIndex = 6;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 6;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // optional int32 iMultiFish = 7;
  inline bool has_imultifish() const;
  inline void clear_imultifish();
  static const int kIMultiFishFieldNumber = 7;
  inline ::google::protobuf::int32 imultifish() const;
  inline void set_imultifish(::google::protobuf::int32 value);

  // optional int32 iBulletLiveTime = 8;
  inline bool has_ibulletlivetime() const;
  inline void clear_ibulletlivetime();
  static const int kIBulletLiveTimeFieldNumber = 8;
  inline ::google::protobuf::int32 ibulletlivetime() const;
  inline void set_ibulletlivetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_HitFish_Notify)
 private:
  inline void set_has_ubulletuniqid();
  inline void clear_has_ubulletuniqid();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_irewardcoins();
  inline void clear_has_irewardcoins();
  inline void set_has_bisform();
  inline void clear_has_bisform();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();
  inline void set_has_imultifish();
  inline void clear_has_imultifish();
  inline void set_has_ibulletlivetime();
  inline void clear_has_ibulletlivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ubulletuniqid_;
  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int32 iseat_;
  ::google::protobuf::int32 irewardcoins_;
  bool bisform_;
  ::google::protobuf::int32 ifishindex_;
  ::google::protobuf::int32 imultifish_;
  ::google::protobuf::int32 ibulletlivetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_HitFish_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_HitFormFish_Request : public ::google::protobuf::Message {
 public:
  Zone_HitFormFish_Request();
  virtual ~Zone_HitFormFish_Request();

  Zone_HitFormFish_Request(const Zone_HitFormFish_Request& from);

  inline Zone_HitFormFish_Request& operator=(const Zone_HitFormFish_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_HitFormFish_Request& default_instance();

  void Swap(Zone_HitFormFish_Request* other);

  // implements Message ----------------------------------------------

  Zone_HitFormFish_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_HitFormFish_Request& from);
  void MergeFrom(const Zone_HitFormFish_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uBulletUniqID = 1;
  inline bool has_ubulletuniqid() const;
  inline void clear_ubulletuniqid();
  static const int kUBulletUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 ubulletuniqid() const;
  inline void set_ubulletuniqid(::google::protobuf::uint32 value);

  // optional int32 iFormOutID = 2;
  inline bool has_iformoutid() const;
  inline void clear_iformoutid();
  static const int kIFormOutIDFieldNumber = 2;
  inline ::google::protobuf::int32 iformoutid() const;
  inline void set_iformoutid(::google::protobuf::int32 value);

  // optional int32 iFishIndex = 3;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 3;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // optional int64 lHitTime = 4;
  inline bool has_lhittime() const;
  inline void clear_lhittime();
  static const int kLHitTimeFieldNumber = 4;
  inline ::google::protobuf::int64 lhittime() const;
  inline void set_lhittime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Zone_HitFormFish_Request)
 private:
  inline void set_has_ubulletuniqid();
  inline void clear_has_ubulletuniqid();
  inline void set_has_iformoutid();
  inline void clear_has_iformoutid();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();
  inline void set_has_lhittime();
  inline void clear_has_lhittime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ubulletuniqid_;
  ::google::protobuf::int32 iformoutid_;
  ::google::protobuf::int64 lhittime_;
  ::google::protobuf::int32 ifishindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_HitFormFish_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_HitFormFish_Response : public ::google::protobuf::Message {
 public:
  Zone_HitFormFish_Response();
  virtual ~Zone_HitFormFish_Response();

  Zone_HitFormFish_Response(const Zone_HitFormFish_Response& from);

  inline Zone_HitFormFish_Response& operator=(const Zone_HitFormFish_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_HitFormFish_Response& default_instance();

  void Swap(Zone_HitFormFish_Response* other);

  // implements Message ----------------------------------------------

  Zone_HitFormFish_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_HitFormFish_Response& from);
  void MergeFrom(const Zone_HitFormFish_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_HitFormFish_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_HitFormFish_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_BoomFishInfo_Notify : public ::google::protobuf::Message {
 public:
  Zone_BoomFishInfo_Notify();
  virtual ~Zone_BoomFishInfo_Notify();

  Zone_BoomFishInfo_Notify(const Zone_BoomFishInfo_Notify& from);

  inline Zone_BoomFishInfo_Notify& operator=(const Zone_BoomFishInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_BoomFishInfo_Notify& default_instance();

  void Swap(Zone_BoomFishInfo_Notify* other);

  // implements Message ----------------------------------------------

  Zone_BoomFishInfo_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_BoomFishInfo_Notify& from);
  void MergeFrom(const Zone_BoomFishInfo_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uFishUniqIDs = 1;
  inline int ufishuniqids_size() const;
  inline void clear_ufishuniqids();
  static const int kUFishUniqIDsFieldNumber = 1;
  inline ::google::protobuf::uint32 ufishuniqids(int index) const;
  inline void set_ufishuniqids(int index, ::google::protobuf::uint32 value);
  inline void add_ufishuniqids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ufishuniqids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ufishuniqids();

  // repeated int32 uSmallFishIndex = 2;
  inline int usmallfishindex_size() const;
  inline void clear_usmallfishindex();
  static const int kUSmallFishIndexFieldNumber = 2;
  inline ::google::protobuf::int32 usmallfishindex(int index) const;
  inline void set_usmallfishindex(int index, ::google::protobuf::int32 value);
  inline void add_usmallfishindex(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      usmallfishindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_usmallfishindex();

  // repeated uint32 uFormUniqIDs = 3;
  inline int uformuniqids_size() const;
  inline void clear_uformuniqids();
  static const int kUFormUniqIDsFieldNumber = 3;
  inline ::google::protobuf::uint32 uformuniqids(int index) const;
  inline void set_uformuniqids(int index, ::google::protobuf::uint32 value);
  inline void add_uformuniqids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uformuniqids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uformuniqids();

  // optional int32 iSeat = 4;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 4;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_BoomFishInfo_Notify)
 private:
  inline void set_has_iseat();
  inline void clear_has_iseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ufishuniqids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > usmallfishindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uformuniqids_;
  ::google::protobuf::int32 iseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_BoomFishInfo_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Lottery_Request : public ::google::protobuf::Message {
 public:
  Zone_Lottery_Request();
  virtual ~Zone_Lottery_Request();

  Zone_Lottery_Request(const Zone_Lottery_Request& from);

  inline Zone_Lottery_Request& operator=(const Zone_Lottery_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Lottery_Request& default_instance();

  void Swap(Zone_Lottery_Request* other);

  // implements Message ----------------------------------------------

  Zone_Lottery_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Lottery_Request& from);
  void MergeFrom(const Zone_Lottery_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Zone_Lottery_Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Lottery_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Lottery_Response : public ::google::protobuf::Message {
 public:
  Zone_Lottery_Response();
  virtual ~Zone_Lottery_Response();

  Zone_Lottery_Response(const Zone_Lottery_Response& from);

  inline Zone_Lottery_Response& operator=(const Zone_Lottery_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Lottery_Response& default_instance();

  void Swap(Zone_Lottery_Response* other);

  // implements Message ----------------------------------------------

  Zone_Lottery_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Lottery_Response& from);
  void MergeFrom(const Zone_Lottery_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iLotteryItemID = 2;
  inline bool has_ilotteryitemid() const;
  inline void clear_ilotteryitemid();
  static const int kILotteryItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 ilotteryitemid() const;
  inline void set_ilotteryitemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_Lottery_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ilotteryitemid();
  inline void clear_has_ilotteryitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 ilotteryitemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Lottery_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_AddTicket_Notify : public ::google::protobuf::Message {
 public:
  Zone_AddTicket_Notify();
  virtual ~Zone_AddTicket_Notify();

  Zone_AddTicket_Notify(const Zone_AddTicket_Notify& from);

  inline Zone_AddTicket_Notify& operator=(const Zone_AddTicket_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_AddTicket_Notify& default_instance();

  void Swap(Zone_AddTicket_Notify* other);

  // implements Message ----------------------------------------------

  Zone_AddTicket_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_AddTicket_Notify& from);
  void MergeFrom(const Zone_AddTicket_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiUin = 1;
  inline bool has_uiuin() const;
  inline void clear_uiuin();
  static const int kUiUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uiuin() const;
  inline void set_uiuin(::google::protobuf::uint32 value);

  // optional uint32 uFishUniqID = 2;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional bool bIsFormFish = 3;
  inline bool has_bisformfish() const;
  inline void clear_bisformfish();
  static const int kBIsFormFishFieldNumber = 3;
  inline bool bisformfish() const;
  inline void set_bisformfish(bool value);

  // optional int32 iAddNum = 4;
  inline bool has_iaddnum() const;
  inline void clear_iaddnum();
  static const int kIAddNumFieldNumber = 4;
  inline ::google::protobuf::int32 iaddnum() const;
  inline void set_iaddnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_AddTicket_Notify)
 private:
  inline void set_has_uiuin();
  inline void clear_has_uiuin();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_bisformfish();
  inline void clear_has_bisformfish();
  inline void set_has_iaddnum();
  inline void clear_has_iaddnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiuin_;
  ::google::protobuf::uint32 ufishuniqid_;
  bool bisformfish_;
  ::google::protobuf::int32 iaddnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_AddTicket_Notify* default_instance_;
};
// -------------------------------------------------------------------

class QuestChange : public ::google::protobuf::Message {
 public:
  QuestChange();
  virtual ~QuestChange();

  QuestChange(const QuestChange& from);

  inline QuestChange& operator=(const QuestChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestChange& default_instance();

  void Swap(QuestChange* other);

  // implements Message ----------------------------------------------

  QuestChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestChange& from);
  void MergeFrom(const QuestChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iQuestID = 1;
  inline bool has_iquestid() const;
  inline void clear_iquestid();
  static const int kIQuestIDFieldNumber = 1;
  inline ::google::protobuf::int32 iquestid() const;
  inline void set_iquestid(::google::protobuf::int32 value);

  // optional int32 iNum = 2;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 2;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // optional int32 iChangeType = 3;
  inline bool has_ichangetype() const;
  inline void clear_ichangetype();
  static const int kIChangeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 ichangetype() const;
  inline void set_ichangetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestChange)
 private:
  inline void set_has_iquestid();
  inline void clear_has_iquestid();
  inline void set_has_inum();
  inline void clear_has_inum();
  inline void set_has_ichangetype();
  inline void clear_has_ichangetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iquestid_;
  ::google::protobuf::int32 inum_;
  ::google::protobuf::int32 ichangetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static QuestChange* default_instance_;
};
// -------------------------------------------------------------------

class Zone_QuestChange_Notify : public ::google::protobuf::Message {
 public:
  Zone_QuestChange_Notify();
  virtual ~Zone_QuestChange_Notify();

  Zone_QuestChange_Notify(const Zone_QuestChange_Notify& from);

  inline Zone_QuestChange_Notify& operator=(const Zone_QuestChange_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_QuestChange_Notify& default_instance();

  void Swap(Zone_QuestChange_Notify* other);

  // implements Message ----------------------------------------------

  Zone_QuestChange_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_QuestChange_Notify& from);
  void MergeFrom(const Zone_QuestChange_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .QuestChange stChanges = 1;
  inline int stchanges_size() const;
  inline void clear_stchanges();
  static const int kStChangesFieldNumber = 1;
  inline const ::QuestChange& stchanges(int index) const;
  inline ::QuestChange* mutable_stchanges(int index);
  inline ::QuestChange* add_stchanges();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestChange >&
      stchanges() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestChange >*
      mutable_stchanges();

  // optional int32 iAdventNum = 2;
  inline bool has_iadventnum() const;
  inline void clear_iadventnum();
  static const int kIAdventNumFieldNumber = 2;
  inline ::google::protobuf::int32 iadventnum() const;
  inline void set_iadventnum(::google::protobuf::int32 value);

  // optional int32 iAdventEndTime = 3;
  inline bool has_iadventendtime() const;
  inline void clear_iadventendtime();
  static const int kIAdventEndTimeFieldNumber = 3;
  inline ::google::protobuf::int32 iadventendtime() const;
  inline void set_iadventendtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_QuestChange_Notify)
 private:
  inline void set_has_iadventnum();
  inline void clear_has_iadventnum();
  inline void set_has_iadventendtime();
  inline void clear_has_iadventendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::QuestChange > stchanges_;
  ::google::protobuf::int32 iadventnum_;
  ::google::protobuf::int32 iadventendtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_QuestChange_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FinQuest_Request : public ::google::protobuf::Message {
 public:
  Zone_FinQuest_Request();
  virtual ~Zone_FinQuest_Request();

  Zone_FinQuest_Request(const Zone_FinQuest_Request& from);

  inline Zone_FinQuest_Request& operator=(const Zone_FinQuest_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FinQuest_Request& default_instance();

  void Swap(Zone_FinQuest_Request* other);

  // implements Message ----------------------------------------------

  Zone_FinQuest_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FinQuest_Request& from);
  void MergeFrom(const Zone_FinQuest_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iQuestID = 1;
  inline bool has_iquestid() const;
  inline void clear_iquestid();
  static const int kIQuestIDFieldNumber = 1;
  inline ::google::protobuf::int32 iquestid() const;
  inline void set_iquestid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_FinQuest_Request)
 private:
  inline void set_has_iquestid();
  inline void clear_has_iquestid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iquestid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FinQuest_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FinQuest_Response : public ::google::protobuf::Message {
 public:
  Zone_FinQuest_Response();
  virtual ~Zone_FinQuest_Response();

  Zone_FinQuest_Response(const Zone_FinQuest_Response& from);

  inline Zone_FinQuest_Response& operator=(const Zone_FinQuest_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FinQuest_Response& default_instance();

  void Swap(Zone_FinQuest_Response* other);

  // implements Message ----------------------------------------------

  Zone_FinQuest_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FinQuest_Response& from);
  void MergeFrom(const Zone_FinQuest_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_FinQuest_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FinQuest_Response* default_instance_;
};
// -------------------------------------------------------------------

class RewardInfo : public ::google::protobuf::Message {
 public:
  RewardInfo();
  virtual ~RewardInfo();

  RewardInfo(const RewardInfo& from);

  inline RewardInfo& operator=(const RewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardInfo& default_instance();

  void Swap(RewardInfo* other);

  // implements Message ----------------------------------------------

  RewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardInfo& from);
  void MergeFrom(const RewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iType = 1;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 1;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional int32 iID = 2;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIDFieldNumber = 2;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // optional int32 iNum = 3;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 3;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardInfo)
 private:
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_inum();
  inline void clear_has_inum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itype_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 inum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static RewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetReward_Notify : public ::google::protobuf::Message {
 public:
  Zone_GetReward_Notify();
  virtual ~Zone_GetReward_Notify();

  Zone_GetReward_Notify(const Zone_GetReward_Notify& from);

  inline Zone_GetReward_Notify& operator=(const Zone_GetReward_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetReward_Notify& default_instance();

  void Swap(Zone_GetReward_Notify* other);

  // implements Message ----------------------------------------------

  Zone_GetReward_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetReward_Notify& from);
  void MergeFrom(const Zone_GetReward_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iQuestID = 1;
  inline bool has_iquestid() const;
  inline void clear_iquestid();
  static const int kIQuestIDFieldNumber = 1;
  inline ::google::protobuf::int32 iquestid() const;
  inline void set_iquestid(::google::protobuf::int32 value);

  // repeated .RewardInfo stRewards = 2;
  inline int strewards_size() const;
  inline void clear_strewards();
  static const int kStRewardsFieldNumber = 2;
  inline const ::RewardInfo& strewards(int index) const;
  inline ::RewardInfo* mutable_strewards(int index);
  inline ::RewardInfo* add_strewards();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardInfo >&
      strewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardInfo >*
      mutable_strewards();

  // @@protoc_insertion_point(class_scope:Zone_GetReward_Notify)
 private:
  inline void set_has_iquestid();
  inline void clear_has_iquestid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RewardInfo > strewards_;
  ::google::protobuf::int32 iquestid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetReward_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SetExchange_Request : public ::google::protobuf::Message {
 public:
  Zone_SetExchange_Request();
  virtual ~Zone_SetExchange_Request();

  Zone_SetExchange_Request(const Zone_SetExchange_Request& from);

  inline Zone_SetExchange_Request& operator=(const Zone_SetExchange_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SetExchange_Request& default_instance();

  void Swap(Zone_SetExchange_Request* other);

  // implements Message ----------------------------------------------

  Zone_SetExchange_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SetExchange_Request& from);
  void MergeFrom(const Zone_SetExchange_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ExchangeUser stUserInfo = 1;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 1;
  inline const ::ExchangeUser& stuserinfo() const;
  inline ::ExchangeUser* mutable_stuserinfo();
  inline ::ExchangeUser* release_stuserinfo();
  inline void set_allocated_stuserinfo(::ExchangeUser* stuserinfo);

  // @@protoc_insertion_point(class_scope:Zone_SetExchange_Request)
 private:
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ExchangeUser* stuserinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_SetExchange_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SetExchange_Response : public ::google::protobuf::Message {
 public:
  Zone_SetExchange_Response();
  virtual ~Zone_SetExchange_Response();

  Zone_SetExchange_Response(const Zone_SetExchange_Response& from);

  inline Zone_SetExchange_Response& operator=(const Zone_SetExchange_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SetExchange_Response& default_instance();

  void Swap(Zone_SetExchange_Response* other);

  // implements Message ----------------------------------------------

  Zone_SetExchange_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SetExchange_Response& from);
  void MergeFrom(const Zone_SetExchange_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .ExchangeUser stUserInfo = 2;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 2;
  inline const ::ExchangeUser& stuserinfo() const;
  inline ::ExchangeUser* mutable_stuserinfo();
  inline ::ExchangeUser* release_stuserinfo();
  inline void set_allocated_stuserinfo(::ExchangeUser* stuserinfo);

  // @@protoc_insertion_point(class_scope:Zone_SetExchange_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ExchangeUser* stuserinfo_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_SetExchange_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ExchangeItem_Request : public ::google::protobuf::Message {
 public:
  Zone_ExchangeItem_Request();
  virtual ~Zone_ExchangeItem_Request();

  Zone_ExchangeItem_Request(const Zone_ExchangeItem_Request& from);

  inline Zone_ExchangeItem_Request& operator=(const Zone_ExchangeItem_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ExchangeItem_Request& default_instance();

  void Swap(Zone_ExchangeItem_Request* other);

  // implements Message ----------------------------------------------

  Zone_ExchangeItem_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ExchangeItem_Request& from);
  void MergeFrom(const Zone_ExchangeItem_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iExchangeID = 1;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 1;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ExchangeItem_Request)
 private:
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iexchangeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ExchangeItem_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ExchangeItem_Response : public ::google::protobuf::Message {
 public:
  Zone_ExchangeItem_Response();
  virtual ~Zone_ExchangeItem_Response();

  Zone_ExchangeItem_Response(const Zone_ExchangeItem_Response& from);

  inline Zone_ExchangeItem_Response& operator=(const Zone_ExchangeItem_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ExchangeItem_Response& default_instance();

  void Swap(Zone_ExchangeItem_Response* other);

  // implements Message ----------------------------------------------

  Zone_ExchangeItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ExchangeItem_Response& from);
  void MergeFrom(const Zone_ExchangeItem_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .ExchangeOrder stOrder = 2;
  inline bool has_storder() const;
  inline void clear_storder();
  static const int kStOrderFieldNumber = 2;
  inline const ::ExchangeOrder& storder() const;
  inline ::ExchangeOrder* mutable_storder();
  inline ::ExchangeOrder* release_storder();
  inline void set_allocated_storder(::ExchangeOrder* storder);

  // @@protoc_insertion_point(class_scope:Zone_ExchangeItem_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_storder();
  inline void clear_has_storder();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ExchangeOrder* storder_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ExchangeItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_NewMailInfo_Notify : public ::google::protobuf::Message {
 public:
  Zone_NewMailInfo_Notify();
  virtual ~Zone_NewMailInfo_Notify();

  Zone_NewMailInfo_Notify(const Zone_NewMailInfo_Notify& from);

  inline Zone_NewMailInfo_Notify& operator=(const Zone_NewMailInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_NewMailInfo_Notify& default_instance();

  void Swap(Zone_NewMailInfo_Notify* other);

  // implements Message ----------------------------------------------

  Zone_NewMailInfo_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_NewMailInfo_Notify& from);
  void MergeFrom(const Zone_NewMailInfo_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OneMailInfo stMailInfo = 1;
  inline bool has_stmailinfo() const;
  inline void clear_stmailinfo();
  static const int kStMailInfoFieldNumber = 1;
  inline const ::OneMailInfo& stmailinfo() const;
  inline ::OneMailInfo* mutable_stmailinfo();
  inline ::OneMailInfo* release_stmailinfo();
  inline void set_allocated_stmailinfo(::OneMailInfo* stmailinfo);

  // repeated uint32 uDelUniqIDs = 2;
  inline int udeluniqids_size() const;
  inline void clear_udeluniqids();
  static const int kUDelUniqIDsFieldNumber = 2;
  inline ::google::protobuf::uint32 udeluniqids(int index) const;
  inline void set_udeluniqids(int index, ::google::protobuf::uint32 value);
  inline void add_udeluniqids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      udeluniqids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_udeluniqids();

  // @@protoc_insertion_point(class_scope:Zone_NewMailInfo_Notify)
 private:
  inline void set_has_stmailinfo();
  inline void clear_has_stmailinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::OneMailInfo* stmailinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > udeluniqids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_NewMailInfo_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_MailOpera_Request : public ::google::protobuf::Message {
 public:
  Zone_MailOpera_Request();
  virtual ~Zone_MailOpera_Request();

  Zone_MailOpera_Request(const Zone_MailOpera_Request& from);

  inline Zone_MailOpera_Request& operator=(const Zone_MailOpera_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_MailOpera_Request& default_instance();

  void Swap(Zone_MailOpera_Request* other);

  // implements Message ----------------------------------------------

  Zone_MailOpera_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_MailOpera_Request& from);
  void MergeFrom(const Zone_MailOpera_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uUniqID = 1;
  inline bool has_uuniqid() const;
  inline void clear_uuniqid();
  static const int kUUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uuniqid() const;
  inline void set_uuniqid(::google::protobuf::uint32 value);

  // optional int32 iOperaType = 2;
  inline bool has_ioperatype() const;
  inline void clear_ioperatype();
  static const int kIOperaTypeFieldNumber = 2;
  inline ::google::protobuf::int32 ioperatype() const;
  inline void set_ioperatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_MailOpera_Request)
 private:
  inline void set_has_uuniqid();
  inline void clear_has_uuniqid();
  inline void set_has_ioperatype();
  inline void clear_has_ioperatype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uuniqid_;
  ::google::protobuf::int32 ioperatype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_MailOpera_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_MailOpera_Response : public ::google::protobuf::Message {
 public:
  Zone_MailOpera_Response();
  virtual ~Zone_MailOpera_Response();

  Zone_MailOpera_Response(const Zone_MailOpera_Response& from);

  inline Zone_MailOpera_Response& operator=(const Zone_MailOpera_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_MailOpera_Response& default_instance();

  void Swap(Zone_MailOpera_Response* other);

  // implements Message ----------------------------------------------

  Zone_MailOpera_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_MailOpera_Response& from);
  void MergeFrom(const Zone_MailOpera_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uUniqID = 2;
  inline bool has_uuniqid() const;
  inline void clear_uuniqid();
  static const int kUUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 uuniqid() const;
  inline void set_uuniqid(::google::protobuf::uint32 value);

  // optional int32 iOperaType = 4;
  inline bool has_ioperatype() const;
  inline void clear_ioperatype();
  static const int kIOperaTypeFieldNumber = 4;
  inline ::google::protobuf::int32 ioperatype() const;
  inline void set_ioperatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_MailOpera_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uuniqid();
  inline void clear_has_uuniqid();
  inline void set_has_ioperatype();
  inline void clear_has_ioperatype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uuniqid_;
  ::google::protobuf::int32 ioperatype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_MailOpera_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetLivness_Request : public ::google::protobuf::Message {
 public:
  Zone_GetLivness_Request();
  virtual ~Zone_GetLivness_Request();

  Zone_GetLivness_Request(const Zone_GetLivness_Request& from);

  inline Zone_GetLivness_Request& operator=(const Zone_GetLivness_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetLivness_Request& default_instance();

  void Swap(Zone_GetLivness_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetLivness_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetLivness_Request& from);
  void MergeFrom(const Zone_GetLivness_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iLivnessRewardID = 1;
  inline bool has_ilivnessrewardid() const;
  inline void clear_ilivnessrewardid();
  static const int kILivnessRewardIDFieldNumber = 1;
  inline ::google::protobuf::int32 ilivnessrewardid() const;
  inline void set_ilivnessrewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetLivness_Request)
 private:
  inline void set_has_ilivnessrewardid();
  inline void clear_has_ilivnessrewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilivnessrewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetLivness_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetLivness_Response : public ::google::protobuf::Message {
 public:
  Zone_GetLivness_Response();
  virtual ~Zone_GetLivness_Response();

  Zone_GetLivness_Response(const Zone_GetLivness_Response& from);

  inline Zone_GetLivness_Response& operator=(const Zone_GetLivness_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetLivness_Response& default_instance();

  void Swap(Zone_GetLivness_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetLivness_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetLivness_Response& from);
  void MergeFrom(const Zone_GetLivness_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iLivnessRewardID = 2;
  inline bool has_ilivnessrewardid() const;
  inline void clear_ilivnessrewardid();
  static const int kILivnessRewardIDFieldNumber = 2;
  inline ::google::protobuf::int32 ilivnessrewardid() const;
  inline void set_ilivnessrewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetLivness_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ilivnessrewardid();
  inline void clear_has_ilivnessrewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 ilivnessrewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetLivness_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetRankInfo_Request : public ::google::protobuf::Message {
 public:
  Zone_GetRankInfo_Request();
  virtual ~Zone_GetRankInfo_Request();

  Zone_GetRankInfo_Request(const Zone_GetRankInfo_Request& from);

  inline Zone_GetRankInfo_Request& operator=(const Zone_GetRankInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetRankInfo_Request& default_instance();

  void Swap(Zone_GetRankInfo_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetRankInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetRankInfo_Request& from);
  void MergeFrom(const Zone_GetRankInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iType = 1;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 1;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional int32 iFromIndex = 2;
  inline bool has_ifromindex() const;
  inline void clear_ifromindex();
  static const int kIFromIndexFieldNumber = 2;
  inline ::google::protobuf::int32 ifromindex() const;
  inline void set_ifromindex(::google::protobuf::int32 value);

  // optional int32 iNum = 3;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 3;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // optional bool bLastRank = 4;
  inline bool has_blastrank() const;
  inline void clear_blastrank();
  static const int kBLastRankFieldNumber = 4;
  inline bool blastrank() const;
  inline void set_blastrank(bool value);

  // @@protoc_insertion_point(class_scope:Zone_GetRankInfo_Request)
 private:
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_ifromindex();
  inline void clear_has_ifromindex();
  inline void set_has_inum();
  inline void clear_has_inum();
  inline void set_has_blastrank();
  inline void clear_has_blastrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itype_;
  ::google::protobuf::int32 ifromindex_;
  ::google::protobuf::int32 inum_;
  bool blastrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetRankInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetRankInfo_Response : public ::google::protobuf::Message {
 public:
  Zone_GetRankInfo_Response();
  virtual ~Zone_GetRankInfo_Response();

  Zone_GetRankInfo_Response(const Zone_GetRankInfo_Response& from);

  inline Zone_GetRankInfo_Response& operator=(const Zone_GetRankInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetRankInfo_Response& default_instance();

  void Swap(Zone_GetRankInfo_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetRankInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetRankInfo_Response& from);
  void MergeFrom(const Zone_GetRankInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // repeated .RankInfo stRanks = 3;
  inline int stranks_size() const;
  inline void clear_stranks();
  static const int kStRanksFieldNumber = 3;
  inline const ::RankInfo& stranks(int index) const;
  inline ::RankInfo* mutable_stranks(int index);
  inline ::RankInfo* add_stranks();
  inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
      stranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
      mutable_stranks();

  // optional bool bLastRank = 4;
  inline bool has_blastrank() const;
  inline void clear_blastrank();
  static const int kBLastRankFieldNumber = 4;
  inline bool blastrank() const;
  inline void set_blastrank(bool value);

  // optional int32 iMyRank = 5;
  inline bool has_imyrank() const;
  inline void clear_imyrank();
  static const int kIMyRankFieldNumber = 5;
  inline ::google::protobuf::int32 imyrank() const;
  inline void set_imyrank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetRankInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_blastrank();
  inline void clear_has_blastrank();
  inline void set_has_imyrank();
  inline void clear_has_imyrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 itype_;
  ::google::protobuf::RepeatedPtrField< ::RankInfo > stranks_;
  bool blastrank_;
  ::google::protobuf::int32 imyrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetRankInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UseSkill_Request : public ::google::protobuf::Message {
 public:
  Zone_UseSkill_Request();
  virtual ~Zone_UseSkill_Request();

  Zone_UseSkill_Request(const Zone_UseSkill_Request& from);

  inline Zone_UseSkill_Request& operator=(const Zone_UseSkill_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UseSkill_Request& default_instance();

  void Swap(Zone_UseSkill_Request* other);

  // implements Message ----------------------------------------------

  Zone_UseSkill_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UseSkill_Request& from);
  void MergeFrom(const Zone_UseSkill_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iType = 1;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 1;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // repeated uint32 uFishUniqIDs = 3;
  inline int ufishuniqids_size() const;
  inline void clear_ufishuniqids();
  static const int kUFishUniqIDsFieldNumber = 3;
  inline ::google::protobuf::uint32 ufishuniqids(int index) const;
  inline void set_ufishuniqids(int index, ::google::protobuf::uint32 value);
  inline void add_ufishuniqids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ufishuniqids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ufishuniqids();

  // optional .POS stWarHeadPos = 4;
  inline bool has_stwarheadpos() const;
  inline void clear_stwarheadpos();
  static const int kStWarHeadPosFieldNumber = 4;
  inline const ::POS& stwarheadpos() const;
  inline ::POS* mutable_stwarheadpos();
  inline ::POS* release_stwarheadpos();
  inline void set_allocated_stwarheadpos(::POS* stwarheadpos);

  // @@protoc_insertion_point(class_scope:Zone_UseSkill_Request)
 private:
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_stwarheadpos();
  inline void clear_has_stwarheadpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itype_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ufishuniqids_;
  ::POS* stwarheadpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UseSkill_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UseSkill_Response : public ::google::protobuf::Message {
 public:
  Zone_UseSkill_Response();
  virtual ~Zone_UseSkill_Response();

  Zone_UseSkill_Response(const Zone_UseSkill_Response& from);

  inline Zone_UseSkill_Response& operator=(const Zone_UseSkill_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UseSkill_Response& default_instance();

  void Swap(Zone_UseSkill_Response* other);

  // implements Message ----------------------------------------------

  Zone_UseSkill_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UseSkill_Response& from);
  void MergeFrom(const Zone_UseSkill_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UseSkill_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_itype();
  inline void clear_has_itype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 itype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UseSkill_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UseSkill_Notify : public ::google::protobuf::Message {
 public:
  Zone_UseSkill_Notify();
  virtual ~Zone_UseSkill_Notify();

  Zone_UseSkill_Notify(const Zone_UseSkill_Notify& from);

  inline Zone_UseSkill_Notify& operator=(const Zone_UseSkill_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UseSkill_Notify& default_instance();

  void Swap(Zone_UseSkill_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UseSkill_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UseSkill_Notify& from);
  void MergeFrom(const Zone_UseSkill_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional bool bIsOpen = 3;
  inline bool has_bisopen() const;
  inline void clear_bisopen();
  static const int kBIsOpenFieldNumber = 3;
  inline bool bisopen() const;
  inline void set_bisopen(bool value);

  // optional int64 lAimEndTime = 4;
  inline bool has_laimendtime() const;
  inline void clear_laimendtime();
  static const int kLAimEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 laimendtime() const;
  inline void set_laimendtime(::google::protobuf::int64 value);

  // repeated uint32 uFishUniqIDs = 5;
  inline int ufishuniqids_size() const;
  inline void clear_ufishuniqids();
  static const int kUFishUniqIDsFieldNumber = 5;
  inline ::google::protobuf::uint32 ufishuniqids(int index) const;
  inline void set_ufishuniqids(int index, ::google::protobuf::uint32 value);
  inline void add_ufishuniqids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ufishuniqids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ufishuniqids();

  // optional int64 lRewardCoins = 6;
  inline bool has_lrewardcoins() const;
  inline void clear_lrewardcoins();
  static const int kLRewardCoinsFieldNumber = 6;
  inline ::google::protobuf::int64 lrewardcoins() const;
  inline void set_lrewardcoins(::google::protobuf::int64 value);

  // optional int64 lWildEndTime = 7;
  inline bool has_lwildendtime() const;
  inline void clear_lwildendtime();
  static const int kLWildEndTimeFieldNumber = 7;
  inline ::google::protobuf::int64 lwildendtime() const;
  inline void set_lwildendtime(::google::protobuf::int64 value);

  // optional int32 iWildNum = 8;
  inline bool has_iwildnum() const;
  inline void clear_iwildnum();
  static const int kIWildNumFieldNumber = 8;
  inline ::google::protobuf::int32 iwildnum() const;
  inline void set_iwildnum(::google::protobuf::int32 value);

  // optional .POS stWarHeadPos = 9;
  inline bool has_stwarheadpos() const;
  inline void clear_stwarheadpos();
  static const int kStWarHeadPosFieldNumber = 9;
  inline const ::POS& stwarheadpos() const;
  inline ::POS* mutable_stwarheadpos();
  inline ::POS* release_stwarheadpos();
  inline void set_allocated_stwarheadpos(::POS* stwarheadpos);

  // @@protoc_insertion_point(class_scope:Zone_UseSkill_Notify)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_bisopen();
  inline void clear_has_bisopen();
  inline void set_has_laimendtime();
  inline void clear_has_laimendtime();
  inline void set_has_lrewardcoins();
  inline void clear_has_lrewardcoins();
  inline void set_has_lwildendtime();
  inline void clear_has_lwildendtime();
  inline void set_has_iwildnum();
  inline void clear_has_iwildnum();
  inline void set_has_stwarheadpos();
  inline void clear_has_stwarheadpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 itype_;
  ::google::protobuf::int64 laimendtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ufishuniqids_;
  bool bisopen_;
  ::google::protobuf::int32 iwildnum_;
  ::google::protobuf::int64 lrewardcoins_;
  ::google::protobuf::int64 lwildendtime_;
  ::POS* stwarheadpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UseSkill_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetLimitNum_Request : public ::google::protobuf::Message {
 public:
  Zone_GetLimitNum_Request();
  virtual ~Zone_GetLimitNum_Request();

  Zone_GetLimitNum_Request(const Zone_GetLimitNum_Request& from);

  inline Zone_GetLimitNum_Request& operator=(const Zone_GetLimitNum_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetLimitNum_Request& default_instance();

  void Swap(Zone_GetLimitNum_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetLimitNum_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetLimitNum_Request& from);
  void MergeFrom(const Zone_GetLimitNum_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iZoneID = 2;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetLimitNum_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 izoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetLimitNum_Request* default_instance_;
};
// -------------------------------------------------------------------

class LimitInfo : public ::google::protobuf::Message {
 public:
  LimitInfo();
  virtual ~LimitInfo();

  LimitInfo(const LimitInfo& from);

  inline LimitInfo& operator=(const LimitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitInfo& default_instance();

  void Swap(LimitInfo* other);

  // implements Message ----------------------------------------------

  LimitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitInfo& from);
  void MergeFrom(const LimitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iExchangeID = 1;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 1;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // optional int32 iNum = 2;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 2;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LimitInfo)
 private:
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();
  inline void set_has_inum();
  inline void clear_has_inum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iexchangeid_;
  ::google::protobuf::int32 inum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static LimitInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetLimitNum_Response : public ::google::protobuf::Message {
 public:
  Zone_GetLimitNum_Response();
  virtual ~Zone_GetLimitNum_Response();

  Zone_GetLimitNum_Response(const Zone_GetLimitNum_Response& from);

  inline Zone_GetLimitNum_Response& operator=(const Zone_GetLimitNum_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetLimitNum_Response& default_instance();

  void Swap(Zone_GetLimitNum_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetLimitNum_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetLimitNum_Response& from);
  void MergeFrom(const Zone_GetLimitNum_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // repeated .LimitInfo stLimits = 2;
  inline int stlimits_size() const;
  inline void clear_stlimits();
  static const int kStLimitsFieldNumber = 2;
  inline const ::LimitInfo& stlimits(int index) const;
  inline ::LimitInfo* mutable_stlimits(int index);
  inline ::LimitInfo* add_stlimits();
  inline const ::google::protobuf::RepeatedPtrField< ::LimitInfo >&
      stlimits() const;
  inline ::google::protobuf::RepeatedPtrField< ::LimitInfo >*
      mutable_stlimits();

  // @@protoc_insertion_point(class_scope:Zone_GetLimitNum_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::LimitInfo > stlimits_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetLimitNum_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChooseAimFish_Request : public ::google::protobuf::Message {
 public:
  Zone_ChooseAimFish_Request();
  virtual ~Zone_ChooseAimFish_Request();

  Zone_ChooseAimFish_Request(const Zone_ChooseAimFish_Request& from);

  inline Zone_ChooseAimFish_Request& operator=(const Zone_ChooseAimFish_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChooseAimFish_Request& default_instance();

  void Swap(Zone_ChooseAimFish_Request* other);

  // implements Message ----------------------------------------------

  Zone_ChooseAimFish_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChooseAimFish_Request& from);
  void MergeFrom(const Zone_ChooseAimFish_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uFishUniqID = 1;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 1;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional int32 iFishIndex = 2;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 2;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ChooseAimFish_Request)
 private:
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int32 ifishindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChooseAimFish_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChooseAimFish_Response : public ::google::protobuf::Message {
 public:
  Zone_ChooseAimFish_Response();
  virtual ~Zone_ChooseAimFish_Response();

  Zone_ChooseAimFish_Response(const Zone_ChooseAimFish_Response& from);

  inline Zone_ChooseAimFish_Response& operator=(const Zone_ChooseAimFish_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChooseAimFish_Response& default_instance();

  void Swap(Zone_ChooseAimFish_Response* other);

  // implements Message ----------------------------------------------

  Zone_ChooseAimFish_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChooseAimFish_Response& from);
  void MergeFrom(const Zone_ChooseAimFish_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uFishUniqID = 2;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional int32 iFishIndex = 3;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 3;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ChooseAimFish_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int32 ifishindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChooseAimFish_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChooseAimFish_Notify : public ::google::protobuf::Message {
 public:
  Zone_ChooseAimFish_Notify();
  virtual ~Zone_ChooseAimFish_Notify();

  Zone_ChooseAimFish_Notify(const Zone_ChooseAimFish_Notify& from);

  inline Zone_ChooseAimFish_Notify& operator=(const Zone_ChooseAimFish_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChooseAimFish_Notify& default_instance();

  void Swap(Zone_ChooseAimFish_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ChooseAimFish_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChooseAimFish_Notify& from);
  void MergeFrom(const Zone_ChooseAimFish_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 uFishUniqID = 2;
  inline bool has_ufishuniqid() const;
  inline void clear_ufishuniqid();
  static const int kUFishUniqIDFieldNumber = 2;
  inline ::google::protobuf::uint32 ufishuniqid() const;
  inline void set_ufishuniqid(::google::protobuf::uint32 value);

  // optional int32 iFishIndex = 3;
  inline bool has_ifishindex() const;
  inline void clear_ifishindex();
  static const int kIFishIndexFieldNumber = 3;
  inline ::google::protobuf::int32 ifishindex() const;
  inline void set_ifishindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_ChooseAimFish_Notify)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ufishuniqid();
  inline void clear_has_ufishuniqid();
  inline void set_has_ifishindex();
  inline void clear_has_ifishindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 ufishuniqid_;
  ::google::protobuf::int32 ifishindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChooseAimFish_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetUserAlms_Request : public ::google::protobuf::Message {
 public:
  Zone_GetUserAlms_Request();
  virtual ~Zone_GetUserAlms_Request();

  Zone_GetUserAlms_Request(const Zone_GetUserAlms_Request& from);

  inline Zone_GetUserAlms_Request& operator=(const Zone_GetUserAlms_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetUserAlms_Request& default_instance();

  void Swap(Zone_GetUserAlms_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetUserAlms_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetUserAlms_Request& from);
  void MergeFrom(const Zone_GetUserAlms_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Zone_GetUserAlms_Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetUserAlms_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetUserAlms_Response : public ::google::protobuf::Message {
 public:
  Zone_GetUserAlms_Response();
  virtual ~Zone_GetUserAlms_Response();

  Zone_GetUserAlms_Response(const Zone_GetUserAlms_Response& from);

  inline Zone_GetUserAlms_Response& operator=(const Zone_GetUserAlms_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetUserAlms_Response& default_instance();

  void Swap(Zone_GetUserAlms_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetUserAlms_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetUserAlms_Response& from);
  void MergeFrom(const Zone_GetUserAlms_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetUserAlms_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetUserAlms_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdateAlms_Notify : public ::google::protobuf::Message {
 public:
  Zone_UpdateAlms_Notify();
  virtual ~Zone_UpdateAlms_Notify();

  Zone_UpdateAlms_Notify(const Zone_UpdateAlms_Notify& from);

  inline Zone_UpdateAlms_Notify& operator=(const Zone_UpdateAlms_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdateAlms_Notify& default_instance();

  void Swap(Zone_UpdateAlms_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UpdateAlms_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdateAlms_Notify& from);
  void MergeFrom(const Zone_UpdateAlms_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iGetNum = 1;
  inline bool has_igetnum() const;
  inline void clear_igetnum();
  static const int kIGetNumFieldNumber = 1;
  inline ::google::protobuf::int32 igetnum() const;
  inline void set_igetnum(::google::protobuf::int32 value);

  // optional int32 iNextGetTime = 2;
  inline bool has_inextgettime() const;
  inline void clear_inextgettime();
  static const int kINextGetTimeFieldNumber = 2;
  inline ::google::protobuf::int32 inextgettime() const;
  inline void set_inextgettime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UpdateAlms_Notify)
 private:
  inline void set_has_igetnum();
  inline void clear_has_igetnum();
  inline void set_has_inextgettime();
  inline void clear_has_inextgettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igetnum_;
  ::google::protobuf::int32 inextgettime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdateAlms_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LimitLottery_Request : public ::google::protobuf::Message {
 public:
  Zone_LimitLottery_Request();
  virtual ~Zone_LimitLottery_Request();

  Zone_LimitLottery_Request(const Zone_LimitLottery_Request& from);

  inline Zone_LimitLottery_Request& operator=(const Zone_LimitLottery_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LimitLottery_Request& default_instance();

  void Swap(Zone_LimitLottery_Request* other);

  // implements Message ----------------------------------------------

  Zone_LimitLottery_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LimitLottery_Request& from);
  void MergeFrom(const Zone_LimitLottery_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bIsTenTimes = 1;
  inline bool has_bistentimes() const;
  inline void clear_bistentimes();
  static const int kBIsTenTimesFieldNumber = 1;
  inline bool bistentimes() const;
  inline void set_bistentimes(bool value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 izoneid = 3;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIzoneidFieldNumber = 3;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional string strNickName = 4;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 4;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // optional int32 iLotteryType = 5;
  inline bool has_ilotterytype() const;
  inline void clear_ilotterytype();
  static const int kILotteryTypeFieldNumber = 5;
  inline ::google::protobuf::int32 ilotterytype() const;
  inline void set_ilotterytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_LimitLottery_Request)
 private:
  inline void set_has_bistentimes();
  inline void clear_has_bistentimes();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_ilotterytype();
  inline void clear_has_ilotterytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bistentimes_;
  ::google::protobuf::uint32 uin_;
  ::std::string* strnickname_;
  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::int32 ilotterytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LimitLottery_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LimitLottery_Response : public ::google::protobuf::Message {
 public:
  Zone_LimitLottery_Response();
  virtual ~Zone_LimitLottery_Response();

  Zone_LimitLottery_Response(const Zone_LimitLottery_Response& from);

  inline Zone_LimitLottery_Response& operator=(const Zone_LimitLottery_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LimitLottery_Response& default_instance();

  void Swap(Zone_LimitLottery_Response* other);

  // implements Message ----------------------------------------------

  Zone_LimitLottery_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LimitLottery_Response& from);
  void MergeFrom(const Zone_LimitLottery_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // repeated int32 iLotteryIDs = 2;
  inline int ilotteryids_size() const;
  inline void clear_ilotteryids();
  static const int kILotteryIDsFieldNumber = 2;
  inline ::google::protobuf::int32 ilotteryids(int index) const;
  inline void set_ilotteryids(int index, ::google::protobuf::int32 value);
  inline void add_ilotteryids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ilotteryids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ilotteryids();

  // optional uint32 uin = 3;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 3;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iLotteryType = 4;
  inline bool has_ilotterytype() const;
  inline void clear_ilotterytype();
  static const int kILotteryTypeFieldNumber = 4;
  inline ::google::protobuf::int32 ilotterytype() const;
  inline void set_ilotterytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_LimitLottery_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ilotterytype();
  inline void clear_has_ilotterytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ilotteryids_;
  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 ilotterytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LimitLottery_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_PayLotteryRecord_Request : public ::google::protobuf::Message {
 public:
  Zone_PayLotteryRecord_Request();
  virtual ~Zone_PayLotteryRecord_Request();

  Zone_PayLotteryRecord_Request(const Zone_PayLotteryRecord_Request& from);

  inline Zone_PayLotteryRecord_Request& operator=(const Zone_PayLotteryRecord_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_PayLotteryRecord_Request& default_instance();

  void Swap(Zone_PayLotteryRecord_Request* other);

  // implements Message ----------------------------------------------

  Zone_PayLotteryRecord_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_PayLotteryRecord_Request& from);
  void MergeFrom(const Zone_PayLotteryRecord_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFrom = 1;
  inline bool has_ifrom() const;
  inline void clear_ifrom();
  static const int kIFromFieldNumber = 1;
  inline ::google::protobuf::int32 ifrom() const;
  inline void set_ifrom(::google::protobuf::int32 value);

  // optional int32 iNum = 2;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 2;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // optional int32 izoneid = 3;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIzoneidFieldNumber = 3;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_PayLotteryRecord_Request)
 private:
  inline void set_has_ifrom();
  inline void clear_has_ifrom();
  inline void set_has_inum();
  inline void clear_has_inum();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifrom_;
  ::google::protobuf::int32 inum_;
  ::google::protobuf::int32 izoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_PayLotteryRecord_Request* default_instance_;
};
// -------------------------------------------------------------------

class PayLotteryRecord : public ::google::protobuf::Message {
 public:
  PayLotteryRecord();
  virtual ~PayLotteryRecord();

  PayLotteryRecord(const PayLotteryRecord& from);

  inline PayLotteryRecord& operator=(const PayLotteryRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PayLotteryRecord& default_instance();

  void Swap(PayLotteryRecord* other);

  // implements Message ----------------------------------------------

  PayLotteryRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PayLotteryRecord& from);
  void MergeFrom(const PayLotteryRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strNickName = 1;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 1;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // optional int32 iLotteryID = 2;
  inline bool has_ilotteryid() const;
  inline void clear_ilotteryid();
  static const int kILotteryIDFieldNumber = 2;
  inline ::google::protobuf::int32 ilotteryid() const;
  inline void set_ilotteryid(::google::protobuf::int32 value);

  // optional int32 iIndex = 3;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 3;
  inline ::google::protobuf::int32 iindex() const;
  inline void set_iindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PayLotteryRecord)
 private:
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_ilotteryid();
  inline void clear_has_ilotteryid();
  inline void set_has_iindex();
  inline void clear_has_iindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strnickname_;
  ::google::protobuf::int32 ilotteryid_;
  ::google::protobuf::int32 iindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static PayLotteryRecord* default_instance_;
};
// -------------------------------------------------------------------

class Zone_PayLotteryRecord_Response : public ::google::protobuf::Message {
 public:
  Zone_PayLotteryRecord_Response();
  virtual ~Zone_PayLotteryRecord_Response();

  Zone_PayLotteryRecord_Response(const Zone_PayLotteryRecord_Response& from);

  inline Zone_PayLotteryRecord_Response& operator=(const Zone_PayLotteryRecord_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_PayLotteryRecord_Response& default_instance();

  void Swap(Zone_PayLotteryRecord_Response* other);

  // implements Message ----------------------------------------------

  Zone_PayLotteryRecord_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_PayLotteryRecord_Response& from);
  void MergeFrom(const Zone_PayLotteryRecord_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // repeated .PayLotteryRecord stRecords = 2;
  inline int strecords_size() const;
  inline void clear_strecords();
  static const int kStRecordsFieldNumber = 2;
  inline const ::PayLotteryRecord& strecords(int index) const;
  inline ::PayLotteryRecord* mutable_strecords(int index);
  inline ::PayLotteryRecord* add_strecords();
  inline const ::google::protobuf::RepeatedPtrField< ::PayLotteryRecord >&
      strecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::PayLotteryRecord >*
      mutable_strecords();

  // @@protoc_insertion_point(class_scope:Zone_PayLotteryRecord_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PayLotteryRecord > strecords_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_PayLotteryRecord_Response* default_instance_;
};
// -------------------------------------------------------------------

class HorseLampInfo : public ::google::protobuf::Message {
 public:
  HorseLampInfo();
  virtual ~HorseLampInfo();

  HorseLampInfo(const HorseLampInfo& from);

  inline HorseLampInfo& operator=(const HorseLampInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseLampInfo& default_instance();

  void Swap(HorseLampInfo* other);

  // implements Message ----------------------------------------------

  HorseLampInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseLampInfo& from);
  void MergeFrom(const HorseLampInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iLampID = 1;
  inline bool has_ilampid() const;
  inline void clear_ilampid();
  static const int kILampIDFieldNumber = 1;
  inline ::google::protobuf::int32 ilampid() const;
  inline void set_ilampid(::google::protobuf::int32 value);

  // optional int32 iEndTime = 2;
  inline bool has_iendtime() const;
  inline void clear_iendtime();
  static const int kIEndTimeFieldNumber = 2;
  inline ::google::protobuf::int32 iendtime() const;
  inline void set_iendtime(::google::protobuf::int32 value);

  // optional int32 iInterval = 3;
  inline bool has_iinterval() const;
  inline void clear_iinterval();
  static const int kIIntervalFieldNumber = 3;
  inline ::google::protobuf::int32 iinterval() const;
  inline void set_iinterval(::google::protobuf::int32 value);

  // optional int32 iTimes = 4;
  inline bool has_itimes() const;
  inline void clear_itimes();
  static const int kITimesFieldNumber = 4;
  inline ::google::protobuf::int32 itimes() const;
  inline void set_itimes(::google::protobuf::int32 value);

  // repeated bytes strParams = 5;
  inline int strparams_size() const;
  inline void clear_strparams();
  static const int kStrParamsFieldNumber = 5;
  inline const ::std::string& strparams(int index) const;
  inline ::std::string* mutable_strparams(int index);
  inline void set_strparams(int index, const ::std::string& value);
  inline void set_strparams(int index, const char* value);
  inline void set_strparams(int index, const void* value, size_t size);
  inline ::std::string* add_strparams();
  inline void add_strparams(const ::std::string& value);
  inline void add_strparams(const char* value);
  inline void add_strparams(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strparams();

  // @@protoc_insertion_point(class_scope:HorseLampInfo)
 private:
  inline void set_has_ilampid();
  inline void clear_has_ilampid();
  inline void set_has_iendtime();
  inline void clear_has_iendtime();
  inline void set_has_iinterval();
  inline void clear_has_iinterval();
  inline void set_has_itimes();
  inline void clear_has_itimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilampid_;
  ::google::protobuf::int32 iendtime_;
  ::google::protobuf::int32 iinterval_;
  ::google::protobuf::int32 itimes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strparams_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static HorseLampInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_HorseLamp_Notify : public ::google::protobuf::Message {
 public:
  Zone_HorseLamp_Notify();
  virtual ~Zone_HorseLamp_Notify();

  Zone_HorseLamp_Notify(const Zone_HorseLamp_Notify& from);

  inline Zone_HorseLamp_Notify& operator=(const Zone_HorseLamp_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_HorseLamp_Notify& default_instance();

  void Swap(Zone_HorseLamp_Notify* other);

  // implements Message ----------------------------------------------

  Zone_HorseLamp_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_HorseLamp_Notify& from);
  void MergeFrom(const Zone_HorseLamp_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iZoneID = 1;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 1;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // repeated .HorseLampInfo stInfos = 2;
  inline int stinfos_size() const;
  inline void clear_stinfos();
  static const int kStInfosFieldNumber = 2;
  inline const ::HorseLampInfo& stinfos(int index) const;
  inline ::HorseLampInfo* mutable_stinfos(int index);
  inline ::HorseLampInfo* add_stinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::HorseLampInfo >&
      stinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::HorseLampInfo >*
      mutable_stinfos();

  // @@protoc_insertion_point(class_scope:Zone_HorseLamp_Notify)
 private:
  inline void set_has_izoneid();
  inline void clear_has_izoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HorseLampInfo > stinfos_;
  ::google::protobuf::int32 izoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_HorseLamp_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_EnterLasvegas_Request : public ::google::protobuf::Message {
 public:
  Zone_EnterLasvegas_Request();
  virtual ~Zone_EnterLasvegas_Request();

  Zone_EnterLasvegas_Request(const Zone_EnterLasvegas_Request& from);

  inline Zone_EnterLasvegas_Request& operator=(const Zone_EnterLasvegas_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_EnterLasvegas_Request& default_instance();

  void Swap(Zone_EnterLasvegas_Request* other);

  // implements Message ----------------------------------------------

  Zone_EnterLasvegas_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_EnterLasvegas_Request& from);
  void MergeFrom(const Zone_EnterLasvegas_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bIsEnter = 1;
  inline bool has_bisenter() const;
  inline void clear_bisenter();
  static const int kBIsEnterFieldNumber = 1;
  inline bool bisenter() const;
  inline void set_bisenter(bool value);

  // @@protoc_insertion_point(class_scope:Zone_EnterLasvegas_Request)
 private:
  inline void set_has_bisenter();
  inline void clear_has_bisenter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bisenter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_EnterLasvegas_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_EnterLasvegas_Response : public ::google::protobuf::Message {
 public:
  Zone_EnterLasvegas_Response();
  virtual ~Zone_EnterLasvegas_Response();

  Zone_EnterLasvegas_Response(const Zone_EnterLasvegas_Response& from);

  inline Zone_EnterLasvegas_Response& operator=(const Zone_EnterLasvegas_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_EnterLasvegas_Response& default_instance();

  void Swap(Zone_EnterLasvegas_Response* other);

  // implements Message ----------------------------------------------

  Zone_EnterLasvegas_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_EnterLasvegas_Response& from);
  void MergeFrom(const Zone_EnterLasvegas_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional bool bIsEnter = 2;
  inline bool has_bisenter() const;
  inline void clear_bisenter();
  static const int kBIsEnterFieldNumber = 2;
  inline bool bisenter() const;
  inline void set_bisenter(bool value);

  // @@protoc_insertion_point(class_scope:Zone_EnterLasvegas_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_bisenter();
  inline void clear_has_bisenter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  bool bisenter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_EnterLasvegas_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LasvegasBet_Request : public ::google::protobuf::Message {
 public:
  Zone_LasvegasBet_Request();
  virtual ~Zone_LasvegasBet_Request();

  Zone_LasvegasBet_Request(const Zone_LasvegasBet_Request& from);

  inline Zone_LasvegasBet_Request& operator=(const Zone_LasvegasBet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LasvegasBet_Request& default_instance();

  void Swap(Zone_LasvegasBet_Request* other);

  // implements Message ----------------------------------------------

  Zone_LasvegasBet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LasvegasBet_Request& from);
  void MergeFrom(const Zone_LasvegasBet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NumberBetInfo stBet = 1;
  inline bool has_stbet() const;
  inline void clear_stbet();
  static const int kStBetFieldNumber = 1;
  inline const ::NumberBetInfo& stbet() const;
  inline ::NumberBetInfo* mutable_stbet();
  inline ::NumberBetInfo* release_stbet();
  inline void set_allocated_stbet(::NumberBetInfo* stbet);

  // @@protoc_insertion_point(class_scope:Zone_LasvegasBet_Request)
 private:
  inline void set_has_stbet();
  inline void clear_has_stbet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::NumberBetInfo* stbet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LasvegasBet_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LasvegasBet_Response : public ::google::protobuf::Message {
 public:
  Zone_LasvegasBet_Response();
  virtual ~Zone_LasvegasBet_Response();

  Zone_LasvegasBet_Response(const Zone_LasvegasBet_Response& from);

  inline Zone_LasvegasBet_Response& operator=(const Zone_LasvegasBet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LasvegasBet_Response& default_instance();

  void Swap(Zone_LasvegasBet_Response* other);

  // implements Message ----------------------------------------------

  Zone_LasvegasBet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LasvegasBet_Response& from);
  void MergeFrom(const Zone_LasvegasBet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .NumberBetInfo stBet = 2;
  inline bool has_stbet() const;
  inline void clear_stbet();
  static const int kStBetFieldNumber = 2;
  inline const ::NumberBetInfo& stbet() const;
  inline ::NumberBetInfo* mutable_stbet();
  inline ::NumberBetInfo* release_stbet();
  inline void set_allocated_stbet(::NumberBetInfo* stbet);

  // @@protoc_insertion_point(class_scope:Zone_LasvegasBet_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stbet();
  inline void clear_has_stbet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::NumberBetInfo* stbet_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LasvegasBet_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdateLasvegas_Notify : public ::google::protobuf::Message {
 public:
  Zone_UpdateLasvegas_Notify();
  virtual ~Zone_UpdateLasvegas_Notify();

  Zone_UpdateLasvegas_Notify(const Zone_UpdateLasvegas_Notify& from);

  inline Zone_UpdateLasvegas_Notify& operator=(const Zone_UpdateLasvegas_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdateLasvegas_Notify& default_instance();

  void Swap(Zone_UpdateLasvegas_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UpdateLasvegas_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdateLasvegas_Notify& from);
  void MergeFrom(const Zone_UpdateLasvegas_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LasvegasInfo stInfo = 1;
  inline bool has_stinfo() const;
  inline void clear_stinfo();
  static const int kStInfoFieldNumber = 1;
  inline const ::LasvegasInfo& stinfo() const;
  inline ::LasvegasInfo* mutable_stinfo();
  inline ::LasvegasInfo* release_stinfo();
  inline void set_allocated_stinfo(::LasvegasInfo* stinfo);

  // @@protoc_insertion_point(class_scope:Zone_UpdateLasvegas_Notify)
 private:
  inline void set_has_stinfo();
  inline void clear_has_stinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::LasvegasInfo* stinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdateLasvegas_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetRewardInfo_Request : public ::google::protobuf::Message {
 public:
  Zone_GetRewardInfo_Request();
  virtual ~Zone_GetRewardInfo_Request();

  Zone_GetRewardInfo_Request(const Zone_GetRewardInfo_Request& from);

  inline Zone_GetRewardInfo_Request& operator=(const Zone_GetRewardInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetRewardInfo_Request& default_instance();

  void Swap(Zone_GetRewardInfo_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetRewardInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetRewardInfo_Request& from);
  void MergeFrom(const Zone_GetRewardInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFromIndex = 1;
  inline bool has_ifromindex() const;
  inline void clear_ifromindex();
  static const int kIFromIndexFieldNumber = 1;
  inline ::google::protobuf::int32 ifromindex() const;
  inline void set_ifromindex(::google::protobuf::int32 value);

  // optional int32 iNum = 2;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 2;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetRewardInfo_Request)
 private:
  inline void set_has_ifromindex();
  inline void clear_has_ifromindex();
  inline void set_has_inum();
  inline void clear_has_inum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifromindex_;
  ::google::protobuf::int32 inum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetRewardInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetRewardInfo_Response : public ::google::protobuf::Message {
 public:
  Zone_GetRewardInfo_Response();
  virtual ~Zone_GetRewardInfo_Response();

  Zone_GetRewardInfo_Response(const Zone_GetRewardInfo_Response& from);

  inline Zone_GetRewardInfo_Response& operator=(const Zone_GetRewardInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetRewardInfo_Response& default_instance();

  void Swap(Zone_GetRewardInfo_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetRewardInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetRewardInfo_Response& from);
  void MergeFrom(const Zone_GetRewardInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // repeated .PrizeInfo stInfos = 2;
  inline int stinfos_size() const;
  inline void clear_stinfos();
  static const int kStInfosFieldNumber = 2;
  inline const ::PrizeInfo& stinfos(int index) const;
  inline ::PrizeInfo* mutable_stinfos(int index);
  inline ::PrizeInfo* add_stinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::PrizeInfo >&
      stinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PrizeInfo >*
      mutable_stinfos();

  // @@protoc_insertion_point(class_scope:Zone_GetRewardInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PrizeInfo > stinfos_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetRewardInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetLoginReward_Request : public ::google::protobuf::Message {
 public:
  Zone_GetLoginReward_Request();
  virtual ~Zone_GetLoginReward_Request();

  Zone_GetLoginReward_Request(const Zone_GetLoginReward_Request& from);

  inline Zone_GetLoginReward_Request& operator=(const Zone_GetLoginReward_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetLoginReward_Request& default_instance();

  void Swap(Zone_GetLoginReward_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetLoginReward_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetLoginReward_Request& from);
  void MergeFrom(const Zone_GetLoginReward_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRewardID = 1;
  inline bool has_irewardid() const;
  inline void clear_irewardid();
  static const int kIRewardIDFieldNumber = 1;
  inline ::google::protobuf::int32 irewardid() const;
  inline void set_irewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetLoginReward_Request)
 private:
  inline void set_has_irewardid();
  inline void clear_has_irewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetLoginReward_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetLoginReward_Response : public ::google::protobuf::Message {
 public:
  Zone_GetLoginReward_Response();
  virtual ~Zone_GetLoginReward_Response();

  Zone_GetLoginReward_Response(const Zone_GetLoginReward_Response& from);

  inline Zone_GetLoginReward_Response& operator=(const Zone_GetLoginReward_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetLoginReward_Response& default_instance();

  void Swap(Zone_GetLoginReward_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetLoginReward_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetLoginReward_Response& from);
  void MergeFrom(const Zone_GetLoginReward_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iRewardID = 2;
  inline bool has_irewardid() const;
  inline void clear_irewardid();
  static const int kIRewardIDFieldNumber = 2;
  inline ::google::protobuf::int32 irewardid() const;
  inline void set_irewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetLoginReward_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_irewardid();
  inline void clear_has_irewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 irewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetLoginReward_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetPayRecord_Request : public ::google::protobuf::Message {
 public:
  Zone_GetPayRecord_Request();
  virtual ~Zone_GetPayRecord_Request();

  Zone_GetPayRecord_Request(const Zone_GetPayRecord_Request& from);

  inline Zone_GetPayRecord_Request& operator=(const Zone_GetPayRecord_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetPayRecord_Request& default_instance();

  void Swap(Zone_GetPayRecord_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetPayRecord_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetPayRecord_Request& from);
  void MergeFrom(const Zone_GetPayRecord_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetPayRecord_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetPayRecord_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetPayRecord_Response : public ::google::protobuf::Message {
 public:
  Zone_GetPayRecord_Response();
  virtual ~Zone_GetPayRecord_Response();

  Zone_GetPayRecord_Response(const Zone_GetPayRecord_Response& from);

  inline Zone_GetPayRecord_Response& operator=(const Zone_GetPayRecord_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetPayRecord_Response& default_instance();

  void Swap(Zone_GetPayRecord_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetPayRecord_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetPayRecord_Response& from);
  void MergeFrom(const Zone_GetPayRecord_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // repeated .RechargeRecord stRecords = 2;
  inline int strecords_size() const;
  inline void clear_strecords();
  static const int kStRecordsFieldNumber = 2;
  inline const ::RechargeRecord& strecords(int index) const;
  inline ::RechargeRecord* mutable_strecords(int index);
  inline ::RechargeRecord* add_strecords();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeRecord >&
      strecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeRecord >*
      mutable_strecords();

  // @@protoc_insertion_point(class_scope:Zone_GetPayRecord_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RechargeRecord > strecords_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetPayRecord_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetPayGift_Request : public ::google::protobuf::Message {
 public:
  Zone_GetPayGift_Request();
  virtual ~Zone_GetPayGift_Request();

  Zone_GetPayGift_Request(const Zone_GetPayGift_Request& from);

  inline Zone_GetPayGift_Request& operator=(const Zone_GetPayGift_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetPayGift_Request& default_instance();

  void Swap(Zone_GetPayGift_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetPayGift_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetPayGift_Request& from);
  void MergeFrom(const Zone_GetPayGift_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iGiftType = 1;
  inline bool has_igifttype() const;
  inline void clear_igifttype();
  static const int kIGiftTypeFieldNumber = 1;
  inline ::google::protobuf::int32 igifttype() const;
  inline void set_igifttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetPayGift_Request)
 private:
  inline void set_has_igifttype();
  inline void clear_has_igifttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igifttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetPayGift_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetPayGift_Response : public ::google::protobuf::Message {
 public:
  Zone_GetPayGift_Response();
  virtual ~Zone_GetPayGift_Response();

  Zone_GetPayGift_Response(const Zone_GetPayGift_Response& from);

  inline Zone_GetPayGift_Response& operator=(const Zone_GetPayGift_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetPayGift_Response& default_instance();

  void Swap(Zone_GetPayGift_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetPayGift_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetPayGift_Response& from);
  void MergeFrom(const Zone_GetPayGift_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iGiftType = 2;
  inline bool has_igifttype() const;
  inline void clear_igifttype();
  static const int kIGiftTypeFieldNumber = 2;
  inline ::google::protobuf::int32 igifttype() const;
  inline void set_igifttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetPayGift_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_igifttype();
  inline void clear_has_igifttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 igifttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetPayGift_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdateMonthTime_Notify : public ::google::protobuf::Message {
 public:
  Zone_UpdateMonthTime_Notify();
  virtual ~Zone_UpdateMonthTime_Notify();

  Zone_UpdateMonthTime_Notify(const Zone_UpdateMonthTime_Notify& from);

  inline Zone_UpdateMonthTime_Notify& operator=(const Zone_UpdateMonthTime_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdateMonthTime_Notify& default_instance();

  void Swap(Zone_UpdateMonthTime_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UpdateMonthTime_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdateMonthTime_Notify& from);
  void MergeFrom(const Zone_UpdateMonthTime_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iMonthEndTime = 1;
  inline bool has_imonthendtime() const;
  inline void clear_imonthendtime();
  static const int kIMonthEndTimeFieldNumber = 1;
  inline ::google::protobuf::int32 imonthendtime() const;
  inline void set_imonthendtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UpdateMonthTime_Notify)
 private:
  inline void set_has_imonthendtime();
  inline void clear_has_imonthendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 imonthendtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdateMonthTime_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FishUserUpdate_Notify : public ::google::protobuf::Message {
 public:
  Zone_FishUserUpdate_Notify();
  virtual ~Zone_FishUserUpdate_Notify();

  Zone_FishUserUpdate_Notify(const Zone_FishUserUpdate_Notify& from);

  inline Zone_FishUserUpdate_Notify& operator=(const Zone_FishUserUpdate_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FishUserUpdate_Notify& default_instance();

  void Swap(Zone_FishUserUpdate_Notify* other);

  // implements Message ----------------------------------------------

  Zone_FishUserUpdate_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FishUserUpdate_Notify& from);
  void MergeFrom(const Zone_FishUserUpdate_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iSeat = 1;
  inline bool has_iseat() const;
  inline void clear_iseat();
  static const int kISeatFieldNumber = 1;
  inline ::google::protobuf::int32 iseat() const;
  inline void set_iseat(::google::protobuf::int32 value);

  // optional int64 iAddCoins = 2;
  inline bool has_iaddcoins() const;
  inline void clear_iaddcoins();
  static const int kIAddCoinsFieldNumber = 2;
  inline ::google::protobuf::int64 iaddcoins() const;
  inline void set_iaddcoins(::google::protobuf::int64 value);

  // optional int64 iAddTickets = 3;
  inline bool has_iaddtickets() const;
  inline void clear_iaddtickets();
  static const int kIAddTicketsFieldNumber = 3;
  inline ::google::protobuf::int64 iaddtickets() const;
  inline void set_iaddtickets(::google::protobuf::int64 value);

  // optional .OneSlotInfo stAddItem = 4;
  inline bool has_stadditem() const;
  inline void clear_stadditem();
  static const int kStAddItemFieldNumber = 4;
  inline const ::OneSlotInfo& stadditem() const;
  inline ::OneSlotInfo* mutable_stadditem();
  inline ::OneSlotInfo* release_stadditem();
  inline void set_allocated_stadditem(::OneSlotInfo* stadditem);

  // @@protoc_insertion_point(class_scope:Zone_FishUserUpdate_Notify)
 private:
  inline void set_has_iseat();
  inline void clear_has_iseat();
  inline void set_has_iaddcoins();
  inline void clear_has_iaddcoins();
  inline void set_has_iaddtickets();
  inline void clear_has_iaddtickets();
  inline void set_has_stadditem();
  inline void clear_has_stadditem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 iaddcoins_;
  ::google::protobuf::int64 iaddtickets_;
  ::OneSlotInfo* stadditem_;
  ::google::protobuf::int32 iseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FishUserUpdate_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_VipExpUpdate_Notify : public ::google::protobuf::Message {
 public:
  Zone_VipExpUpdate_Notify();
  virtual ~Zone_VipExpUpdate_Notify();

  Zone_VipExpUpdate_Notify(const Zone_VipExpUpdate_Notify& from);

  inline Zone_VipExpUpdate_Notify& operator=(const Zone_VipExpUpdate_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_VipExpUpdate_Notify& default_instance();

  void Swap(Zone_VipExpUpdate_Notify* other);

  // implements Message ----------------------------------------------

  Zone_VipExpUpdate_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_VipExpUpdate_Notify& from);
  void MergeFrom(const Zone_VipExpUpdate_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iVipLevel = 1;
  inline bool has_iviplevel() const;
  inline void clear_iviplevel();
  static const int kIVipLevelFieldNumber = 1;
  inline ::google::protobuf::int32 iviplevel() const;
  inline void set_iviplevel(::google::protobuf::int32 value);

  // optional int32 iVipExp = 2;
  inline bool has_ivipexp() const;
  inline void clear_ivipexp();
  static const int kIVipExpFieldNumber = 2;
  inline ::google::protobuf::int32 ivipexp() const;
  inline void set_ivipexp(::google::protobuf::int32 value);

  // optional int32 iVipPriv = 3;
  inline bool has_ivippriv() const;
  inline void clear_ivippriv();
  static const int kIVipPrivFieldNumber = 3;
  inline ::google::protobuf::int32 ivippriv() const;
  inline void set_ivippriv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_VipExpUpdate_Notify)
 private:
  inline void set_has_iviplevel();
  inline void clear_has_iviplevel();
  inline void set_has_ivipexp();
  inline void clear_has_ivipexp();
  inline void set_has_ivippriv();
  inline void clear_has_ivippriv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iviplevel_;
  ::google::protobuf::int32 ivipexp_;
  ::google::protobuf::int32 ivippriv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_VipExpUpdate_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UserRecharge_Notify : public ::google::protobuf::Message {
 public:
  Zone_UserRecharge_Notify();
  virtual ~Zone_UserRecharge_Notify();

  Zone_UserRecharge_Notify(const Zone_UserRecharge_Notify& from);

  inline Zone_UserRecharge_Notify& operator=(const Zone_UserRecharge_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UserRecharge_Notify& default_instance();

  void Swap(Zone_UserRecharge_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UserRecharge_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UserRecharge_Notify& from);
  void MergeFrom(const Zone_UserRecharge_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRechargeID = 1;
  inline bool has_irechargeid() const;
  inline void clear_irechargeid();
  static const int kIRechargeIDFieldNumber = 1;
  inline ::google::protobuf::int32 irechargeid() const;
  inline void set_irechargeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UserRecharge_Notify)
 private:
  inline void set_has_irechargeid();
  inline void clear_has_irechargeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irechargeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UserRecharge_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetPayOrder_Request : public ::google::protobuf::Message {
 public:
  Zone_GetPayOrder_Request();
  virtual ~Zone_GetPayOrder_Request();

  Zone_GetPayOrder_Request(const Zone_GetPayOrder_Request& from);

  inline Zone_GetPayOrder_Request& operator=(const Zone_GetPayOrder_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetPayOrder_Request& default_instance();

  void Swap(Zone_GetPayOrder_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetPayOrder_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetPayOrder_Request& from);
  void MergeFrom(const Zone_GetPayOrder_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::int32 uin() const;
  inline void set_uin(::google::protobuf::int32 value);

  // optional int32 iFromZoneID = 2;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetPayOrder_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uin_;
  ::google::protobuf::int32 ifromzoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetPayOrder_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetPayOrder_Response : public ::google::protobuf::Message {
 public:
  Zone_GetPayOrder_Response();
  virtual ~Zone_GetPayOrder_Response();

  Zone_GetPayOrder_Response(const Zone_GetPayOrder_Response& from);

  inline Zone_GetPayOrder_Response& operator=(const Zone_GetPayOrder_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetPayOrder_Response& default_instance();

  void Swap(Zone_GetPayOrder_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetPayOrder_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetPayOrder_Response& from);
  void MergeFrom(const Zone_GetPayOrder_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional string strOrderID = 2;
  inline bool has_strorderid() const;
  inline void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  inline const ::std::string& strorderid() const;
  inline void set_strorderid(const ::std::string& value);
  inline void set_strorderid(const char* value);
  inline void set_strorderid(const char* value, size_t size);
  inline ::std::string* mutable_strorderid();
  inline ::std::string* release_strorderid();
  inline void set_allocated_strorderid(::std::string* strorderid);

  // @@protoc_insertion_point(class_scope:Zone_GetPayOrder_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_strorderid();
  inline void clear_has_strorderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strorderid_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetPayOrder_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FinGuide_Request : public ::google::protobuf::Message {
 public:
  Zone_FinGuide_Request();
  virtual ~Zone_FinGuide_Request();

  Zone_FinGuide_Request(const Zone_FinGuide_Request& from);

  inline Zone_FinGuide_Request& operator=(const Zone_FinGuide_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FinGuide_Request& default_instance();

  void Swap(Zone_FinGuide_Request* other);

  // implements Message ----------------------------------------------

  Zone_FinGuide_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FinGuide_Request& from);
  void MergeFrom(const Zone_FinGuide_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iGuideID = 1;
  inline bool has_iguideid() const;
  inline void clear_iguideid();
  static const int kIGuideIDFieldNumber = 1;
  inline ::google::protobuf::int32 iguideid() const;
  inline void set_iguideid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_FinGuide_Request)
 private:
  inline void set_has_iguideid();
  inline void clear_has_iguideid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iguideid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FinGuide_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FinGuide_Response : public ::google::protobuf::Message {
 public:
  Zone_FinGuide_Response();
  virtual ~Zone_FinGuide_Response();

  Zone_FinGuide_Response(const Zone_FinGuide_Response& from);

  inline Zone_FinGuide_Response& operator=(const Zone_FinGuide_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FinGuide_Response& default_instance();

  void Swap(Zone_FinGuide_Response* other);

  // implements Message ----------------------------------------------

  Zone_FinGuide_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FinGuide_Response& from);
  void MergeFrom(const Zone_FinGuide_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iGuideID = 2;
  inline bool has_iguideid() const;
  inline void clear_iguideid();
  static const int kIGuideIDFieldNumber = 2;
  inline ::google::protobuf::int32 iguideid() const;
  inline void set_iguideid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_FinGuide_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_iguideid();
  inline void clear_has_iguideid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 iguideid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FinGuide_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdateName_Request : public ::google::protobuf::Message {
 public:
  Zone_UpdateName_Request();
  virtual ~Zone_UpdateName_Request();

  Zone_UpdateName_Request(const Zone_UpdateName_Request& from);

  inline Zone_UpdateName_Request& operator=(const Zone_UpdateName_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdateName_Request& default_instance();

  void Swap(Zone_UpdateName_Request* other);

  // implements Message ----------------------------------------------

  Zone_UpdateName_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdateName_Request& from);
  void MergeFrom(const Zone_UpdateName_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strNewName = 1;
  inline bool has_strnewname() const;
  inline void clear_strnewname();
  static const int kStrNewNameFieldNumber = 1;
  inline const ::std::string& strnewname() const;
  inline void set_strnewname(const ::std::string& value);
  inline void set_strnewname(const char* value);
  inline void set_strnewname(const char* value, size_t size);
  inline ::std::string* mutable_strnewname();
  inline ::std::string* release_strnewname();
  inline void set_allocated_strnewname(::std::string* strnewname);

  // optional bool bIsSign = 2;
  inline bool has_bissign() const;
  inline void clear_bissign();
  static const int kBIsSignFieldNumber = 2;
  inline bool bissign() const;
  inline void set_bissign(bool value);

  // @@protoc_insertion_point(class_scope:Zone_UpdateName_Request)
 private:
  inline void set_has_strnewname();
  inline void clear_has_strnewname();
  inline void set_has_bissign();
  inline void clear_has_bissign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strnewname_;
  bool bissign_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdateName_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdateName_Response : public ::google::protobuf::Message {
 public:
  Zone_UpdateName_Response();
  virtual ~Zone_UpdateName_Response();

  Zone_UpdateName_Response(const Zone_UpdateName_Response& from);

  inline Zone_UpdateName_Response& operator=(const Zone_UpdateName_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdateName_Response& default_instance();

  void Swap(Zone_UpdateName_Response* other);

  // implements Message ----------------------------------------------

  Zone_UpdateName_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdateName_Response& from);
  void MergeFrom(const Zone_UpdateName_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional string strNewName = 2;
  inline bool has_strnewname() const;
  inline void clear_strnewname();
  static const int kStrNewNameFieldNumber = 2;
  inline const ::std::string& strnewname() const;
  inline void set_strnewname(const ::std::string& value);
  inline void set_strnewname(const char* value);
  inline void set_strnewname(const char* value, size_t size);
  inline ::std::string* mutable_strnewname();
  inline ::std::string* release_strnewname();
  inline void set_allocated_strnewname(::std::string* strnewname);

  // optional bool bIsSign = 3;
  inline bool has_bissign() const;
  inline void clear_bissign();
  static const int kBIsSignFieldNumber = 3;
  inline bool bissign() const;
  inline void set_bissign(bool value);

  // @@protoc_insertion_point(class_scope:Zone_UpdateName_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_strnewname();
  inline void clear_has_strnewname();
  inline void set_has_bissign();
  inline void clear_has_bissign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strnewname_;
  ::google::protobuf::int32 iresult_;
  bool bissign_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdateName_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UserRecharge_Request : public ::google::protobuf::Message {
 public:
  Zone_UserRecharge_Request();
  virtual ~Zone_UserRecharge_Request();

  Zone_UserRecharge_Request(const Zone_UserRecharge_Request& from);

  inline Zone_UserRecharge_Request& operator=(const Zone_UserRecharge_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UserRecharge_Request& default_instance();

  void Swap(Zone_UserRecharge_Request* other);

  // implements Message ----------------------------------------------

  Zone_UserRecharge_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UserRecharge_Request& from);
  void MergeFrom(const Zone_UserRecharge_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRechargeID = 1;
  inline bool has_irechargeid() const;
  inline void clear_irechargeid();
  static const int kIRechargeIDFieldNumber = 1;
  inline ::google::protobuf::int32 irechargeid() const;
  inline void set_irechargeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UserRecharge_Request)
 private:
  inline void set_has_irechargeid();
  inline void clear_has_irechargeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irechargeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UserRecharge_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UserRecharge_Response : public ::google::protobuf::Message {
 public:
  Zone_UserRecharge_Response();
  virtual ~Zone_UserRecharge_Response();

  Zone_UserRecharge_Response(const Zone_UserRecharge_Response& from);

  inline Zone_UserRecharge_Response& operator=(const Zone_UserRecharge_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UserRecharge_Response& default_instance();

  void Swap(Zone_UserRecharge_Response* other);

  // implements Message ----------------------------------------------

  Zone_UserRecharge_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UserRecharge_Response& from);
  void MergeFrom(const Zone_UserRecharge_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iRechargeID = 2;
  inline bool has_irechargeid() const;
  inline void clear_irechargeid();
  static const int kIRechargeIDFieldNumber = 2;
  inline ::google::protobuf::int32 irechargeid() const;
  inline void set_irechargeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UserRecharge_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_irechargeid();
  inline void clear_has_irechargeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 irechargeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_UserRecharge_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetExchangeRec_Request : public ::google::protobuf::Message {
 public:
  Zone_GetExchangeRec_Request();
  virtual ~Zone_GetExchangeRec_Request();

  Zone_GetExchangeRec_Request(const Zone_GetExchangeRec_Request& from);

  inline Zone_GetExchangeRec_Request& operator=(const Zone_GetExchangeRec_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetExchangeRec_Request& default_instance();

  void Swap(Zone_GetExchangeRec_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetExchangeRec_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetExchangeRec_Request& from);
  void MergeFrom(const Zone_GetExchangeRec_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFromIndex = 1;
  inline bool has_ifromindex() const;
  inline void clear_ifromindex();
  static const int kIFromIndexFieldNumber = 1;
  inline ::google::protobuf::int32 ifromindex() const;
  inline void set_ifromindex(::google::protobuf::int32 value);

  // optional int32 iNum = 2;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 2;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // optional int32 iZoneID = 3;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 3;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional uint32 uin = 4;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 4;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetExchangeRec_Request)
 private:
  inline void set_has_ifromindex();
  inline void clear_has_ifromindex();
  inline void set_has_inum();
  inline void clear_has_inum();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_uin();
  inline void clear_has_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifromindex_;
  ::google::protobuf::int32 inum_;
  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetExchangeRec_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetExchangeRec_Response : public ::google::protobuf::Message {
 public:
  Zone_GetExchangeRec_Response();
  virtual ~Zone_GetExchangeRec_Response();

  Zone_GetExchangeRec_Response(const Zone_GetExchangeRec_Response& from);

  inline Zone_GetExchangeRec_Response& operator=(const Zone_GetExchangeRec_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetExchangeRec_Response& default_instance();

  void Swap(Zone_GetExchangeRec_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetExchangeRec_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetExchangeRec_Response& from);
  void MergeFrom(const Zone_GetExchangeRec_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iFromIndex = 2;
  inline bool has_ifromindex() const;
  inline void clear_ifromindex();
  static const int kIFromIndexFieldNumber = 2;
  inline ::google::protobuf::int32 ifromindex() const;
  inline void set_ifromindex(::google::protobuf::int32 value);

  // optional int32 iNum = 3;
  inline bool has_inum() const;
  inline void clear_inum();
  static const int kINumFieldNumber = 3;
  inline ::google::protobuf::int32 inum() const;
  inline void set_inum(::google::protobuf::int32 value);

  // repeated .ExchangeRec stRecords = 4;
  inline int strecords_size() const;
  inline void clear_strecords();
  static const int kStRecordsFieldNumber = 4;
  inline const ::ExchangeRec& strecords(int index) const;
  inline ::ExchangeRec* mutable_strecords(int index);
  inline ::ExchangeRec* add_strecords();
  inline const ::google::protobuf::RepeatedPtrField< ::ExchangeRec >&
      strecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExchangeRec >*
      mutable_strecords();

  // optional uint32 uin = 5;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 5;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetExchangeRec_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ifromindex();
  inline void clear_has_ifromindex();
  inline void set_has_inum();
  inline void clear_has_inum();
  inline void set_has_uin();
  inline void clear_has_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 ifromindex_;
  ::google::protobuf::RepeatedPtrField< ::ExchangeRec > strecords_;
  ::google::protobuf::int32 inum_;
  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_5fZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_5fZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetExchangeRec_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// GameLoginInfo

// optional .BASEDBINFO stBaseInfo = 1;
inline bool GameLoginInfo::has_stbaseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameLoginInfo::set_has_stbaseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameLoginInfo::clear_has_stbaseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameLoginInfo::clear_stbaseinfo() {
  if (stbaseinfo_ != NULL) stbaseinfo_->::BASEDBINFO::Clear();
  clear_has_stbaseinfo();
}
inline const ::BASEDBINFO& GameLoginInfo::stbaseinfo() const {
  return stbaseinfo_ != NULL ? *stbaseinfo_ : *default_instance_->stbaseinfo_;
}
inline ::BASEDBINFO* GameLoginInfo::mutable_stbaseinfo() {
  set_has_stbaseinfo();
  if (stbaseinfo_ == NULL) stbaseinfo_ = new ::BASEDBINFO;
  return stbaseinfo_;
}
inline ::BASEDBINFO* GameLoginInfo::release_stbaseinfo() {
  clear_has_stbaseinfo();
  ::BASEDBINFO* temp = stbaseinfo_;
  stbaseinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stbaseinfo(::BASEDBINFO* stbaseinfo) {
  delete stbaseinfo_;
  stbaseinfo_ = stbaseinfo;
  if (stbaseinfo) {
    set_has_stbaseinfo();
  } else {
    clear_has_stbaseinfo();
  }
}

// optional .QUESTDBINFO stQuestInfo = 2;
inline bool GameLoginInfo::has_stquestinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameLoginInfo::set_has_stquestinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameLoginInfo::clear_has_stquestinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameLoginInfo::clear_stquestinfo() {
  if (stquestinfo_ != NULL) stquestinfo_->::QUESTDBINFO::Clear();
  clear_has_stquestinfo();
}
inline const ::QUESTDBINFO& GameLoginInfo::stquestinfo() const {
  return stquestinfo_ != NULL ? *stquestinfo_ : *default_instance_->stquestinfo_;
}
inline ::QUESTDBINFO* GameLoginInfo::mutable_stquestinfo() {
  set_has_stquestinfo();
  if (stquestinfo_ == NULL) stquestinfo_ = new ::QUESTDBINFO;
  return stquestinfo_;
}
inline ::QUESTDBINFO* GameLoginInfo::release_stquestinfo() {
  clear_has_stquestinfo();
  ::QUESTDBINFO* temp = stquestinfo_;
  stquestinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stquestinfo(::QUESTDBINFO* stquestinfo) {
  delete stquestinfo_;
  stquestinfo_ = stquestinfo;
  if (stquestinfo) {
    set_has_stquestinfo();
  } else {
    clear_has_stquestinfo();
  }
}

// optional .ITEMDBINFO stItemInfo = 3;
inline bool GameLoginInfo::has_stiteminfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameLoginInfo::set_has_stiteminfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameLoginInfo::clear_has_stiteminfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameLoginInfo::clear_stiteminfo() {
  if (stiteminfo_ != NULL) stiteminfo_->::ITEMDBINFO::Clear();
  clear_has_stiteminfo();
}
inline const ::ITEMDBINFO& GameLoginInfo::stiteminfo() const {
  return stiteminfo_ != NULL ? *stiteminfo_ : *default_instance_->stiteminfo_;
}
inline ::ITEMDBINFO* GameLoginInfo::mutable_stiteminfo() {
  set_has_stiteminfo();
  if (stiteminfo_ == NULL) stiteminfo_ = new ::ITEMDBINFO;
  return stiteminfo_;
}
inline ::ITEMDBINFO* GameLoginInfo::release_stiteminfo() {
  clear_has_stiteminfo();
  ::ITEMDBINFO* temp = stiteminfo_;
  stiteminfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stiteminfo(::ITEMDBINFO* stiteminfo) {
  delete stiteminfo_;
  stiteminfo_ = stiteminfo;
  if (stiteminfo) {
    set_has_stiteminfo();
  } else {
    clear_has_stiteminfo();
  }
}

// optional .FRIENDDBINFO stFriendInfo = 4;
inline bool GameLoginInfo::has_stfriendinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameLoginInfo::set_has_stfriendinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameLoginInfo::clear_has_stfriendinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameLoginInfo::clear_stfriendinfo() {
  if (stfriendinfo_ != NULL) stfriendinfo_->::FRIENDDBINFO::Clear();
  clear_has_stfriendinfo();
}
inline const ::FRIENDDBINFO& GameLoginInfo::stfriendinfo() const {
  return stfriendinfo_ != NULL ? *stfriendinfo_ : *default_instance_->stfriendinfo_;
}
inline ::FRIENDDBINFO* GameLoginInfo::mutable_stfriendinfo() {
  set_has_stfriendinfo();
  if (stfriendinfo_ == NULL) stfriendinfo_ = new ::FRIENDDBINFO;
  return stfriendinfo_;
}
inline ::FRIENDDBINFO* GameLoginInfo::release_stfriendinfo() {
  clear_has_stfriendinfo();
  ::FRIENDDBINFO* temp = stfriendinfo_;
  stfriendinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stfriendinfo(::FRIENDDBINFO* stfriendinfo) {
  delete stfriendinfo_;
  stfriendinfo_ = stfriendinfo;
  if (stfriendinfo) {
    set_has_stfriendinfo();
  } else {
    clear_has_stfriendinfo();
  }
}

// optional .MAILDBINFO stMailInfo = 5;
inline bool GameLoginInfo::has_stmailinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameLoginInfo::set_has_stmailinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameLoginInfo::clear_has_stmailinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameLoginInfo::clear_stmailinfo() {
  if (stmailinfo_ != NULL) stmailinfo_->::MAILDBINFO::Clear();
  clear_has_stmailinfo();
}
inline const ::MAILDBINFO& GameLoginInfo::stmailinfo() const {
  return stmailinfo_ != NULL ? *stmailinfo_ : *default_instance_->stmailinfo_;
}
inline ::MAILDBINFO* GameLoginInfo::mutable_stmailinfo() {
  set_has_stmailinfo();
  if (stmailinfo_ == NULL) stmailinfo_ = new ::MAILDBINFO;
  return stmailinfo_;
}
inline ::MAILDBINFO* GameLoginInfo::release_stmailinfo() {
  clear_has_stmailinfo();
  ::MAILDBINFO* temp = stmailinfo_;
  stmailinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stmailinfo(::MAILDBINFO* stmailinfo) {
  delete stmailinfo_;
  stmailinfo_ = stmailinfo;
  if (stmailinfo) {
    set_has_stmailinfo();
  } else {
    clear_has_stmailinfo();
  }
}

// optional .RESERVED1DBINFO stReserved1 = 6;
inline bool GameLoginInfo::has_streserved1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameLoginInfo::set_has_streserved1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameLoginInfo::clear_has_streserved1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameLoginInfo::clear_streserved1() {
  if (streserved1_ != NULL) streserved1_->::RESERVED1DBINFO::Clear();
  clear_has_streserved1();
}
inline const ::RESERVED1DBINFO& GameLoginInfo::streserved1() const {
  return streserved1_ != NULL ? *streserved1_ : *default_instance_->streserved1_;
}
inline ::RESERVED1DBINFO* GameLoginInfo::mutable_streserved1() {
  set_has_streserved1();
  if (streserved1_ == NULL) streserved1_ = new ::RESERVED1DBINFO;
  return streserved1_;
}
inline ::RESERVED1DBINFO* GameLoginInfo::release_streserved1() {
  clear_has_streserved1();
  ::RESERVED1DBINFO* temp = streserved1_;
  streserved1_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_streserved1(::RESERVED1DBINFO* streserved1) {
  delete streserved1_;
  streserved1_ = streserved1;
  if (streserved1) {
    set_has_streserved1();
  } else {
    clear_has_streserved1();
  }
}

// optional .RESERVED2DBINFO stReserved2 = 7;
inline bool GameLoginInfo::has_streserved2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameLoginInfo::set_has_streserved2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameLoginInfo::clear_has_streserved2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameLoginInfo::clear_streserved2() {
  if (streserved2_ != NULL) streserved2_->::RESERVED2DBINFO::Clear();
  clear_has_streserved2();
}
inline const ::RESERVED2DBINFO& GameLoginInfo::streserved2() const {
  return streserved2_ != NULL ? *streserved2_ : *default_instance_->streserved2_;
}
inline ::RESERVED2DBINFO* GameLoginInfo::mutable_streserved2() {
  set_has_streserved2();
  if (streserved2_ == NULL) streserved2_ = new ::RESERVED2DBINFO;
  return streserved2_;
}
inline ::RESERVED2DBINFO* GameLoginInfo::release_streserved2() {
  clear_has_streserved2();
  ::RESERVED2DBINFO* temp = streserved2_;
  streserved2_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_streserved2(::RESERVED2DBINFO* streserved2) {
  delete streserved2_;
  streserved2_ = streserved2;
  if (streserved2) {
    set_has_streserved2();
  } else {
    clear_has_streserved2();
  }
}

// -------------------------------------------------------------------

// Zone_LoginServer_Request

// optional .RoleID stRoleID = 1;
inline bool Zone_LoginServer_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LoginServer_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LoginServer_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LoginServer_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Zone_LoginServer_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Zone_LoginServer_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Zone_LoginServer_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Zone_LoginServer_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional uint32 uLoginReason = 3;
inline bool Zone_LoginServer_Request::has_uloginreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LoginServer_Request::set_has_uloginreason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LoginServer_Request::clear_has_uloginreason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LoginServer_Request::clear_uloginreason() {
  uloginreason_ = 0u;
  clear_has_uloginreason();
}
inline ::google::protobuf::uint32 Zone_LoginServer_Request::uloginreason() const {
  return uloginreason_;
}
inline void Zone_LoginServer_Request::set_uloginreason(::google::protobuf::uint32 value) {
  set_has_uloginreason();
  uloginreason_ = value;
}

// optional uint32 uClientVersion = 4;
inline bool Zone_LoginServer_Request::has_uclientversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_LoginServer_Request::set_has_uclientversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_LoginServer_Request::clear_has_uclientversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_LoginServer_Request::clear_uclientversion() {
  uclientversion_ = 0u;
  clear_has_uclientversion();
}
inline ::google::protobuf::uint32 Zone_LoginServer_Request::uclientversion() const {
  return uclientversion_;
}
inline void Zone_LoginServer_Request::set_uclientversion(::google::protobuf::uint32 value) {
  set_has_uclientversion();
  uclientversion_ = value;
}

// optional string strSessionKey = 5;
inline bool Zone_LoginServer_Request::has_strsessionkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_LoginServer_Request::set_has_strsessionkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_LoginServer_Request::clear_has_strsessionkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_LoginServer_Request::clear_strsessionkey() {
  if (strsessionkey_ != &::google::protobuf::internal::kEmptyString) {
    strsessionkey_->clear();
  }
  clear_has_strsessionkey();
}
inline const ::std::string& Zone_LoginServer_Request::strsessionkey() const {
  return *strsessionkey_;
}
inline void Zone_LoginServer_Request::set_strsessionkey(const ::std::string& value) {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  strsessionkey_->assign(value);
}
inline void Zone_LoginServer_Request::set_strsessionkey(const char* value) {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  strsessionkey_->assign(value);
}
inline void Zone_LoginServer_Request::set_strsessionkey(const char* value, size_t size) {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  strsessionkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LoginServer_Request::mutable_strsessionkey() {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  return strsessionkey_;
}
inline ::std::string* Zone_LoginServer_Request::release_strsessionkey() {
  clear_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strsessionkey_;
    strsessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LoginServer_Request::set_allocated_strsessionkey(::std::string* strsessionkey) {
  if (strsessionkey_ != &::google::protobuf::internal::kEmptyString) {
    delete strsessionkey_;
  }
  if (strsessionkey) {
    set_has_strsessionkey();
    strsessionkey_ = strsessionkey;
  } else {
    clear_has_strsessionkey();
    strsessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strNickName = 6;
inline bool Zone_LoginServer_Request::has_strnickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_LoginServer_Request::set_has_strnickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_LoginServer_Request::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_LoginServer_Request::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& Zone_LoginServer_Request::strnickname() const {
  return *strnickname_;
}
inline void Zone_LoginServer_Request::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void Zone_LoginServer_Request::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void Zone_LoginServer_Request::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LoginServer_Request::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* Zone_LoginServer_Request::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LoginServer_Request::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strChannel = 7;
inline bool Zone_LoginServer_Request::has_strchannel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Zone_LoginServer_Request::set_has_strchannel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Zone_LoginServer_Request::clear_has_strchannel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Zone_LoginServer_Request::clear_strchannel() {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    strchannel_->clear();
  }
  clear_has_strchannel();
}
inline const ::std::string& Zone_LoginServer_Request::strchannel() const {
  return *strchannel_;
}
inline void Zone_LoginServer_Request::set_strchannel(const ::std::string& value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void Zone_LoginServer_Request::set_strchannel(const char* value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void Zone_LoginServer_Request::set_strchannel(const char* value, size_t size) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LoginServer_Request::mutable_strchannel() {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  return strchannel_;
}
inline ::std::string* Zone_LoginServer_Request::release_strchannel() {
  clear_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannel_;
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LoginServer_Request::set_allocated_strchannel(::std::string* strchannel) {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannel_;
  }
  if (strchannel) {
    set_has_strchannel();
    strchannel_ = strchannel;
  } else {
    clear_has_strchannel();
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iRealNameStat = 8;
inline bool Zone_LoginServer_Request::has_irealnamestat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Zone_LoginServer_Request::set_has_irealnamestat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Zone_LoginServer_Request::clear_has_irealnamestat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Zone_LoginServer_Request::clear_irealnamestat() {
  irealnamestat_ = 0;
  clear_has_irealnamestat();
}
inline ::google::protobuf::int32 Zone_LoginServer_Request::irealnamestat() const {
  return irealnamestat_;
}
inline void Zone_LoginServer_Request::set_irealnamestat(::google::protobuf::int32 value) {
  set_has_irealnamestat();
  irealnamestat_ = value;
}

// optional string strAccount = 9;
inline bool Zone_LoginServer_Request::has_straccount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Zone_LoginServer_Request::set_has_straccount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Zone_LoginServer_Request::clear_has_straccount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Zone_LoginServer_Request::clear_straccount() {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    straccount_->clear();
  }
  clear_has_straccount();
}
inline const ::std::string& Zone_LoginServer_Request::straccount() const {
  return *straccount_;
}
inline void Zone_LoginServer_Request::set_straccount(const ::std::string& value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void Zone_LoginServer_Request::set_straccount(const char* value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void Zone_LoginServer_Request::set_straccount(const char* value, size_t size) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LoginServer_Request::mutable_straccount() {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  return straccount_;
}
inline ::std::string* Zone_LoginServer_Request::release_straccount() {
  clear_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccount_;
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LoginServer_Request::set_allocated_straccount(::std::string* straccount) {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    delete straccount_;
  }
  if (straccount) {
    set_has_straccount();
    straccount_ = straccount;
  } else {
    clear_has_straccount();
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strDeviceID = 10;
inline bool Zone_LoginServer_Request::has_strdeviceid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Zone_LoginServer_Request::set_has_strdeviceid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Zone_LoginServer_Request::clear_has_strdeviceid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Zone_LoginServer_Request::clear_strdeviceid() {
  if (strdeviceid_ != &::google::protobuf::internal::kEmptyString) {
    strdeviceid_->clear();
  }
  clear_has_strdeviceid();
}
inline const ::std::string& Zone_LoginServer_Request::strdeviceid() const {
  return *strdeviceid_;
}
inline void Zone_LoginServer_Request::set_strdeviceid(const ::std::string& value) {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  strdeviceid_->assign(value);
}
inline void Zone_LoginServer_Request::set_strdeviceid(const char* value) {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  strdeviceid_->assign(value);
}
inline void Zone_LoginServer_Request::set_strdeviceid(const char* value, size_t size) {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  strdeviceid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LoginServer_Request::mutable_strdeviceid() {
  set_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    strdeviceid_ = new ::std::string;
  }
  return strdeviceid_;
}
inline ::std::string* Zone_LoginServer_Request::release_strdeviceid() {
  clear_has_strdeviceid();
  if (strdeviceid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdeviceid_;
    strdeviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LoginServer_Request::set_allocated_strdeviceid(::std::string* strdeviceid) {
  if (strdeviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strdeviceid_;
  }
  if (strdeviceid) {
    set_has_strdeviceid();
    strdeviceid_ = strdeviceid;
  } else {
    clear_has_strdeviceid();
    strdeviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bIsNew = 11;
inline bool Zone_LoginServer_Request::has_bisnew() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Zone_LoginServer_Request::set_has_bisnew() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Zone_LoginServer_Request::clear_has_bisnew() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Zone_LoginServer_Request::clear_bisnew() {
  bisnew_ = false;
  clear_has_bisnew();
}
inline bool Zone_LoginServer_Request::bisnew() const {
  return bisnew_;
}
inline void Zone_LoginServer_Request::set_bisnew(bool value) {
  set_has_bisnew();
  bisnew_ = value;
}

// -------------------------------------------------------------------

// Zone_LoginServer_Response

// optional int32 iResult = 1;
inline bool Zone_LoginServer_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LoginServer_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LoginServer_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LoginServer_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_LoginServer_Response::iresult() const {
  return iresult_;
}
inline void Zone_LoginServer_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uin = 2;
inline bool Zone_LoginServer_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LoginServer_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LoginServer_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LoginServer_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_LoginServer_Response::uin() const {
  return uin_;
}
inline void Zone_LoginServer_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iZoneID = 3;
inline bool Zone_LoginServer_Response::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_LoginServer_Response::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_LoginServer_Response::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_LoginServer_Response::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_LoginServer_Response::izoneid() const {
  return izoneid_;
}
inline void Zone_LoginServer_Response::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iWorldID = 4;
inline bool Zone_LoginServer_Response::has_iworldid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_LoginServer_Response::set_has_iworldid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_LoginServer_Response::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_LoginServer_Response::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 Zone_LoginServer_Response::iworldid() const {
  return iworldid_;
}
inline void Zone_LoginServer_Response::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional .GameLoginInfo stLoginInfo = 5;
inline bool Zone_LoginServer_Response::has_stlogininfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_LoginServer_Response::set_has_stlogininfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_LoginServer_Response::clear_has_stlogininfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_LoginServer_Response::clear_stlogininfo() {
  if (stlogininfo_ != NULL) stlogininfo_->::GameLoginInfo::Clear();
  clear_has_stlogininfo();
}
inline const ::GameLoginInfo& Zone_LoginServer_Response::stlogininfo() const {
  return stlogininfo_ != NULL ? *stlogininfo_ : *default_instance_->stlogininfo_;
}
inline ::GameLoginInfo* Zone_LoginServer_Response::mutable_stlogininfo() {
  set_has_stlogininfo();
  if (stlogininfo_ == NULL) stlogininfo_ = new ::GameLoginInfo;
  return stlogininfo_;
}
inline ::GameLoginInfo* Zone_LoginServer_Response::release_stlogininfo() {
  clear_has_stlogininfo();
  ::GameLoginInfo* temp = stlogininfo_;
  stlogininfo_ = NULL;
  return temp;
}
inline void Zone_LoginServer_Response::set_allocated_stlogininfo(::GameLoginInfo* stlogininfo) {
  delete stlogininfo_;
  stlogininfo_ = stlogininfo;
  if (stlogininfo) {
    set_has_stlogininfo();
  } else {
    clear_has_stlogininfo();
  }
}

// -------------------------------------------------------------------

// Zone_Logout_Notify

// optional .RoleID stRoleID = 1;
inline bool Zone_Logout_Notify::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Logout_Notify::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Logout_Notify::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Logout_Notify::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Zone_Logout_Notify::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Zone_Logout_Notify::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Zone_Logout_Notify::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Zone_Logout_Notify::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// -------------------------------------------------------------------

// Zone_GetFriendInfo_Request

// optional uint32 ucReqType = 1;
inline bool Zone_GetFriendInfo_Request::has_ucreqtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetFriendInfo_Request::set_has_ucreqtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetFriendInfo_Request::clear_has_ucreqtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetFriendInfo_Request::clear_ucreqtype() {
  ucreqtype_ = 0u;
  clear_has_ucreqtype();
}
inline ::google::protobuf::uint32 Zone_GetFriendInfo_Request::ucreqtype() const {
  return ucreqtype_;
}
inline void Zone_GetFriendInfo_Request::set_ucreqtype(::google::protobuf::uint32 value) {
  set_has_ucreqtype();
  ucreqtype_ = value;
}

// optional uint32 uin = 2;
inline bool Zone_GetFriendInfo_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetFriendInfo_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetFriendInfo_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetFriendInfo_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GetFriendInfo_Request::uin() const {
  return uin_;
}
inline void Zone_GetFriendInfo_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 friend_uin = 3;
inline bool Zone_GetFriendInfo_Request::has_friend_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_GetFriendInfo_Request::set_has_friend_uin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_GetFriendInfo_Request::clear_has_friend_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_GetFriendInfo_Request::clear_friend_uin() {
  friend_uin_ = 0u;
  clear_has_friend_uin();
}
inline ::google::protobuf::uint32 Zone_GetFriendInfo_Request::friend_uin() const {
  return friend_uin_;
}
inline void Zone_GetFriendInfo_Request::set_friend_uin(::google::protobuf::uint32 value) {
  set_has_friend_uin();
  friend_uin_ = value;
}

// -------------------------------------------------------------------

// Zone_GetFriendInfo_Response

// optional int32 iResult = 1;
inline bool Zone_GetFriendInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetFriendInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetFriendInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetFriendInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetFriendInfo_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetFriendInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_OnlineRole_Request

// optional int32 iWorldID = 1;
inline bool Zone_OnlineRole_Request::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_OnlineRole_Request::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_OnlineRole_Request::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 Zone_OnlineRole_Request::iworldid() const {
  return iworldid_;
}
inline void Zone_OnlineRole_Request::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional int32 iZoneID = 2;
inline bool Zone_OnlineRole_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_OnlineRole_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_OnlineRole_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_OnlineRole_Request::izoneid() const {
  return izoneid_;
}
inline void Zone_OnlineRole_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iRoleNum = 3;
inline bool Zone_OnlineRole_Request::has_irolenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_irolenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_OnlineRole_Request::clear_has_irolenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_OnlineRole_Request::clear_irolenum() {
  irolenum_ = 0;
  clear_has_irolenum();
}
inline ::google::protobuf::int32 Zone_OnlineRole_Request::irolenum() const {
  return irolenum_;
}
inline void Zone_OnlineRole_Request::set_irolenum(::google::protobuf::int32 value) {
  set_has_irolenum();
  irolenum_ = value;
}

// optional string strRecordTime = 4;
inline bool Zone_OnlineRole_Request::has_strrecordtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_strrecordtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_OnlineRole_Request::clear_has_strrecordtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_OnlineRole_Request::clear_strrecordtime() {
  if (strrecordtime_ != &::google::protobuf::internal::kEmptyString) {
    strrecordtime_->clear();
  }
  clear_has_strrecordtime();
}
inline const ::std::string& Zone_OnlineRole_Request::strrecordtime() const {
  return *strrecordtime_;
}
inline void Zone_OnlineRole_Request::set_strrecordtime(const ::std::string& value) {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  strrecordtime_->assign(value);
}
inline void Zone_OnlineRole_Request::set_strrecordtime(const char* value) {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  strrecordtime_->assign(value);
}
inline void Zone_OnlineRole_Request::set_strrecordtime(const char* value, size_t size) {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  strrecordtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_OnlineRole_Request::mutable_strrecordtime() {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  return strrecordtime_;
}
inline ::std::string* Zone_OnlineRole_Request::release_strrecordtime() {
  clear_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrecordtime_;
    strrecordtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_OnlineRole_Request::set_allocated_strrecordtime(::std::string* strrecordtime) {
  if (strrecordtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecordtime_;
  }
  if (strrecordtime) {
    set_has_strrecordtime();
    strrecordtime_ = strrecordtime;
  } else {
    clear_has_strrecordtime();
    strrecordtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_LoginServer_Notify

// optional .RoleID stRoleID = 1;
inline bool Zone_LoginServer_Notify::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LoginServer_Notify::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LoginServer_Notify::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LoginServer_Notify::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Zone_LoginServer_Notify::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Zone_LoginServer_Notify::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Zone_LoginServer_Notify::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Zone_LoginServer_Notify::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iZoneID = 4;
inline bool Zone_LoginServer_Notify::has_izoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LoginServer_Notify::set_has_izoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LoginServer_Notify::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LoginServer_Notify::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_LoginServer_Notify::izoneid() const {
  return izoneid_;
}
inline void Zone_LoginServer_Notify::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// -------------------------------------------------------------------

// Zone_RepOpera_Request

// optional .ReqOperaType eType = 1 [default = REQ_OPERA_TYPE_INVALID];
inline bool Zone_RepOpera_Request::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_RepOpera_Request::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_RepOpera_Request::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_RepOpera_Request::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ReqOperaType Zone_RepOpera_Request::etype() const {
  return static_cast< ::ReqOperaType >(etype_);
}
inline void Zone_RepOpera_Request::set_etype(::ReqOperaType value) {
  assert(::ReqOperaType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iItemID = 2;
inline bool Zone_RepOpera_Request::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_RepOpera_Request::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_RepOpera_Request::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_RepOpera_Request::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 Zone_RepOpera_Request::iitemid() const {
  return iitemid_;
}
inline void Zone_RepOpera_Request::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// optional int32 iItemNum = 3;
inline bool Zone_RepOpera_Request::has_iitemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_RepOpera_Request::set_has_iitemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_RepOpera_Request::clear_has_iitemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_RepOpera_Request::clear_iitemnum() {
  iitemnum_ = 0;
  clear_has_iitemnum();
}
inline ::google::protobuf::int32 Zone_RepOpera_Request::iitemnum() const {
  return iitemnum_;
}
inline void Zone_RepOpera_Request::set_iitemnum(::google::protobuf::int32 value) {
  set_has_iitemnum();
  iitemnum_ = value;
}

// optional uint32 uToUin = 4;
inline bool Zone_RepOpera_Request::has_utouin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_RepOpera_Request::set_has_utouin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_RepOpera_Request::clear_has_utouin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_RepOpera_Request::clear_utouin() {
  utouin_ = 0u;
  clear_has_utouin();
}
inline ::google::protobuf::uint32 Zone_RepOpera_Request::utouin() const {
  return utouin_;
}
inline void Zone_RepOpera_Request::set_utouin(::google::protobuf::uint32 value) {
  set_has_utouin();
  utouin_ = value;
}

// optional string strPhoneNum = 5;
inline bool Zone_RepOpera_Request::has_strphonenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_RepOpera_Request::set_has_strphonenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_RepOpera_Request::clear_has_strphonenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_RepOpera_Request::clear_strphonenum() {
  if (strphonenum_ != &::google::protobuf::internal::kEmptyString) {
    strphonenum_->clear();
  }
  clear_has_strphonenum();
}
inline const ::std::string& Zone_RepOpera_Request::strphonenum() const {
  return *strphonenum_;
}
inline void Zone_RepOpera_Request::set_strphonenum(const ::std::string& value) {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  strphonenum_->assign(value);
}
inline void Zone_RepOpera_Request::set_strphonenum(const char* value) {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  strphonenum_->assign(value);
}
inline void Zone_RepOpera_Request::set_strphonenum(const char* value, size_t size) {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  strphonenum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_RepOpera_Request::mutable_strphonenum() {
  set_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strphonenum_ = new ::std::string;
  }
  return strphonenum_;
}
inline ::std::string* Zone_RepOpera_Request::release_strphonenum() {
  clear_has_strphonenum();
  if (strphonenum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strphonenum_;
    strphonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_RepOpera_Request::set_allocated_strphonenum(::std::string* strphonenum) {
  if (strphonenum_ != &::google::protobuf::internal::kEmptyString) {
    delete strphonenum_;
  }
  if (strphonenum) {
    set_has_strphonenum();
    strphonenum_ = strphonenum;
  } else {
    clear_has_strphonenum();
    strphonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_RepOpera_Response

// optional int32 iResult = 1;
inline bool Zone_RepOpera_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_RepOpera_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_RepOpera_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_RepOpera_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_RepOpera_Response::iresult() const {
  return iresult_;
}
inline void Zone_RepOpera_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .ReqOperaType eType = 2 [default = REQ_OPERA_TYPE_INVALID];
inline bool Zone_RepOpera_Response::has_etype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_RepOpera_Response::set_has_etype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_RepOpera_Response::clear_has_etype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_RepOpera_Response::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ReqOperaType Zone_RepOpera_Response::etype() const {
  return static_cast< ::ReqOperaType >(etype_);
}
inline void Zone_RepOpera_Response::set_etype(::ReqOperaType value) {
  assert(::ReqOperaType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iItemID = 3;
inline bool Zone_RepOpera_Response::has_iitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_RepOpera_Response::set_has_iitemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_RepOpera_Response::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_RepOpera_Response::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 Zone_RepOpera_Response::iitemid() const {
  return iitemid_;
}
inline void Zone_RepOpera_Response::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// optional int32 iItemNum = 4;
inline bool Zone_RepOpera_Response::has_iitemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_RepOpera_Response::set_has_iitemnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_RepOpera_Response::clear_has_iitemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_RepOpera_Response::clear_iitemnum() {
  iitemnum_ = 0;
  clear_has_iitemnum();
}
inline ::google::protobuf::int32 Zone_RepOpera_Response::iitemnum() const {
  return iitemnum_;
}
inline void Zone_RepOpera_Response::set_iitemnum(::google::protobuf::int32 value) {
  set_has_iitemnum();
  iitemnum_ = value;
}

// optional uint32 uToUin = 5;
inline bool Zone_RepOpera_Response::has_utouin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_RepOpera_Response::set_has_utouin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_RepOpera_Response::clear_has_utouin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_RepOpera_Response::clear_utouin() {
  utouin_ = 0u;
  clear_has_utouin();
}
inline ::google::protobuf::uint32 Zone_RepOpera_Response::utouin() const {
  return utouin_;
}
inline void Zone_RepOpera_Response::set_utouin(::google::protobuf::uint32 value) {
  set_has_utouin();
  utouin_ = value;
}

// -------------------------------------------------------------------

// OneRepSlot

// optional int32 iChangeChannel = 3;
inline bool OneRepSlot::has_ichangechannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneRepSlot::set_has_ichangechannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneRepSlot::clear_has_ichangechannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneRepSlot::clear_ichangechannel() {
  ichangechannel_ = 0;
  clear_has_ichangechannel();
}
inline ::google::protobuf::int32 OneRepSlot::ichangechannel() const {
  return ichangechannel_;
}
inline void OneRepSlot::set_ichangechannel(::google::protobuf::int32 value) {
  set_has_ichangechannel();
  ichangechannel_ = value;
}

// optional .OneSlotInfo stSlotInfo = 2;
inline bool OneRepSlot::has_stslotinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneRepSlot::set_has_stslotinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneRepSlot::clear_has_stslotinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneRepSlot::clear_stslotinfo() {
  if (stslotinfo_ != NULL) stslotinfo_->::OneSlotInfo::Clear();
  clear_has_stslotinfo();
}
inline const ::OneSlotInfo& OneRepSlot::stslotinfo() const {
  return stslotinfo_ != NULL ? *stslotinfo_ : *default_instance_->stslotinfo_;
}
inline ::OneSlotInfo* OneRepSlot::mutable_stslotinfo() {
  set_has_stslotinfo();
  if (stslotinfo_ == NULL) stslotinfo_ = new ::OneSlotInfo;
  return stslotinfo_;
}
inline ::OneSlotInfo* OneRepSlot::release_stslotinfo() {
  clear_has_stslotinfo();
  ::OneSlotInfo* temp = stslotinfo_;
  stslotinfo_ = NULL;
  return temp;
}
inline void OneRepSlot::set_allocated_stslotinfo(::OneSlotInfo* stslotinfo) {
  delete stslotinfo_;
  stslotinfo_ = stslotinfo;
  if (stslotinfo) {
    set_has_stslotinfo();
  } else {
    clear_has_stslotinfo();
  }
}

// -------------------------------------------------------------------

// Zone_RepChange_Notify

// repeated .OneRepSlot stItems = 1;
inline int Zone_RepChange_Notify::stitems_size() const {
  return stitems_.size();
}
inline void Zone_RepChange_Notify::clear_stitems() {
  stitems_.Clear();
}
inline const ::OneRepSlot& Zone_RepChange_Notify::stitems(int index) const {
  return stitems_.Get(index);
}
inline ::OneRepSlot* Zone_RepChange_Notify::mutable_stitems(int index) {
  return stitems_.Mutable(index);
}
inline ::OneRepSlot* Zone_RepChange_Notify::add_stitems() {
  return stitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneRepSlot >&
Zone_RepChange_Notify::stitems() const {
  return stitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneRepSlot >*
Zone_RepChange_Notify::mutable_stitems() {
  return &stitems_;
}

// -------------------------------------------------------------------

// UserResourceChange

// optional int32 iResType = 1;
inline bool UserResourceChange::has_irestype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserResourceChange::set_has_irestype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserResourceChange::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserResourceChange::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::google::protobuf::int32 UserResourceChange::irestype() const {
  return irestype_;
}
inline void UserResourceChange::set_irestype(::google::protobuf::int32 value) {
  set_has_irestype();
  irestype_ = value;
}

// optional int32 iNewResNum = 2;
inline bool UserResourceChange::has_inewresnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserResourceChange::set_has_inewresnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserResourceChange::clear_has_inewresnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserResourceChange::clear_inewresnum() {
  inewresnum_ = 0;
  clear_has_inewresnum();
}
inline ::google::protobuf::int32 UserResourceChange::inewresnum() const {
  return inewresnum_;
}
inline void UserResourceChange::set_inewresnum(::google::protobuf::int32 value) {
  set_has_inewresnum();
  inewresnum_ = value;
}

// -------------------------------------------------------------------

// Zone_ResourceChange_Notify

// repeated .UserResourceChange stChangeInfos = 1;
inline int Zone_ResourceChange_Notify::stchangeinfos_size() const {
  return stchangeinfos_.size();
}
inline void Zone_ResourceChange_Notify::clear_stchangeinfos() {
  stchangeinfos_.Clear();
}
inline const ::UserResourceChange& Zone_ResourceChange_Notify::stchangeinfos(int index) const {
  return stchangeinfos_.Get(index);
}
inline ::UserResourceChange* Zone_ResourceChange_Notify::mutable_stchangeinfos(int index) {
  return stchangeinfos_.Mutable(index);
}
inline ::UserResourceChange* Zone_ResourceChange_Notify::add_stchangeinfos() {
  return stchangeinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserResourceChange >&
Zone_ResourceChange_Notify::stchangeinfos() const {
  return stchangeinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserResourceChange >*
Zone_ResourceChange_Notify::mutable_stchangeinfos() {
  return &stchangeinfos_;
}

// -------------------------------------------------------------------

// Zone_Chat_Request

// optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
inline bool Zone_Chat_Request::has_ichannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Chat_Request::set_has_ichannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Chat_Request::clear_has_ichannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Chat_Request::clear_ichannel() {
  ichannel_ = 0;
  clear_has_ichannel();
}
inline ::ChatChannelType Zone_Chat_Request::ichannel() const {
  return static_cast< ::ChatChannelType >(ichannel_);
}
inline void Zone_Chat_Request::set_ichannel(::ChatChannelType value) {
  assert(::ChatChannelType_IsValid(value));
  set_has_ichannel();
  ichannel_ = value;
}

// optional .RoleID stTargetRoleID = 2;
inline bool Zone_Chat_Request::has_sttargetroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_Chat_Request::set_has_sttargetroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_Chat_Request::clear_has_sttargetroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_Chat_Request::clear_sttargetroleid() {
  if (sttargetroleid_ != NULL) sttargetroleid_->::RoleID::Clear();
  clear_has_sttargetroleid();
}
inline const ::RoleID& Zone_Chat_Request::sttargetroleid() const {
  return sttargetroleid_ != NULL ? *sttargetroleid_ : *default_instance_->sttargetroleid_;
}
inline ::RoleID* Zone_Chat_Request::mutable_sttargetroleid() {
  set_has_sttargetroleid();
  if (sttargetroleid_ == NULL) sttargetroleid_ = new ::RoleID;
  return sttargetroleid_;
}
inline ::RoleID* Zone_Chat_Request::release_sttargetroleid() {
  clear_has_sttargetroleid();
  ::RoleID* temp = sttargetroleid_;
  sttargetroleid_ = NULL;
  return temp;
}
inline void Zone_Chat_Request::set_allocated_sttargetroleid(::RoleID* sttargetroleid) {
  delete sttargetroleid_;
  sttargetroleid_ = sttargetroleid;
  if (sttargetroleid) {
    set_has_sttargetroleid();
  } else {
    clear_has_sttargetroleid();
  }
}

// optional string strMessage = 3;
inline bool Zone_Chat_Request::has_strmessage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_Chat_Request::set_has_strmessage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_Chat_Request::clear_has_strmessage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_Chat_Request::clear_strmessage() {
  if (strmessage_ != &::google::protobuf::internal::kEmptyString) {
    strmessage_->clear();
  }
  clear_has_strmessage();
}
inline const ::std::string& Zone_Chat_Request::strmessage() const {
  return *strmessage_;
}
inline void Zone_Chat_Request::set_strmessage(const ::std::string& value) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(value);
}
inline void Zone_Chat_Request::set_strmessage(const char* value) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(value);
}
inline void Zone_Chat_Request::set_strmessage(const char* value, size_t size) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_Chat_Request::mutable_strmessage() {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  return strmessage_;
}
inline ::std::string* Zone_Chat_Request::release_strmessage() {
  clear_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmessage_;
    strmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_Chat_Request::set_allocated_strmessage(::std::string* strmessage) {
  if (strmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete strmessage_;
  }
  if (strmessage) {
    set_has_strmessage();
    strmessage_ = strmessage;
  } else {
    clear_has_strmessage();
    strmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_Chat_Response

// optional int32 iResult = 1;
inline bool Zone_Chat_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Chat_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Chat_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Chat_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_Chat_Response::iresult() const {
  return iresult_;
}
inline void Zone_Chat_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_DoFish_Request

// optional int32 iFishRoomID = 1;
inline bool Zone_DoFish_Request::has_ifishroomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DoFish_Request::set_has_ifishroomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DoFish_Request::clear_has_ifishroomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DoFish_Request::clear_ifishroomid() {
  ifishroomid_ = 0;
  clear_has_ifishroomid();
}
inline ::google::protobuf::int32 Zone_DoFish_Request::ifishroomid() const {
  return ifishroomid_;
}
inline void Zone_DoFish_Request::set_ifishroomid(::google::protobuf::int32 value) {
  set_has_ifishroomid();
  ifishroomid_ = value;
}

// -------------------------------------------------------------------

// Zone_DoFish_Response

// optional int32 iResult = 1;
inline bool Zone_DoFish_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DoFish_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DoFish_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DoFish_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_DoFish_Response::iresult() const {
  return iresult_;
}
inline void Zone_DoFish_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iFishRoomID = 2;
inline bool Zone_DoFish_Response::has_ifishroomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_DoFish_Response::set_has_ifishroomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_DoFish_Response::clear_has_ifishroomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_DoFish_Response::clear_ifishroomid() {
  ifishroomid_ = 0;
  clear_has_ifishroomid();
}
inline ::google::protobuf::int32 Zone_DoFish_Response::ifishroomid() const {
  return ifishroomid_;
}
inline void Zone_DoFish_Response::set_ifishroomid(::google::protobuf::int32 value) {
  set_has_ifishroomid();
  ifishroomid_ = value;
}

// -------------------------------------------------------------------

// Zone_FormTime_Notify

// optional bool bIsBegin = 1;
inline bool Zone_FormTime_Notify::has_bisbegin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FormTime_Notify::set_has_bisbegin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FormTime_Notify::clear_has_bisbegin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FormTime_Notify::clear_bisbegin() {
  bisbegin_ = false;
  clear_has_bisbegin();
}
inline bool Zone_FormTime_Notify::bisbegin() const {
  return bisbegin_;
}
inline void Zone_FormTime_Notify::set_bisbegin(bool value) {
  set_has_bisbegin();
  bisbegin_ = value;
}

// optional int64 lTime = 2;
inline bool Zone_FormTime_Notify::has_ltime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_FormTime_Notify::set_has_ltime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_FormTime_Notify::clear_has_ltime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_FormTime_Notify::clear_ltime() {
  ltime_ = GOOGLE_LONGLONG(0);
  clear_has_ltime();
}
inline ::google::protobuf::int64 Zone_FormTime_Notify::ltime() const {
  return ltime_;
}
inline void Zone_FormTime_Notify::set_ltime(::google::protobuf::int64 value) {
  set_has_ltime();
  ltime_ = value;
}

// -------------------------------------------------------------------

// Zone_SyncTime_Notify

// optional int64 lServerTime = 1;
inline bool Zone_SyncTime_Notify::has_lservertime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SyncTime_Notify::set_has_lservertime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SyncTime_Notify::clear_has_lservertime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SyncTime_Notify::clear_lservertime() {
  lservertime_ = GOOGLE_LONGLONG(0);
  clear_has_lservertime();
}
inline ::google::protobuf::int64 Zone_SyncTime_Notify::lservertime() const {
  return lservertime_;
}
inline void Zone_SyncTime_Notify::set_lservertime(::google::protobuf::int64 value) {
  set_has_lservertime();
  lservertime_ = value;
}

// -------------------------------------------------------------------

// SEATUSERINFO

// optional int32 iSeat = 1;
inline bool SEATUSERINFO::has_iseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SEATUSERINFO::set_has_iseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SEATUSERINFO::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SEATUSERINFO::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 SEATUSERINFO::iseat() const {
  return iseat_;
}
inline void SEATUSERINFO::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional uint32 uin = 2;
inline bool SEATUSERINFO::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SEATUSERINFO::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SEATUSERINFO::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SEATUSERINFO::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 SEATUSERINFO::uin() const {
  return uin_;
}
inline void SEATUSERINFO::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iGunID = 3;
inline bool SEATUSERINFO::has_igunid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SEATUSERINFO::set_has_igunid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SEATUSERINFO::clear_has_igunid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SEATUSERINFO::clear_igunid() {
  igunid_ = 0;
  clear_has_igunid();
}
inline ::google::protobuf::int32 SEATUSERINFO::igunid() const {
  return igunid_;
}
inline void SEATUSERINFO::set_igunid(::google::protobuf::int32 value) {
  set_has_igunid();
  igunid_ = value;
}

// optional int64 lCoins = 4;
inline bool SEATUSERINFO::has_lcoins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SEATUSERINFO::set_has_lcoins() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SEATUSERINFO::clear_has_lcoins() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SEATUSERINFO::clear_lcoins() {
  lcoins_ = GOOGLE_LONGLONG(0);
  clear_has_lcoins();
}
inline ::google::protobuf::int64 SEATUSERINFO::lcoins() const {
  return lcoins_;
}
inline void SEATUSERINFO::set_lcoins(::google::protobuf::int64 value) {
  set_has_lcoins();
  lcoins_ = value;
}

// optional int64 lTickets = 6;
inline bool SEATUSERINFO::has_ltickets() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SEATUSERINFO::set_has_ltickets() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SEATUSERINFO::clear_has_ltickets() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SEATUSERINFO::clear_ltickets() {
  ltickets_ = GOOGLE_LONGLONG(0);
  clear_has_ltickets();
}
inline ::google::protobuf::int64 SEATUSERINFO::ltickets() const {
  return ltickets_;
}
inline void SEATUSERINFO::set_ltickets(::google::protobuf::int64 value) {
  set_has_ltickets();
  ltickets_ = value;
}

// optional string strNickName = 5;
inline bool SEATUSERINFO::has_strnickname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SEATUSERINFO::set_has_strnickname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SEATUSERINFO::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SEATUSERINFO::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& SEATUSERINFO::strnickname() const {
  return *strnickname_;
}
inline void SEATUSERINFO::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void SEATUSERINFO::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void SEATUSERINFO::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SEATUSERINFO::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* SEATUSERINFO::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SEATUSERINFO::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iGunStyleID = 7;
inline bool SEATUSERINFO::has_igunstyleid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SEATUSERINFO::set_has_igunstyleid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SEATUSERINFO::clear_has_igunstyleid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SEATUSERINFO::clear_igunstyleid() {
  igunstyleid_ = 0;
  clear_has_igunstyleid();
}
inline ::google::protobuf::int32 SEATUSERINFO::igunstyleid() const {
  return igunstyleid_;
}
inline void SEATUSERINFO::set_igunstyleid(::google::protobuf::int32 value) {
  set_has_igunstyleid();
  igunstyleid_ = value;
}

// optional string strPicID = 8;
inline bool SEATUSERINFO::has_strpicid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SEATUSERINFO::set_has_strpicid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SEATUSERINFO::clear_has_strpicid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SEATUSERINFO::clear_strpicid() {
  if (strpicid_ != &::google::protobuf::internal::kEmptyString) {
    strpicid_->clear();
  }
  clear_has_strpicid();
}
inline const ::std::string& SEATUSERINFO::strpicid() const {
  return *strpicid_;
}
inline void SEATUSERINFO::set_strpicid(const ::std::string& value) {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  strpicid_->assign(value);
}
inline void SEATUSERINFO::set_strpicid(const char* value) {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  strpicid_->assign(value);
}
inline void SEATUSERINFO::set_strpicid(const char* value, size_t size) {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  strpicid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SEATUSERINFO::mutable_strpicid() {
  set_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    strpicid_ = new ::std::string;
  }
  return strpicid_;
}
inline ::std::string* SEATUSERINFO::release_strpicid() {
  clear_has_strpicid();
  if (strpicid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpicid_;
    strpicid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SEATUSERINFO::set_allocated_strpicid(::std::string* strpicid) {
  if (strpicid_ != &::google::protobuf::internal::kEmptyString) {
    delete strpicid_;
  }
  if (strpicid) {
    set_has_strpicid();
    strpicid_ = strpicid;
  } else {
    clear_has_strpicid();
    strpicid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iVIPLevel = 9;
inline bool SEATUSERINFO::has_iviplevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SEATUSERINFO::set_has_iviplevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SEATUSERINFO::clear_has_iviplevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SEATUSERINFO::clear_iviplevel() {
  iviplevel_ = 0;
  clear_has_iviplevel();
}
inline ::google::protobuf::int32 SEATUSERINFO::iviplevel() const {
  return iviplevel_;
}
inline void SEATUSERINFO::set_iviplevel(::google::protobuf::int32 value) {
  set_has_iviplevel();
  iviplevel_ = value;
}

// -------------------------------------------------------------------

// Zone_SeatUser_Notify

// repeated .SEATUSERINFO stUsers = 1;
inline int Zone_SeatUser_Notify::stusers_size() const {
  return stusers_.size();
}
inline void Zone_SeatUser_Notify::clear_stusers() {
  stusers_.Clear();
}
inline const ::SEATUSERINFO& Zone_SeatUser_Notify::stusers(int index) const {
  return stusers_.Get(index);
}
inline ::SEATUSERINFO* Zone_SeatUser_Notify::mutable_stusers(int index) {
  return stusers_.Mutable(index);
}
inline ::SEATUSERINFO* Zone_SeatUser_Notify::add_stusers() {
  return stusers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SEATUSERINFO >&
Zone_SeatUser_Notify::stusers() const {
  return stusers_;
}
inline ::google::protobuf::RepeatedPtrField< ::SEATUSERINFO >*
Zone_SeatUser_Notify::mutable_stusers() {
  return &stusers_;
}

// -------------------------------------------------------------------

// FISHINFO

// optional uint32 uUniqID = 1;
inline bool FISHINFO::has_uuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FISHINFO::set_has_uuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FISHINFO::clear_has_uuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FISHINFO::clear_uuniqid() {
  uuniqid_ = 0u;
  clear_has_uuniqid();
}
inline ::google::protobuf::uint32 FISHINFO::uuniqid() const {
  return uuniqid_;
}
inline void FISHINFO::set_uuniqid(::google::protobuf::uint32 value) {
  set_has_uuniqid();
  uuniqid_ = value;
}

// optional int32 iFishID = 2;
inline bool FISHINFO::has_ifishid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FISHINFO::set_has_ifishid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FISHINFO::clear_has_ifishid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FISHINFO::clear_ifishid() {
  ifishid_ = 0;
  clear_has_ifishid();
}
inline ::google::protobuf::int32 FISHINFO::ifishid() const {
  return ifishid_;
}
inline void FISHINFO::set_ifishid(::google::protobuf::int32 value) {
  set_has_ifishid();
  ifishid_ = value;
}

// optional int32 iFishSeqID = 3;
inline bool FISHINFO::has_ifishseqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FISHINFO::set_has_ifishseqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FISHINFO::clear_has_ifishseqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FISHINFO::clear_ifishseqid() {
  ifishseqid_ = 0;
  clear_has_ifishseqid();
}
inline ::google::protobuf::int32 FISHINFO::ifishseqid() const {
  return ifishseqid_;
}
inline void FISHINFO::set_ifishseqid(::google::protobuf::int32 value) {
  set_has_ifishseqid();
  ifishseqid_ = value;
}

// optional int32 iTraceID = 4;
inline bool FISHINFO::has_itraceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FISHINFO::set_has_itraceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FISHINFO::clear_has_itraceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FISHINFO::clear_itraceid() {
  itraceid_ = 0;
  clear_has_itraceid();
}
inline ::google::protobuf::int32 FISHINFO::itraceid() const {
  return itraceid_;
}
inline void FISHINFO::set_itraceid(::google::protobuf::int32 value) {
  set_has_itraceid();
  itraceid_ = value;
}

// optional int64 lBorTime = 5;
inline bool FISHINFO::has_lbortime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FISHINFO::set_has_lbortime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FISHINFO::clear_has_lbortime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FISHINFO::clear_lbortime() {
  lbortime_ = GOOGLE_LONGLONG(0);
  clear_has_lbortime();
}
inline ::google::protobuf::int64 FISHINFO::lbortime() const {
  return lbortime_;
}
inline void FISHINFO::set_lbortime(::google::protobuf::int64 value) {
  set_has_lbortime();
  lbortime_ = value;
}

// optional int64 lDeadTime = 6;
inline bool FISHINFO::has_ldeadtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FISHINFO::set_has_ldeadtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FISHINFO::clear_has_ldeadtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FISHINFO::clear_ldeadtime() {
  ldeadtime_ = GOOGLE_LONGLONG(0);
  clear_has_ldeadtime();
}
inline ::google::protobuf::int64 FISHINFO::ldeadtime() const {
  return ldeadtime_;
}
inline void FISHINFO::set_ldeadtime(::google::protobuf::int64 value) {
  set_has_ldeadtime();
  ldeadtime_ = value;
}

// optional uint32 cIndex = 7;
inline bool FISHINFO::has_cindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FISHINFO::set_has_cindex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FISHINFO::clear_has_cindex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FISHINFO::clear_cindex() {
  cindex_ = 0u;
  clear_has_cindex();
}
inline ::google::protobuf::uint32 FISHINFO::cindex() const {
  return cindex_;
}
inline void FISHINFO::set_cindex(::google::protobuf::uint32 value) {
  set_has_cindex();
  cindex_ = value;
}

// -------------------------------------------------------------------

// Zone_FishInfo_Notify

// repeated .FISHINFO stFishes = 1;
inline int Zone_FishInfo_Notify::stfishes_size() const {
  return stfishes_.size();
}
inline void Zone_FishInfo_Notify::clear_stfishes() {
  stfishes_.Clear();
}
inline const ::FISHINFO& Zone_FishInfo_Notify::stfishes(int index) const {
  return stfishes_.Get(index);
}
inline ::FISHINFO* Zone_FishInfo_Notify::mutable_stfishes(int index) {
  return stfishes_.Mutable(index);
}
inline ::FISHINFO* Zone_FishInfo_Notify::add_stfishes() {
  return stfishes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FISHINFO >&
Zone_FishInfo_Notify::stfishes() const {
  return stfishes_;
}
inline ::google::protobuf::RepeatedPtrField< ::FISHINFO >*
Zone_FishInfo_Notify::mutable_stfishes() {
  return &stfishes_;
}

// -------------------------------------------------------------------

// POS

// optional int32 iX = 1;
inline bool POS::has_ix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void POS::set_has_ix() {
  _has_bits_[0] |= 0x00000001u;
}
inline void POS::clear_has_ix() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void POS::clear_ix() {
  ix_ = 0;
  clear_has_ix();
}
inline ::google::protobuf::int32 POS::ix() const {
  return ix_;
}
inline void POS::set_ix(::google::protobuf::int32 value) {
  set_has_ix();
  ix_ = value;
}

// optional int32 iY = 2;
inline bool POS::has_iy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void POS::set_has_iy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void POS::clear_has_iy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void POS::clear_iy() {
  iy_ = 0;
  clear_has_iy();
}
inline ::google::protobuf::int32 POS::iy() const {
  return iy_;
}
inline void POS::set_iy(::google::protobuf::int32 value) {
  set_has_iy();
  iy_ = value;
}

// -------------------------------------------------------------------

// BULLETINFO

// optional uint32 uUniqID = 1;
inline bool BULLETINFO::has_uuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BULLETINFO::set_has_uuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BULLETINFO::clear_has_uuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BULLETINFO::clear_uuniqid() {
  uuniqid_ = 0u;
  clear_has_uuniqid();
}
inline ::google::protobuf::uint32 BULLETINFO::uuniqid() const {
  return uuniqid_;
}
inline void BULLETINFO::set_uuniqid(::google::protobuf::uint32 value) {
  set_has_uuniqid();
  uuniqid_ = value;
}

// optional int32 iGunID = 2;
inline bool BULLETINFO::has_igunid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BULLETINFO::set_has_igunid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BULLETINFO::clear_has_igunid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BULLETINFO::clear_igunid() {
  igunid_ = 0;
  clear_has_igunid();
}
inline ::google::protobuf::int32 BULLETINFO::igunid() const {
  return igunid_;
}
inline void BULLETINFO::set_igunid(::google::protobuf::int32 value) {
  set_has_igunid();
  igunid_ = value;
}

// optional int32 iSeat = 3;
inline bool BULLETINFO::has_iseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BULLETINFO::set_has_iseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BULLETINFO::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BULLETINFO::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 BULLETINFO::iseat() const {
  return iseat_;
}
inline void BULLETINFO::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional .POS stTargetPos = 4;
inline bool BULLETINFO::has_sttargetpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BULLETINFO::set_has_sttargetpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BULLETINFO::clear_has_sttargetpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BULLETINFO::clear_sttargetpos() {
  if (sttargetpos_ != NULL) sttargetpos_->::POS::Clear();
  clear_has_sttargetpos();
}
inline const ::POS& BULLETINFO::sttargetpos() const {
  return sttargetpos_ != NULL ? *sttargetpos_ : *default_instance_->sttargetpos_;
}
inline ::POS* BULLETINFO::mutable_sttargetpos() {
  set_has_sttargetpos();
  if (sttargetpos_ == NULL) sttargetpos_ = new ::POS;
  return sttargetpos_;
}
inline ::POS* BULLETINFO::release_sttargetpos() {
  clear_has_sttargetpos();
  ::POS* temp = sttargetpos_;
  sttargetpos_ = NULL;
  return temp;
}
inline void BULLETINFO::set_allocated_sttargetpos(::POS* sttargetpos) {
  delete sttargetpos_;
  sttargetpos_ = sttargetpos;
  if (sttargetpos) {
    set_has_sttargetpos();
  } else {
    clear_has_sttargetpos();
  }
}

// optional int64 lShootTime = 5;
inline bool BULLETINFO::has_lshoottime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BULLETINFO::set_has_lshoottime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BULLETINFO::clear_has_lshoottime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BULLETINFO::clear_lshoottime() {
  lshoottime_ = GOOGLE_LONGLONG(0);
  clear_has_lshoottime();
}
inline ::google::protobuf::int64 BULLETINFO::lshoottime() const {
  return lshoottime_;
}
inline void BULLETINFO::set_lshoottime(::google::protobuf::int64 value) {
  set_has_lshoottime();
  lshoottime_ = value;
}

// optional uint32 uFishUniqID = 6;
inline bool BULLETINFO::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BULLETINFO::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BULLETINFO::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BULLETINFO::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 BULLETINFO::ufishuniqid() const {
  return ufishuniqid_;
}
inline void BULLETINFO::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional bool bIsAimFormFish = 7;
inline bool BULLETINFO::has_bisaimformfish() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BULLETINFO::set_has_bisaimformfish() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BULLETINFO::clear_has_bisaimformfish() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BULLETINFO::clear_bisaimformfish() {
  bisaimformfish_ = false;
  clear_has_bisaimformfish();
}
inline bool BULLETINFO::bisaimformfish() const {
  return bisaimformfish_;
}
inline void BULLETINFO::set_bisaimformfish(bool value) {
  set_has_bisaimformfish();
  bisaimformfish_ = value;
}

// optional int32 iFishIndex = 8;
inline bool BULLETINFO::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BULLETINFO::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BULLETINFO::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BULLETINFO::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 BULLETINFO::ifishindex() const {
  return ifishindex_;
}
inline void BULLETINFO::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// -------------------------------------------------------------------

// Zone_BulletInfo_Notify

// repeated .BULLETINFO stBullets = 1;
inline int Zone_BulletInfo_Notify::stbullets_size() const {
  return stbullets_.size();
}
inline void Zone_BulletInfo_Notify::clear_stbullets() {
  stbullets_.Clear();
}
inline const ::BULLETINFO& Zone_BulletInfo_Notify::stbullets(int index) const {
  return stbullets_.Get(index);
}
inline ::BULLETINFO* Zone_BulletInfo_Notify::mutable_stbullets(int index) {
  return stbullets_.Mutable(index);
}
inline ::BULLETINFO* Zone_BulletInfo_Notify::add_stbullets() {
  return stbullets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BULLETINFO >&
Zone_BulletInfo_Notify::stbullets() const {
  return stbullets_;
}
inline ::google::protobuf::RepeatedPtrField< ::BULLETINFO >*
Zone_BulletInfo_Notify::mutable_stbullets() {
  return &stbullets_;
}

// -------------------------------------------------------------------

// FORMFISHOUTINFO

// optional int32 iOutID = 1;
inline bool FORMFISHOUTINFO::has_ioutid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FORMFISHOUTINFO::set_has_ioutid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FORMFISHOUTINFO::clear_has_ioutid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FORMFISHOUTINFO::clear_ioutid() {
  ioutid_ = 0;
  clear_has_ioutid();
}
inline ::google::protobuf::int32 FORMFISHOUTINFO::ioutid() const {
  return ioutid_;
}
inline void FORMFISHOUTINFO::set_ioutid(::google::protobuf::int32 value) {
  set_has_ioutid();
  ioutid_ = value;
}

// optional int32 iFishID = 2;
inline bool FORMFISHOUTINFO::has_ifishid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FORMFISHOUTINFO::set_has_ifishid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FORMFISHOUTINFO::clear_has_ifishid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FORMFISHOUTINFO::clear_ifishid() {
  ifishid_ = 0;
  clear_has_ifishid();
}
inline ::google::protobuf::int32 FORMFISHOUTINFO::ifishid() const {
  return ifishid_;
}
inline void FORMFISHOUTINFO::set_ifishid(::google::protobuf::int32 value) {
  set_has_ifishid();
  ifishid_ = value;
}

// optional int32 iFishSeqID = 3;
inline bool FORMFISHOUTINFO::has_ifishseqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FORMFISHOUTINFO::set_has_ifishseqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FORMFISHOUTINFO::clear_has_ifishseqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FORMFISHOUTINFO::clear_ifishseqid() {
  ifishseqid_ = 0;
  clear_has_ifishseqid();
}
inline ::google::protobuf::int32 FORMFISHOUTINFO::ifishseqid() const {
  return ifishseqid_;
}
inline void FORMFISHOUTINFO::set_ifishseqid(::google::protobuf::int32 value) {
  set_has_ifishseqid();
  ifishseqid_ = value;
}

// optional int32 iTraceID = 4;
inline bool FORMFISHOUTINFO::has_itraceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FORMFISHOUTINFO::set_has_itraceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FORMFISHOUTINFO::clear_has_itraceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FORMFISHOUTINFO::clear_itraceid() {
  itraceid_ = 0;
  clear_has_itraceid();
}
inline ::google::protobuf::int32 FORMFISHOUTINFO::itraceid() const {
  return itraceid_;
}
inline void FORMFISHOUTINFO::set_itraceid(::google::protobuf::int32 value) {
  set_has_itraceid();
  itraceid_ = value;
}

// optional int64 lBeginTime = 5;
inline bool FORMFISHOUTINFO::has_lbegintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FORMFISHOUTINFO::set_has_lbegintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FORMFISHOUTINFO::clear_has_lbegintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FORMFISHOUTINFO::clear_lbegintime() {
  lbegintime_ = GOOGLE_LONGLONG(0);
  clear_has_lbegintime();
}
inline ::google::protobuf::int64 FORMFISHOUTINFO::lbegintime() const {
  return lbegintime_;
}
inline void FORMFISHOUTINFO::set_lbegintime(::google::protobuf::int64 value) {
  set_has_lbegintime();
  lbegintime_ = value;
}

// optional int32 iRemaiNum = 6;
inline bool FORMFISHOUTINFO::has_iremainum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FORMFISHOUTINFO::set_has_iremainum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FORMFISHOUTINFO::clear_has_iremainum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FORMFISHOUTINFO::clear_iremainum() {
  iremainum_ = 0;
  clear_has_iremainum();
}
inline ::google::protobuf::int32 FORMFISHOUTINFO::iremainum() const {
  return iremainum_;
}
inline void FORMFISHOUTINFO::set_iremainum(::google::protobuf::int32 value) {
  set_has_iremainum();
  iremainum_ = value;
}

// optional int32 iInterval = 7;
inline bool FORMFISHOUTINFO::has_iinterval() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FORMFISHOUTINFO::set_has_iinterval() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FORMFISHOUTINFO::clear_has_iinterval() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FORMFISHOUTINFO::clear_iinterval() {
  iinterval_ = 0;
  clear_has_iinterval();
}
inline ::google::protobuf::int32 FORMFISHOUTINFO::iinterval() const {
  return iinterval_;
}
inline void FORMFISHOUTINFO::set_iinterval(::google::protobuf::int32 value) {
  set_has_iinterval();
  iinterval_ = value;
}

// repeated uint64 szAliveFish = 8;
inline int FORMFISHOUTINFO::szalivefish_size() const {
  return szalivefish_.size();
}
inline void FORMFISHOUTINFO::clear_szalivefish() {
  szalivefish_.Clear();
}
inline ::google::protobuf::uint64 FORMFISHOUTINFO::szalivefish(int index) const {
  return szalivefish_.Get(index);
}
inline void FORMFISHOUTINFO::set_szalivefish(int index, ::google::protobuf::uint64 value) {
  szalivefish_.Set(index, value);
}
inline void FORMFISHOUTINFO::add_szalivefish(::google::protobuf::uint64 value) {
  szalivefish_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FORMFISHOUTINFO::szalivefish() const {
  return szalivefish_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FORMFISHOUTINFO::mutable_szalivefish() {
  return &szalivefish_;
}

// -------------------------------------------------------------------

// Zone_FormInfo_Notify

// repeated .FORMFISHOUTINFO stFormInfos = 1;
inline int Zone_FormInfo_Notify::stforminfos_size() const {
  return stforminfos_.size();
}
inline void Zone_FormInfo_Notify::clear_stforminfos() {
  stforminfos_.Clear();
}
inline const ::FORMFISHOUTINFO& Zone_FormInfo_Notify::stforminfos(int index) const {
  return stforminfos_.Get(index);
}
inline ::FORMFISHOUTINFO* Zone_FormInfo_Notify::mutable_stforminfos(int index) {
  return stforminfos_.Mutable(index);
}
inline ::FORMFISHOUTINFO* Zone_FormInfo_Notify::add_stforminfos() {
  return stforminfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FORMFISHOUTINFO >&
Zone_FormInfo_Notify::stforminfos() const {
  return stforminfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::FORMFISHOUTINFO >*
Zone_FormInfo_Notify::mutable_stforminfos() {
  return &stforminfos_;
}

// -------------------------------------------------------------------

// Zone_ExitFish_Request

// optional int32 iFishRoomID = 1;
inline bool Zone_ExitFish_Request::has_ifishroomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ExitFish_Request::set_has_ifishroomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ExitFish_Request::clear_has_ifishroomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ExitFish_Request::clear_ifishroomid() {
  ifishroomid_ = 0;
  clear_has_ifishroomid();
}
inline ::google::protobuf::int32 Zone_ExitFish_Request::ifishroomid() const {
  return ifishroomid_;
}
inline void Zone_ExitFish_Request::set_ifishroomid(::google::protobuf::int32 value) {
  set_has_ifishroomid();
  ifishroomid_ = value;
}

// -------------------------------------------------------------------

// Zone_ExitFish_Response

// optional int32 iResult = 1;
inline bool Zone_ExitFish_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ExitFish_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ExitFish_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ExitFish_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_ExitFish_Response::iresult() const {
  return iresult_;
}
inline void Zone_ExitFish_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_ExitFish_Notify

// optional int32 iSeat = 1;
inline bool Zone_ExitFish_Notify::has_iseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ExitFish_Notify::set_has_iseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ExitFish_Notify::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ExitFish_Notify::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 Zone_ExitFish_Notify::iseat() const {
  return iseat_;
}
inline void Zone_ExitFish_Notify::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional bool bForceExit = 2;
inline bool Zone_ExitFish_Notify::has_bforceexit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ExitFish_Notify::set_has_bforceexit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ExitFish_Notify::clear_has_bforceexit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ExitFish_Notify::clear_bforceexit() {
  bforceexit_ = false;
  clear_has_bforceexit();
}
inline bool Zone_ExitFish_Notify::bforceexit() const {
  return bforceexit_;
}
inline void Zone_ExitFish_Notify::set_bforceexit(bool value) {
  set_has_bforceexit();
  bforceexit_ = value;
}

// -------------------------------------------------------------------

// Zone_ChangeGun_Request

// optional int32 iNewGunID = 1;
inline bool Zone_ChangeGun_Request::has_inewgunid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChangeGun_Request::set_has_inewgunid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChangeGun_Request::clear_has_inewgunid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChangeGun_Request::clear_inewgunid() {
  inewgunid_ = 0;
  clear_has_inewgunid();
}
inline ::google::protobuf::int32 Zone_ChangeGun_Request::inewgunid() const {
  return inewgunid_;
}
inline void Zone_ChangeGun_Request::set_inewgunid(::google::protobuf::int32 value) {
  set_has_inewgunid();
  inewgunid_ = value;
}

// optional bool bIsStyle = 2;
inline bool Zone_ChangeGun_Request::has_bisstyle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChangeGun_Request::set_has_bisstyle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChangeGun_Request::clear_has_bisstyle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChangeGun_Request::clear_bisstyle() {
  bisstyle_ = false;
  clear_has_bisstyle();
}
inline bool Zone_ChangeGun_Request::bisstyle() const {
  return bisstyle_;
}
inline void Zone_ChangeGun_Request::set_bisstyle(bool value) {
  set_has_bisstyle();
  bisstyle_ = value;
}

// -------------------------------------------------------------------

// Zone_ChangeGun_Response

// optional int32 iResult = 1;
inline bool Zone_ChangeGun_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChangeGun_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChangeGun_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChangeGun_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_ChangeGun_Response::iresult() const {
  return iresult_;
}
inline void Zone_ChangeGun_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iNewGunID = 2;
inline bool Zone_ChangeGun_Response::has_inewgunid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChangeGun_Response::set_has_inewgunid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChangeGun_Response::clear_has_inewgunid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChangeGun_Response::clear_inewgunid() {
  inewgunid_ = 0;
  clear_has_inewgunid();
}
inline ::google::protobuf::int32 Zone_ChangeGun_Response::inewgunid() const {
  return inewgunid_;
}
inline void Zone_ChangeGun_Response::set_inewgunid(::google::protobuf::int32 value) {
  set_has_inewgunid();
  inewgunid_ = value;
}

// optional bool bIsStyle = 3;
inline bool Zone_ChangeGun_Response::has_bisstyle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_ChangeGun_Response::set_has_bisstyle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_ChangeGun_Response::clear_has_bisstyle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_ChangeGun_Response::clear_bisstyle() {
  bisstyle_ = false;
  clear_has_bisstyle();
}
inline bool Zone_ChangeGun_Response::bisstyle() const {
  return bisstyle_;
}
inline void Zone_ChangeGun_Response::set_bisstyle(bool value) {
  set_has_bisstyle();
  bisstyle_ = value;
}

// -------------------------------------------------------------------

// Zone_ChangeGun_Notify

// optional int32 iSeat = 1;
inline bool Zone_ChangeGun_Notify::has_iseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChangeGun_Notify::set_has_iseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChangeGun_Notify::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChangeGun_Notify::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 Zone_ChangeGun_Notify::iseat() const {
  return iseat_;
}
inline void Zone_ChangeGun_Notify::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional int32 iNewGunID = 2;
inline bool Zone_ChangeGun_Notify::has_inewgunid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChangeGun_Notify::set_has_inewgunid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChangeGun_Notify::clear_has_inewgunid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChangeGun_Notify::clear_inewgunid() {
  inewgunid_ = 0;
  clear_has_inewgunid();
}
inline ::google::protobuf::int32 Zone_ChangeGun_Notify::inewgunid() const {
  return inewgunid_;
}
inline void Zone_ChangeGun_Notify::set_inewgunid(::google::protobuf::int32 value) {
  set_has_inewgunid();
  inewgunid_ = value;
}

// optional bool bIsStyle = 3;
inline bool Zone_ChangeGun_Notify::has_bisstyle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_ChangeGun_Notify::set_has_bisstyle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_ChangeGun_Notify::clear_has_bisstyle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_ChangeGun_Notify::clear_bisstyle() {
  bisstyle_ = false;
  clear_has_bisstyle();
}
inline bool Zone_ChangeGun_Notify::bisstyle() const {
  return bisstyle_;
}
inline void Zone_ChangeGun_Notify::set_bisstyle(bool value) {
  set_has_bisstyle();
  bisstyle_ = value;
}

// -------------------------------------------------------------------

// Zone_ShootBullet_Request

// optional int64 lShootTime = 1;
inline bool Zone_ShootBullet_Request::has_lshoottime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ShootBullet_Request::set_has_lshoottime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ShootBullet_Request::clear_has_lshoottime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ShootBullet_Request::clear_lshoottime() {
  lshoottime_ = GOOGLE_LONGLONG(0);
  clear_has_lshoottime();
}
inline ::google::protobuf::int64 Zone_ShootBullet_Request::lshoottime() const {
  return lshoottime_;
}
inline void Zone_ShootBullet_Request::set_lshoottime(::google::protobuf::int64 value) {
  set_has_lshoottime();
  lshoottime_ = value;
}

// optional int32 iPosX = 2;
inline bool Zone_ShootBullet_Request::has_iposx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ShootBullet_Request::set_has_iposx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ShootBullet_Request::clear_has_iposx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ShootBullet_Request::clear_iposx() {
  iposx_ = 0;
  clear_has_iposx();
}
inline ::google::protobuf::int32 Zone_ShootBullet_Request::iposx() const {
  return iposx_;
}
inline void Zone_ShootBullet_Request::set_iposx(::google::protobuf::int32 value) {
  set_has_iposx();
  iposx_ = value;
}

// optional int32 iPosY = 3;
inline bool Zone_ShootBullet_Request::has_iposy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_ShootBullet_Request::set_has_iposy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_ShootBullet_Request::clear_has_iposy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_ShootBullet_Request::clear_iposy() {
  iposy_ = 0;
  clear_has_iposy();
}
inline ::google::protobuf::int32 Zone_ShootBullet_Request::iposy() const {
  return iposy_;
}
inline void Zone_ShootBullet_Request::set_iposy(::google::protobuf::int32 value) {
  set_has_iposy();
  iposy_ = value;
}

// optional bool bAutoShoot = 4;
inline bool Zone_ShootBullet_Request::has_bautoshoot() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_ShootBullet_Request::set_has_bautoshoot() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_ShootBullet_Request::clear_has_bautoshoot() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_ShootBullet_Request::clear_bautoshoot() {
  bautoshoot_ = false;
  clear_has_bautoshoot();
}
inline bool Zone_ShootBullet_Request::bautoshoot() const {
  return bautoshoot_;
}
inline void Zone_ShootBullet_Request::set_bautoshoot(bool value) {
  set_has_bautoshoot();
  bautoshoot_ = value;
}

// -------------------------------------------------------------------

// Zone_ShootBullet_Response

// optional int32 iResult = 1;
inline bool Zone_ShootBullet_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ShootBullet_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ShootBullet_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ShootBullet_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_ShootBullet_Response::iresult() const {
  return iresult_;
}
inline void Zone_ShootBullet_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_ShootBullet_Notify

// optional uint32 uUniqID = 1;
inline bool Zone_ShootBullet_Notify::has_uuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_uuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ShootBullet_Notify::clear_has_uuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ShootBullet_Notify::clear_uuniqid() {
  uuniqid_ = 0u;
  clear_has_uuniqid();
}
inline ::google::protobuf::uint32 Zone_ShootBullet_Notify::uuniqid() const {
  return uuniqid_;
}
inline void Zone_ShootBullet_Notify::set_uuniqid(::google::protobuf::uint32 value) {
  set_has_uuniqid();
  uuniqid_ = value;
}

// optional int32 iGunID = 2;
inline bool Zone_ShootBullet_Notify::has_igunid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_igunid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ShootBullet_Notify::clear_has_igunid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ShootBullet_Notify::clear_igunid() {
  igunid_ = 0;
  clear_has_igunid();
}
inline ::google::protobuf::int32 Zone_ShootBullet_Notify::igunid() const {
  return igunid_;
}
inline void Zone_ShootBullet_Notify::set_igunid(::google::protobuf::int32 value) {
  set_has_igunid();
  igunid_ = value;
}

// optional int32 iSeat = 3;
inline bool Zone_ShootBullet_Notify::has_iseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_iseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_ShootBullet_Notify::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_ShootBullet_Notify::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 Zone_ShootBullet_Notify::iseat() const {
  return iseat_;
}
inline void Zone_ShootBullet_Notify::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional .POS stTargetPos = 4;
inline bool Zone_ShootBullet_Notify::has_sttargetpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_sttargetpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_ShootBullet_Notify::clear_has_sttargetpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_ShootBullet_Notify::clear_sttargetpos() {
  if (sttargetpos_ != NULL) sttargetpos_->::POS::Clear();
  clear_has_sttargetpos();
}
inline const ::POS& Zone_ShootBullet_Notify::sttargetpos() const {
  return sttargetpos_ != NULL ? *sttargetpos_ : *default_instance_->sttargetpos_;
}
inline ::POS* Zone_ShootBullet_Notify::mutable_sttargetpos() {
  set_has_sttargetpos();
  if (sttargetpos_ == NULL) sttargetpos_ = new ::POS;
  return sttargetpos_;
}
inline ::POS* Zone_ShootBullet_Notify::release_sttargetpos() {
  clear_has_sttargetpos();
  ::POS* temp = sttargetpos_;
  sttargetpos_ = NULL;
  return temp;
}
inline void Zone_ShootBullet_Notify::set_allocated_sttargetpos(::POS* sttargetpos) {
  delete sttargetpos_;
  sttargetpos_ = sttargetpos;
  if (sttargetpos) {
    set_has_sttargetpos();
  } else {
    clear_has_sttargetpos();
  }
}

// optional int64 lShootTime = 5;
inline bool Zone_ShootBullet_Notify::has_lshoottime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_lshoottime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_ShootBullet_Notify::clear_has_lshoottime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_ShootBullet_Notify::clear_lshoottime() {
  lshoottime_ = GOOGLE_LONGLONG(0);
  clear_has_lshoottime();
}
inline ::google::protobuf::int64 Zone_ShootBullet_Notify::lshoottime() const {
  return lshoottime_;
}
inline void Zone_ShootBullet_Notify::set_lshoottime(::google::protobuf::int64 value) {
  set_has_lshoottime();
  lshoottime_ = value;
}

// optional uint32 uFishUniqID = 6;
inline bool Zone_ShootBullet_Notify::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Zone_ShootBullet_Notify::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Zone_ShootBullet_Notify::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_ShootBullet_Notify::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_ShootBullet_Notify::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional bool bIsAimFormFish = 7;
inline bool Zone_ShootBullet_Notify::has_bisaimformfish() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_bisaimformfish() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Zone_ShootBullet_Notify::clear_has_bisaimformfish() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Zone_ShootBullet_Notify::clear_bisaimformfish() {
  bisaimformfish_ = false;
  clear_has_bisaimformfish();
}
inline bool Zone_ShootBullet_Notify::bisaimformfish() const {
  return bisaimformfish_;
}
inline void Zone_ShootBullet_Notify::set_bisaimformfish(bool value) {
  set_has_bisaimformfish();
  bisaimformfish_ = value;
}

// optional int32 iFishIndex = 8;
inline bool Zone_ShootBullet_Notify::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Zone_ShootBullet_Notify::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Zone_ShootBullet_Notify::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_ShootBullet_Notify::ifishindex() const {
  return ifishindex_;
}
inline void Zone_ShootBullet_Notify::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// optional bool bIsWildBullet = 9;
inline bool Zone_ShootBullet_Notify::has_biswildbullet() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Zone_ShootBullet_Notify::set_has_biswildbullet() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Zone_ShootBullet_Notify::clear_has_biswildbullet() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Zone_ShootBullet_Notify::clear_biswildbullet() {
  biswildbullet_ = false;
  clear_has_biswildbullet();
}
inline bool Zone_ShootBullet_Notify::biswildbullet() const {
  return biswildbullet_;
}
inline void Zone_ShootBullet_Notify::set_biswildbullet(bool value) {
  set_has_biswildbullet();
  biswildbullet_ = value;
}

// -------------------------------------------------------------------

// Zone_HitFish_Request

// optional int64 lHitTime = 1;
inline bool Zone_HitFish_Request::has_lhittime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_HitFish_Request::set_has_lhittime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_HitFish_Request::clear_has_lhittime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_HitFish_Request::clear_lhittime() {
  lhittime_ = GOOGLE_LONGLONG(0);
  clear_has_lhittime();
}
inline ::google::protobuf::int64 Zone_HitFish_Request::lhittime() const {
  return lhittime_;
}
inline void Zone_HitFish_Request::set_lhittime(::google::protobuf::int64 value) {
  set_has_lhittime();
  lhittime_ = value;
}

// optional uint32 uBulletUniqID = 2;
inline bool Zone_HitFish_Request::has_ubulletuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_HitFish_Request::set_has_ubulletuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_HitFish_Request::clear_has_ubulletuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_HitFish_Request::clear_ubulletuniqid() {
  ubulletuniqid_ = 0u;
  clear_has_ubulletuniqid();
}
inline ::google::protobuf::uint32 Zone_HitFish_Request::ubulletuniqid() const {
  return ubulletuniqid_;
}
inline void Zone_HitFish_Request::set_ubulletuniqid(::google::protobuf::uint32 value) {
  set_has_ubulletuniqid();
  ubulletuniqid_ = value;
}

// optional uint32 uFishUniqID = 3;
inline bool Zone_HitFish_Request::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_HitFish_Request::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_HitFish_Request::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_HitFish_Request::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_HitFish_Request::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_HitFish_Request::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional int32 iFishIndex = 4;
inline bool Zone_HitFish_Request::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_HitFish_Request::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_HitFish_Request::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_HitFish_Request::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_HitFish_Request::ifishindex() const {
  return ifishindex_;
}
inline void Zone_HitFish_Request::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// -------------------------------------------------------------------

// Zone_HitFish_Response

// optional int32 iResult = 1;
inline bool Zone_HitFish_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_HitFish_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_HitFish_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_HitFish_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_HitFish_Response::iresult() const {
  return iresult_;
}
inline void Zone_HitFish_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_HitFish_Notify

// optional uint32 uBulletUniqID = 1;
inline bool Zone_HitFish_Notify::has_ubulletuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_HitFish_Notify::set_has_ubulletuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_HitFish_Notify::clear_has_ubulletuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_HitFish_Notify::clear_ubulletuniqid() {
  ubulletuniqid_ = 0u;
  clear_has_ubulletuniqid();
}
inline ::google::protobuf::uint32 Zone_HitFish_Notify::ubulletuniqid() const {
  return ubulletuniqid_;
}
inline void Zone_HitFish_Notify::set_ubulletuniqid(::google::protobuf::uint32 value) {
  set_has_ubulletuniqid();
  ubulletuniqid_ = value;
}

// optional uint32 uFishUniqID = 2;
inline bool Zone_HitFish_Notify::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_HitFish_Notify::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_HitFish_Notify::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_HitFish_Notify::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_HitFish_Notify::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_HitFish_Notify::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional int32 iSeat = 3;
inline bool Zone_HitFish_Notify::has_iseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_HitFish_Notify::set_has_iseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_HitFish_Notify::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_HitFish_Notify::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 Zone_HitFish_Notify::iseat() const {
  return iseat_;
}
inline void Zone_HitFish_Notify::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional int32 iRewardCoins = 4;
inline bool Zone_HitFish_Notify::has_irewardcoins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_HitFish_Notify::set_has_irewardcoins() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_HitFish_Notify::clear_has_irewardcoins() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_HitFish_Notify::clear_irewardcoins() {
  irewardcoins_ = 0;
  clear_has_irewardcoins();
}
inline ::google::protobuf::int32 Zone_HitFish_Notify::irewardcoins() const {
  return irewardcoins_;
}
inline void Zone_HitFish_Notify::set_irewardcoins(::google::protobuf::int32 value) {
  set_has_irewardcoins();
  irewardcoins_ = value;
}

// optional bool bIsForm = 5;
inline bool Zone_HitFish_Notify::has_bisform() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_HitFish_Notify::set_has_bisform() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_HitFish_Notify::clear_has_bisform() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_HitFish_Notify::clear_bisform() {
  bisform_ = false;
  clear_has_bisform();
}
inline bool Zone_HitFish_Notify::bisform() const {
  return bisform_;
}
inline void Zone_HitFish_Notify::set_bisform(bool value) {
  set_has_bisform();
  bisform_ = value;
}

// optional int32 iFishIndex = 6;
inline bool Zone_HitFish_Notify::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Zone_HitFish_Notify::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Zone_HitFish_Notify::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Zone_HitFish_Notify::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_HitFish_Notify::ifishindex() const {
  return ifishindex_;
}
inline void Zone_HitFish_Notify::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// optional int32 iMultiFish = 7;
inline bool Zone_HitFish_Notify::has_imultifish() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Zone_HitFish_Notify::set_has_imultifish() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Zone_HitFish_Notify::clear_has_imultifish() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Zone_HitFish_Notify::clear_imultifish() {
  imultifish_ = 0;
  clear_has_imultifish();
}
inline ::google::protobuf::int32 Zone_HitFish_Notify::imultifish() const {
  return imultifish_;
}
inline void Zone_HitFish_Notify::set_imultifish(::google::protobuf::int32 value) {
  set_has_imultifish();
  imultifish_ = value;
}

// optional int32 iBulletLiveTime = 8;
inline bool Zone_HitFish_Notify::has_ibulletlivetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Zone_HitFish_Notify::set_has_ibulletlivetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Zone_HitFish_Notify::clear_has_ibulletlivetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Zone_HitFish_Notify::clear_ibulletlivetime() {
  ibulletlivetime_ = 0;
  clear_has_ibulletlivetime();
}
inline ::google::protobuf::int32 Zone_HitFish_Notify::ibulletlivetime() const {
  return ibulletlivetime_;
}
inline void Zone_HitFish_Notify::set_ibulletlivetime(::google::protobuf::int32 value) {
  set_has_ibulletlivetime();
  ibulletlivetime_ = value;
}

// -------------------------------------------------------------------

// Zone_HitFormFish_Request

// optional uint32 uBulletUniqID = 1;
inline bool Zone_HitFormFish_Request::has_ubulletuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_HitFormFish_Request::set_has_ubulletuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_HitFormFish_Request::clear_has_ubulletuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_HitFormFish_Request::clear_ubulletuniqid() {
  ubulletuniqid_ = 0u;
  clear_has_ubulletuniqid();
}
inline ::google::protobuf::uint32 Zone_HitFormFish_Request::ubulletuniqid() const {
  return ubulletuniqid_;
}
inline void Zone_HitFormFish_Request::set_ubulletuniqid(::google::protobuf::uint32 value) {
  set_has_ubulletuniqid();
  ubulletuniqid_ = value;
}

// optional int32 iFormOutID = 2;
inline bool Zone_HitFormFish_Request::has_iformoutid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_HitFormFish_Request::set_has_iformoutid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_HitFormFish_Request::clear_has_iformoutid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_HitFormFish_Request::clear_iformoutid() {
  iformoutid_ = 0;
  clear_has_iformoutid();
}
inline ::google::protobuf::int32 Zone_HitFormFish_Request::iformoutid() const {
  return iformoutid_;
}
inline void Zone_HitFormFish_Request::set_iformoutid(::google::protobuf::int32 value) {
  set_has_iformoutid();
  iformoutid_ = value;
}

// optional int32 iFishIndex = 3;
inline bool Zone_HitFormFish_Request::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_HitFormFish_Request::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_HitFormFish_Request::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_HitFormFish_Request::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_HitFormFish_Request::ifishindex() const {
  return ifishindex_;
}
inline void Zone_HitFormFish_Request::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// optional int64 lHitTime = 4;
inline bool Zone_HitFormFish_Request::has_lhittime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_HitFormFish_Request::set_has_lhittime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_HitFormFish_Request::clear_has_lhittime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_HitFormFish_Request::clear_lhittime() {
  lhittime_ = GOOGLE_LONGLONG(0);
  clear_has_lhittime();
}
inline ::google::protobuf::int64 Zone_HitFormFish_Request::lhittime() const {
  return lhittime_;
}
inline void Zone_HitFormFish_Request::set_lhittime(::google::protobuf::int64 value) {
  set_has_lhittime();
  lhittime_ = value;
}

// -------------------------------------------------------------------

// Zone_HitFormFish_Response

// optional int32 iResult = 1;
inline bool Zone_HitFormFish_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_HitFormFish_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_HitFormFish_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_HitFormFish_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_HitFormFish_Response::iresult() const {
  return iresult_;
}
inline void Zone_HitFormFish_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_BoomFishInfo_Notify

// repeated uint32 uFishUniqIDs = 1;
inline int Zone_BoomFishInfo_Notify::ufishuniqids_size() const {
  return ufishuniqids_.size();
}
inline void Zone_BoomFishInfo_Notify::clear_ufishuniqids() {
  ufishuniqids_.Clear();
}
inline ::google::protobuf::uint32 Zone_BoomFishInfo_Notify::ufishuniqids(int index) const {
  return ufishuniqids_.Get(index);
}
inline void Zone_BoomFishInfo_Notify::set_ufishuniqids(int index, ::google::protobuf::uint32 value) {
  ufishuniqids_.Set(index, value);
}
inline void Zone_BoomFishInfo_Notify::add_ufishuniqids(::google::protobuf::uint32 value) {
  ufishuniqids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Zone_BoomFishInfo_Notify::ufishuniqids() const {
  return ufishuniqids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Zone_BoomFishInfo_Notify::mutable_ufishuniqids() {
  return &ufishuniqids_;
}

// repeated int32 uSmallFishIndex = 2;
inline int Zone_BoomFishInfo_Notify::usmallfishindex_size() const {
  return usmallfishindex_.size();
}
inline void Zone_BoomFishInfo_Notify::clear_usmallfishindex() {
  usmallfishindex_.Clear();
}
inline ::google::protobuf::int32 Zone_BoomFishInfo_Notify::usmallfishindex(int index) const {
  return usmallfishindex_.Get(index);
}
inline void Zone_BoomFishInfo_Notify::set_usmallfishindex(int index, ::google::protobuf::int32 value) {
  usmallfishindex_.Set(index, value);
}
inline void Zone_BoomFishInfo_Notify::add_usmallfishindex(::google::protobuf::int32 value) {
  usmallfishindex_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Zone_BoomFishInfo_Notify::usmallfishindex() const {
  return usmallfishindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Zone_BoomFishInfo_Notify::mutable_usmallfishindex() {
  return &usmallfishindex_;
}

// repeated uint32 uFormUniqIDs = 3;
inline int Zone_BoomFishInfo_Notify::uformuniqids_size() const {
  return uformuniqids_.size();
}
inline void Zone_BoomFishInfo_Notify::clear_uformuniqids() {
  uformuniqids_.Clear();
}
inline ::google::protobuf::uint32 Zone_BoomFishInfo_Notify::uformuniqids(int index) const {
  return uformuniqids_.Get(index);
}
inline void Zone_BoomFishInfo_Notify::set_uformuniqids(int index, ::google::protobuf::uint32 value) {
  uformuniqids_.Set(index, value);
}
inline void Zone_BoomFishInfo_Notify::add_uformuniqids(::google::protobuf::uint32 value) {
  uformuniqids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Zone_BoomFishInfo_Notify::uformuniqids() const {
  return uformuniqids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Zone_BoomFishInfo_Notify::mutable_uformuniqids() {
  return &uformuniqids_;
}

// optional int32 iSeat = 4;
inline bool Zone_BoomFishInfo_Notify::has_iseat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_BoomFishInfo_Notify::set_has_iseat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_BoomFishInfo_Notify::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_BoomFishInfo_Notify::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 Zone_BoomFishInfo_Notify::iseat() const {
  return iseat_;
}
inline void Zone_BoomFishInfo_Notify::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// -------------------------------------------------------------------

// Zone_Lottery_Request

// -------------------------------------------------------------------

// Zone_Lottery_Response

// optional int32 iResult = 1;
inline bool Zone_Lottery_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Lottery_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Lottery_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Lottery_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_Lottery_Response::iresult() const {
  return iresult_;
}
inline void Zone_Lottery_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iLotteryItemID = 2;
inline bool Zone_Lottery_Response::has_ilotteryitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_Lottery_Response::set_has_ilotteryitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_Lottery_Response::clear_has_ilotteryitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_Lottery_Response::clear_ilotteryitemid() {
  ilotteryitemid_ = 0;
  clear_has_ilotteryitemid();
}
inline ::google::protobuf::int32 Zone_Lottery_Response::ilotteryitemid() const {
  return ilotteryitemid_;
}
inline void Zone_Lottery_Response::set_ilotteryitemid(::google::protobuf::int32 value) {
  set_has_ilotteryitemid();
  ilotteryitemid_ = value;
}

// -------------------------------------------------------------------

// Zone_AddTicket_Notify

// optional uint32 uiUin = 1;
inline bool Zone_AddTicket_Notify::has_uiuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_AddTicket_Notify::set_has_uiuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_AddTicket_Notify::clear_has_uiuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_AddTicket_Notify::clear_uiuin() {
  uiuin_ = 0u;
  clear_has_uiuin();
}
inline ::google::protobuf::uint32 Zone_AddTicket_Notify::uiuin() const {
  return uiuin_;
}
inline void Zone_AddTicket_Notify::set_uiuin(::google::protobuf::uint32 value) {
  set_has_uiuin();
  uiuin_ = value;
}

// optional uint32 uFishUniqID = 2;
inline bool Zone_AddTicket_Notify::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_AddTicket_Notify::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_AddTicket_Notify::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_AddTicket_Notify::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_AddTicket_Notify::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_AddTicket_Notify::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional bool bIsFormFish = 3;
inline bool Zone_AddTicket_Notify::has_bisformfish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_AddTicket_Notify::set_has_bisformfish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_AddTicket_Notify::clear_has_bisformfish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_AddTicket_Notify::clear_bisformfish() {
  bisformfish_ = false;
  clear_has_bisformfish();
}
inline bool Zone_AddTicket_Notify::bisformfish() const {
  return bisformfish_;
}
inline void Zone_AddTicket_Notify::set_bisformfish(bool value) {
  set_has_bisformfish();
  bisformfish_ = value;
}

// optional int32 iAddNum = 4;
inline bool Zone_AddTicket_Notify::has_iaddnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_AddTicket_Notify::set_has_iaddnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_AddTicket_Notify::clear_has_iaddnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_AddTicket_Notify::clear_iaddnum() {
  iaddnum_ = 0;
  clear_has_iaddnum();
}
inline ::google::protobuf::int32 Zone_AddTicket_Notify::iaddnum() const {
  return iaddnum_;
}
inline void Zone_AddTicket_Notify::set_iaddnum(::google::protobuf::int32 value) {
  set_has_iaddnum();
  iaddnum_ = value;
}

// -------------------------------------------------------------------

// QuestChange

// optional int32 iQuestID = 1;
inline bool QuestChange::has_iquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestChange::set_has_iquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestChange::clear_has_iquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestChange::clear_iquestid() {
  iquestid_ = 0;
  clear_has_iquestid();
}
inline ::google::protobuf::int32 QuestChange::iquestid() const {
  return iquestid_;
}
inline void QuestChange::set_iquestid(::google::protobuf::int32 value) {
  set_has_iquestid();
  iquestid_ = value;
}

// optional int32 iNum = 2;
inline bool QuestChange::has_inum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestChange::set_has_inum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestChange::clear_has_inum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestChange::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 QuestChange::inum() const {
  return inum_;
}
inline void QuestChange::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// optional int32 iChangeType = 3;
inline bool QuestChange::has_ichangetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestChange::set_has_ichangetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestChange::clear_has_ichangetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestChange::clear_ichangetype() {
  ichangetype_ = 0;
  clear_has_ichangetype();
}
inline ::google::protobuf::int32 QuestChange::ichangetype() const {
  return ichangetype_;
}
inline void QuestChange::set_ichangetype(::google::protobuf::int32 value) {
  set_has_ichangetype();
  ichangetype_ = value;
}

// -------------------------------------------------------------------

// Zone_QuestChange_Notify

// repeated .QuestChange stChanges = 1;
inline int Zone_QuestChange_Notify::stchanges_size() const {
  return stchanges_.size();
}
inline void Zone_QuestChange_Notify::clear_stchanges() {
  stchanges_.Clear();
}
inline const ::QuestChange& Zone_QuestChange_Notify::stchanges(int index) const {
  return stchanges_.Get(index);
}
inline ::QuestChange* Zone_QuestChange_Notify::mutable_stchanges(int index) {
  return stchanges_.Mutable(index);
}
inline ::QuestChange* Zone_QuestChange_Notify::add_stchanges() {
  return stchanges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestChange >&
Zone_QuestChange_Notify::stchanges() const {
  return stchanges_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestChange >*
Zone_QuestChange_Notify::mutable_stchanges() {
  return &stchanges_;
}

// optional int32 iAdventNum = 2;
inline bool Zone_QuestChange_Notify::has_iadventnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_QuestChange_Notify::set_has_iadventnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_QuestChange_Notify::clear_has_iadventnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_QuestChange_Notify::clear_iadventnum() {
  iadventnum_ = 0;
  clear_has_iadventnum();
}
inline ::google::protobuf::int32 Zone_QuestChange_Notify::iadventnum() const {
  return iadventnum_;
}
inline void Zone_QuestChange_Notify::set_iadventnum(::google::protobuf::int32 value) {
  set_has_iadventnum();
  iadventnum_ = value;
}

// optional int32 iAdventEndTime = 3;
inline bool Zone_QuestChange_Notify::has_iadventendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_QuestChange_Notify::set_has_iadventendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_QuestChange_Notify::clear_has_iadventendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_QuestChange_Notify::clear_iadventendtime() {
  iadventendtime_ = 0;
  clear_has_iadventendtime();
}
inline ::google::protobuf::int32 Zone_QuestChange_Notify::iadventendtime() const {
  return iadventendtime_;
}
inline void Zone_QuestChange_Notify::set_iadventendtime(::google::protobuf::int32 value) {
  set_has_iadventendtime();
  iadventendtime_ = value;
}

// -------------------------------------------------------------------

// Zone_FinQuest_Request

// optional int32 iQuestID = 1;
inline bool Zone_FinQuest_Request::has_iquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FinQuest_Request::set_has_iquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FinQuest_Request::clear_has_iquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FinQuest_Request::clear_iquestid() {
  iquestid_ = 0;
  clear_has_iquestid();
}
inline ::google::protobuf::int32 Zone_FinQuest_Request::iquestid() const {
  return iquestid_;
}
inline void Zone_FinQuest_Request::set_iquestid(::google::protobuf::int32 value) {
  set_has_iquestid();
  iquestid_ = value;
}

// -------------------------------------------------------------------

// Zone_FinQuest_Response

// optional int32 iResult = 1;
inline bool Zone_FinQuest_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FinQuest_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FinQuest_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FinQuest_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_FinQuest_Response::iresult() const {
  return iresult_;
}
inline void Zone_FinQuest_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// RewardInfo

// optional int32 iType = 1;
inline bool RewardInfo::has_itype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardInfo::set_has_itype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardInfo::clear_has_itype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardInfo::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 RewardInfo::itype() const {
  return itype_;
}
inline void RewardInfo::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional int32 iID = 2;
inline bool RewardInfo::has_iid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardInfo::set_has_iid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardInfo::clear_has_iid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardInfo::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 RewardInfo::iid() const {
  return iid_;
}
inline void RewardInfo::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// optional int32 iNum = 3;
inline bool RewardInfo::has_inum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardInfo::set_has_inum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardInfo::clear_has_inum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardInfo::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 RewardInfo::inum() const {
  return inum_;
}
inline void RewardInfo::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// -------------------------------------------------------------------

// Zone_GetReward_Notify

// optional int32 iQuestID = 1;
inline bool Zone_GetReward_Notify::has_iquestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetReward_Notify::set_has_iquestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetReward_Notify::clear_has_iquestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetReward_Notify::clear_iquestid() {
  iquestid_ = 0;
  clear_has_iquestid();
}
inline ::google::protobuf::int32 Zone_GetReward_Notify::iquestid() const {
  return iquestid_;
}
inline void Zone_GetReward_Notify::set_iquestid(::google::protobuf::int32 value) {
  set_has_iquestid();
  iquestid_ = value;
}

// repeated .RewardInfo stRewards = 2;
inline int Zone_GetReward_Notify::strewards_size() const {
  return strewards_.size();
}
inline void Zone_GetReward_Notify::clear_strewards() {
  strewards_.Clear();
}
inline const ::RewardInfo& Zone_GetReward_Notify::strewards(int index) const {
  return strewards_.Get(index);
}
inline ::RewardInfo* Zone_GetReward_Notify::mutable_strewards(int index) {
  return strewards_.Mutable(index);
}
inline ::RewardInfo* Zone_GetReward_Notify::add_strewards() {
  return strewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardInfo >&
Zone_GetReward_Notify::strewards() const {
  return strewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardInfo >*
Zone_GetReward_Notify::mutable_strewards() {
  return &strewards_;
}

// -------------------------------------------------------------------

// Zone_SetExchange_Request

// optional .ExchangeUser stUserInfo = 1;
inline bool Zone_SetExchange_Request::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SetExchange_Request::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SetExchange_Request::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SetExchange_Request::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::ExchangeUser::Clear();
  clear_has_stuserinfo();
}
inline const ::ExchangeUser& Zone_SetExchange_Request::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::ExchangeUser* Zone_SetExchange_Request::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::ExchangeUser;
  return stuserinfo_;
}
inline ::ExchangeUser* Zone_SetExchange_Request::release_stuserinfo() {
  clear_has_stuserinfo();
  ::ExchangeUser* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void Zone_SetExchange_Request::set_allocated_stuserinfo(::ExchangeUser* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// -------------------------------------------------------------------

// Zone_SetExchange_Response

// optional int32 iResult = 1;
inline bool Zone_SetExchange_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SetExchange_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SetExchange_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SetExchange_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_SetExchange_Response::iresult() const {
  return iresult_;
}
inline void Zone_SetExchange_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .ExchangeUser stUserInfo = 2;
inline bool Zone_SetExchange_Response::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_SetExchange_Response::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_SetExchange_Response::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_SetExchange_Response::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::ExchangeUser::Clear();
  clear_has_stuserinfo();
}
inline const ::ExchangeUser& Zone_SetExchange_Response::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::ExchangeUser* Zone_SetExchange_Response::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::ExchangeUser;
  return stuserinfo_;
}
inline ::ExchangeUser* Zone_SetExchange_Response::release_stuserinfo() {
  clear_has_stuserinfo();
  ::ExchangeUser* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void Zone_SetExchange_Response::set_allocated_stuserinfo(::ExchangeUser* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// -------------------------------------------------------------------

// Zone_ExchangeItem_Request

// optional int32 iExchangeID = 1;
inline bool Zone_ExchangeItem_Request::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ExchangeItem_Request::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ExchangeItem_Request::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ExchangeItem_Request::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 Zone_ExchangeItem_Request::iexchangeid() const {
  return iexchangeid_;
}
inline void Zone_ExchangeItem_Request::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// -------------------------------------------------------------------

// Zone_ExchangeItem_Response

// optional int32 iResult = 1;
inline bool Zone_ExchangeItem_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ExchangeItem_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ExchangeItem_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ExchangeItem_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_ExchangeItem_Response::iresult() const {
  return iresult_;
}
inline void Zone_ExchangeItem_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .ExchangeOrder stOrder = 2;
inline bool Zone_ExchangeItem_Response::has_storder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ExchangeItem_Response::set_has_storder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ExchangeItem_Response::clear_has_storder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ExchangeItem_Response::clear_storder() {
  if (storder_ != NULL) storder_->::ExchangeOrder::Clear();
  clear_has_storder();
}
inline const ::ExchangeOrder& Zone_ExchangeItem_Response::storder() const {
  return storder_ != NULL ? *storder_ : *default_instance_->storder_;
}
inline ::ExchangeOrder* Zone_ExchangeItem_Response::mutable_storder() {
  set_has_storder();
  if (storder_ == NULL) storder_ = new ::ExchangeOrder;
  return storder_;
}
inline ::ExchangeOrder* Zone_ExchangeItem_Response::release_storder() {
  clear_has_storder();
  ::ExchangeOrder* temp = storder_;
  storder_ = NULL;
  return temp;
}
inline void Zone_ExchangeItem_Response::set_allocated_storder(::ExchangeOrder* storder) {
  delete storder_;
  storder_ = storder;
  if (storder) {
    set_has_storder();
  } else {
    clear_has_storder();
  }
}

// -------------------------------------------------------------------

// Zone_NewMailInfo_Notify

// optional .OneMailInfo stMailInfo = 1;
inline bool Zone_NewMailInfo_Notify::has_stmailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_NewMailInfo_Notify::set_has_stmailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_NewMailInfo_Notify::clear_has_stmailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_NewMailInfo_Notify::clear_stmailinfo() {
  if (stmailinfo_ != NULL) stmailinfo_->::OneMailInfo::Clear();
  clear_has_stmailinfo();
}
inline const ::OneMailInfo& Zone_NewMailInfo_Notify::stmailinfo() const {
  return stmailinfo_ != NULL ? *stmailinfo_ : *default_instance_->stmailinfo_;
}
inline ::OneMailInfo* Zone_NewMailInfo_Notify::mutable_stmailinfo() {
  set_has_stmailinfo();
  if (stmailinfo_ == NULL) stmailinfo_ = new ::OneMailInfo;
  return stmailinfo_;
}
inline ::OneMailInfo* Zone_NewMailInfo_Notify::release_stmailinfo() {
  clear_has_stmailinfo();
  ::OneMailInfo* temp = stmailinfo_;
  stmailinfo_ = NULL;
  return temp;
}
inline void Zone_NewMailInfo_Notify::set_allocated_stmailinfo(::OneMailInfo* stmailinfo) {
  delete stmailinfo_;
  stmailinfo_ = stmailinfo;
  if (stmailinfo) {
    set_has_stmailinfo();
  } else {
    clear_has_stmailinfo();
  }
}

// repeated uint32 uDelUniqIDs = 2;
inline int Zone_NewMailInfo_Notify::udeluniqids_size() const {
  return udeluniqids_.size();
}
inline void Zone_NewMailInfo_Notify::clear_udeluniqids() {
  udeluniqids_.Clear();
}
inline ::google::protobuf::uint32 Zone_NewMailInfo_Notify::udeluniqids(int index) const {
  return udeluniqids_.Get(index);
}
inline void Zone_NewMailInfo_Notify::set_udeluniqids(int index, ::google::protobuf::uint32 value) {
  udeluniqids_.Set(index, value);
}
inline void Zone_NewMailInfo_Notify::add_udeluniqids(::google::protobuf::uint32 value) {
  udeluniqids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Zone_NewMailInfo_Notify::udeluniqids() const {
  return udeluniqids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Zone_NewMailInfo_Notify::mutable_udeluniqids() {
  return &udeluniqids_;
}

// -------------------------------------------------------------------

// Zone_MailOpera_Request

// optional uint32 uUniqID = 1;
inline bool Zone_MailOpera_Request::has_uuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_MailOpera_Request::set_has_uuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_MailOpera_Request::clear_has_uuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_MailOpera_Request::clear_uuniqid() {
  uuniqid_ = 0u;
  clear_has_uuniqid();
}
inline ::google::protobuf::uint32 Zone_MailOpera_Request::uuniqid() const {
  return uuniqid_;
}
inline void Zone_MailOpera_Request::set_uuniqid(::google::protobuf::uint32 value) {
  set_has_uuniqid();
  uuniqid_ = value;
}

// optional int32 iOperaType = 2;
inline bool Zone_MailOpera_Request::has_ioperatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_MailOpera_Request::set_has_ioperatype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_MailOpera_Request::clear_has_ioperatype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_MailOpera_Request::clear_ioperatype() {
  ioperatype_ = 0;
  clear_has_ioperatype();
}
inline ::google::protobuf::int32 Zone_MailOpera_Request::ioperatype() const {
  return ioperatype_;
}
inline void Zone_MailOpera_Request::set_ioperatype(::google::protobuf::int32 value) {
  set_has_ioperatype();
  ioperatype_ = value;
}

// -------------------------------------------------------------------

// Zone_MailOpera_Response

// optional int32 iResult = 1;
inline bool Zone_MailOpera_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_MailOpera_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_MailOpera_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_MailOpera_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_MailOpera_Response::iresult() const {
  return iresult_;
}
inline void Zone_MailOpera_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uUniqID = 2;
inline bool Zone_MailOpera_Response::has_uuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_MailOpera_Response::set_has_uuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_MailOpera_Response::clear_has_uuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_MailOpera_Response::clear_uuniqid() {
  uuniqid_ = 0u;
  clear_has_uuniqid();
}
inline ::google::protobuf::uint32 Zone_MailOpera_Response::uuniqid() const {
  return uuniqid_;
}
inline void Zone_MailOpera_Response::set_uuniqid(::google::protobuf::uint32 value) {
  set_has_uuniqid();
  uuniqid_ = value;
}

// optional int32 iOperaType = 4;
inline bool Zone_MailOpera_Response::has_ioperatype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_MailOpera_Response::set_has_ioperatype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_MailOpera_Response::clear_has_ioperatype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_MailOpera_Response::clear_ioperatype() {
  ioperatype_ = 0;
  clear_has_ioperatype();
}
inline ::google::protobuf::int32 Zone_MailOpera_Response::ioperatype() const {
  return ioperatype_;
}
inline void Zone_MailOpera_Response::set_ioperatype(::google::protobuf::int32 value) {
  set_has_ioperatype();
  ioperatype_ = value;
}

// -------------------------------------------------------------------

// Zone_GetLivness_Request

// optional int32 iLivnessRewardID = 1;
inline bool Zone_GetLivness_Request::has_ilivnessrewardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetLivness_Request::set_has_ilivnessrewardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetLivness_Request::clear_has_ilivnessrewardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetLivness_Request::clear_ilivnessrewardid() {
  ilivnessrewardid_ = 0;
  clear_has_ilivnessrewardid();
}
inline ::google::protobuf::int32 Zone_GetLivness_Request::ilivnessrewardid() const {
  return ilivnessrewardid_;
}
inline void Zone_GetLivness_Request::set_ilivnessrewardid(::google::protobuf::int32 value) {
  set_has_ilivnessrewardid();
  ilivnessrewardid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetLivness_Response

// optional int32 iResult = 1;
inline bool Zone_GetLivness_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetLivness_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetLivness_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetLivness_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetLivness_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetLivness_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iLivnessRewardID = 2;
inline bool Zone_GetLivness_Response::has_ilivnessrewardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetLivness_Response::set_has_ilivnessrewardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetLivness_Response::clear_has_ilivnessrewardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetLivness_Response::clear_ilivnessrewardid() {
  ilivnessrewardid_ = 0;
  clear_has_ilivnessrewardid();
}
inline ::google::protobuf::int32 Zone_GetLivness_Response::ilivnessrewardid() const {
  return ilivnessrewardid_;
}
inline void Zone_GetLivness_Response::set_ilivnessrewardid(::google::protobuf::int32 value) {
  set_has_ilivnessrewardid();
  ilivnessrewardid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetRankInfo_Request

// optional int32 iType = 1;
inline bool Zone_GetRankInfo_Request::has_itype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetRankInfo_Request::set_has_itype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetRankInfo_Request::clear_has_itype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetRankInfo_Request::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 Zone_GetRankInfo_Request::itype() const {
  return itype_;
}
inline void Zone_GetRankInfo_Request::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional int32 iFromIndex = 2;
inline bool Zone_GetRankInfo_Request::has_ifromindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetRankInfo_Request::set_has_ifromindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetRankInfo_Request::clear_has_ifromindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetRankInfo_Request::clear_ifromindex() {
  ifromindex_ = 0;
  clear_has_ifromindex();
}
inline ::google::protobuf::int32 Zone_GetRankInfo_Request::ifromindex() const {
  return ifromindex_;
}
inline void Zone_GetRankInfo_Request::set_ifromindex(::google::protobuf::int32 value) {
  set_has_ifromindex();
  ifromindex_ = value;
}

// optional int32 iNum = 3;
inline bool Zone_GetRankInfo_Request::has_inum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_GetRankInfo_Request::set_has_inum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_GetRankInfo_Request::clear_has_inum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_GetRankInfo_Request::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 Zone_GetRankInfo_Request::inum() const {
  return inum_;
}
inline void Zone_GetRankInfo_Request::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// optional bool bLastRank = 4;
inline bool Zone_GetRankInfo_Request::has_blastrank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_GetRankInfo_Request::set_has_blastrank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_GetRankInfo_Request::clear_has_blastrank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_GetRankInfo_Request::clear_blastrank() {
  blastrank_ = false;
  clear_has_blastrank();
}
inline bool Zone_GetRankInfo_Request::blastrank() const {
  return blastrank_;
}
inline void Zone_GetRankInfo_Request::set_blastrank(bool value) {
  set_has_blastrank();
  blastrank_ = value;
}

// -------------------------------------------------------------------

// Zone_GetRankInfo_Response

// optional int32 iResult = 1;
inline bool Zone_GetRankInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetRankInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetRankInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetRankInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetRankInfo_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetRankInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iType = 2;
inline bool Zone_GetRankInfo_Response::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetRankInfo_Response::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetRankInfo_Response::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetRankInfo_Response::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 Zone_GetRankInfo_Response::itype() const {
  return itype_;
}
inline void Zone_GetRankInfo_Response::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// repeated .RankInfo stRanks = 3;
inline int Zone_GetRankInfo_Response::stranks_size() const {
  return stranks_.size();
}
inline void Zone_GetRankInfo_Response::clear_stranks() {
  stranks_.Clear();
}
inline const ::RankInfo& Zone_GetRankInfo_Response::stranks(int index) const {
  return stranks_.Get(index);
}
inline ::RankInfo* Zone_GetRankInfo_Response::mutable_stranks(int index) {
  return stranks_.Mutable(index);
}
inline ::RankInfo* Zone_GetRankInfo_Response::add_stranks() {
  return stranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RankInfo >&
Zone_GetRankInfo_Response::stranks() const {
  return stranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::RankInfo >*
Zone_GetRankInfo_Response::mutable_stranks() {
  return &stranks_;
}

// optional bool bLastRank = 4;
inline bool Zone_GetRankInfo_Response::has_blastrank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_GetRankInfo_Response::set_has_blastrank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_GetRankInfo_Response::clear_has_blastrank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_GetRankInfo_Response::clear_blastrank() {
  blastrank_ = false;
  clear_has_blastrank();
}
inline bool Zone_GetRankInfo_Response::blastrank() const {
  return blastrank_;
}
inline void Zone_GetRankInfo_Response::set_blastrank(bool value) {
  set_has_blastrank();
  blastrank_ = value;
}

// optional int32 iMyRank = 5;
inline bool Zone_GetRankInfo_Response::has_imyrank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_GetRankInfo_Response::set_has_imyrank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_GetRankInfo_Response::clear_has_imyrank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_GetRankInfo_Response::clear_imyrank() {
  imyrank_ = 0;
  clear_has_imyrank();
}
inline ::google::protobuf::int32 Zone_GetRankInfo_Response::imyrank() const {
  return imyrank_;
}
inline void Zone_GetRankInfo_Response::set_imyrank(::google::protobuf::int32 value) {
  set_has_imyrank();
  imyrank_ = value;
}

// -------------------------------------------------------------------

// Zone_UseSkill_Request

// optional int32 iType = 1;
inline bool Zone_UseSkill_Request::has_itype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UseSkill_Request::set_has_itype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UseSkill_Request::clear_has_itype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UseSkill_Request::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 Zone_UseSkill_Request::itype() const {
  return itype_;
}
inline void Zone_UseSkill_Request::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional int32 iItemID = 2;
inline bool Zone_UseSkill_Request::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UseSkill_Request::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UseSkill_Request::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UseSkill_Request::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 Zone_UseSkill_Request::iitemid() const {
  return iitemid_;
}
inline void Zone_UseSkill_Request::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// repeated uint32 uFishUniqIDs = 3;
inline int Zone_UseSkill_Request::ufishuniqids_size() const {
  return ufishuniqids_.size();
}
inline void Zone_UseSkill_Request::clear_ufishuniqids() {
  ufishuniqids_.Clear();
}
inline ::google::protobuf::uint32 Zone_UseSkill_Request::ufishuniqids(int index) const {
  return ufishuniqids_.Get(index);
}
inline void Zone_UseSkill_Request::set_ufishuniqids(int index, ::google::protobuf::uint32 value) {
  ufishuniqids_.Set(index, value);
}
inline void Zone_UseSkill_Request::add_ufishuniqids(::google::protobuf::uint32 value) {
  ufishuniqids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Zone_UseSkill_Request::ufishuniqids() const {
  return ufishuniqids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Zone_UseSkill_Request::mutable_ufishuniqids() {
  return &ufishuniqids_;
}

// optional .POS stWarHeadPos = 4;
inline bool Zone_UseSkill_Request::has_stwarheadpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_UseSkill_Request::set_has_stwarheadpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_UseSkill_Request::clear_has_stwarheadpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_UseSkill_Request::clear_stwarheadpos() {
  if (stwarheadpos_ != NULL) stwarheadpos_->::POS::Clear();
  clear_has_stwarheadpos();
}
inline const ::POS& Zone_UseSkill_Request::stwarheadpos() const {
  return stwarheadpos_ != NULL ? *stwarheadpos_ : *default_instance_->stwarheadpos_;
}
inline ::POS* Zone_UseSkill_Request::mutable_stwarheadpos() {
  set_has_stwarheadpos();
  if (stwarheadpos_ == NULL) stwarheadpos_ = new ::POS;
  return stwarheadpos_;
}
inline ::POS* Zone_UseSkill_Request::release_stwarheadpos() {
  clear_has_stwarheadpos();
  ::POS* temp = stwarheadpos_;
  stwarheadpos_ = NULL;
  return temp;
}
inline void Zone_UseSkill_Request::set_allocated_stwarheadpos(::POS* stwarheadpos) {
  delete stwarheadpos_;
  stwarheadpos_ = stwarheadpos;
  if (stwarheadpos) {
    set_has_stwarheadpos();
  } else {
    clear_has_stwarheadpos();
  }
}

// -------------------------------------------------------------------

// Zone_UseSkill_Response

// optional int32 iResult = 1;
inline bool Zone_UseSkill_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UseSkill_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UseSkill_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UseSkill_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_UseSkill_Response::iresult() const {
  return iresult_;
}
inline void Zone_UseSkill_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iType = 2;
inline bool Zone_UseSkill_Response::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UseSkill_Response::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UseSkill_Response::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UseSkill_Response::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 Zone_UseSkill_Response::itype() const {
  return itype_;
}
inline void Zone_UseSkill_Response::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// -------------------------------------------------------------------

// Zone_UseSkill_Notify

// optional uint32 uin = 1;
inline bool Zone_UseSkill_Notify::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UseSkill_Notify::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UseSkill_Notify::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_UseSkill_Notify::uin() const {
  return uin_;
}
inline void Zone_UseSkill_Notify::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iType = 2;
inline bool Zone_UseSkill_Notify::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UseSkill_Notify::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UseSkill_Notify::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 Zone_UseSkill_Notify::itype() const {
  return itype_;
}
inline void Zone_UseSkill_Notify::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional bool bIsOpen = 3;
inline bool Zone_UseSkill_Notify::has_bisopen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_bisopen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_UseSkill_Notify::clear_has_bisopen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_UseSkill_Notify::clear_bisopen() {
  bisopen_ = false;
  clear_has_bisopen();
}
inline bool Zone_UseSkill_Notify::bisopen() const {
  return bisopen_;
}
inline void Zone_UseSkill_Notify::set_bisopen(bool value) {
  set_has_bisopen();
  bisopen_ = value;
}

// optional int64 lAimEndTime = 4;
inline bool Zone_UseSkill_Notify::has_laimendtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_laimendtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_UseSkill_Notify::clear_has_laimendtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_UseSkill_Notify::clear_laimendtime() {
  laimendtime_ = GOOGLE_LONGLONG(0);
  clear_has_laimendtime();
}
inline ::google::protobuf::int64 Zone_UseSkill_Notify::laimendtime() const {
  return laimendtime_;
}
inline void Zone_UseSkill_Notify::set_laimendtime(::google::protobuf::int64 value) {
  set_has_laimendtime();
  laimendtime_ = value;
}

// repeated uint32 uFishUniqIDs = 5;
inline int Zone_UseSkill_Notify::ufishuniqids_size() const {
  return ufishuniqids_.size();
}
inline void Zone_UseSkill_Notify::clear_ufishuniqids() {
  ufishuniqids_.Clear();
}
inline ::google::protobuf::uint32 Zone_UseSkill_Notify::ufishuniqids(int index) const {
  return ufishuniqids_.Get(index);
}
inline void Zone_UseSkill_Notify::set_ufishuniqids(int index, ::google::protobuf::uint32 value) {
  ufishuniqids_.Set(index, value);
}
inline void Zone_UseSkill_Notify::add_ufishuniqids(::google::protobuf::uint32 value) {
  ufishuniqids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Zone_UseSkill_Notify::ufishuniqids() const {
  return ufishuniqids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Zone_UseSkill_Notify::mutable_ufishuniqids() {
  return &ufishuniqids_;
}

// optional int64 lRewardCoins = 6;
inline bool Zone_UseSkill_Notify::has_lrewardcoins() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_lrewardcoins() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Zone_UseSkill_Notify::clear_has_lrewardcoins() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Zone_UseSkill_Notify::clear_lrewardcoins() {
  lrewardcoins_ = GOOGLE_LONGLONG(0);
  clear_has_lrewardcoins();
}
inline ::google::protobuf::int64 Zone_UseSkill_Notify::lrewardcoins() const {
  return lrewardcoins_;
}
inline void Zone_UseSkill_Notify::set_lrewardcoins(::google::protobuf::int64 value) {
  set_has_lrewardcoins();
  lrewardcoins_ = value;
}

// optional int64 lWildEndTime = 7;
inline bool Zone_UseSkill_Notify::has_lwildendtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_lwildendtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Zone_UseSkill_Notify::clear_has_lwildendtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Zone_UseSkill_Notify::clear_lwildendtime() {
  lwildendtime_ = GOOGLE_LONGLONG(0);
  clear_has_lwildendtime();
}
inline ::google::protobuf::int64 Zone_UseSkill_Notify::lwildendtime() const {
  return lwildendtime_;
}
inline void Zone_UseSkill_Notify::set_lwildendtime(::google::protobuf::int64 value) {
  set_has_lwildendtime();
  lwildendtime_ = value;
}

// optional int32 iWildNum = 8;
inline bool Zone_UseSkill_Notify::has_iwildnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_iwildnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Zone_UseSkill_Notify::clear_has_iwildnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Zone_UseSkill_Notify::clear_iwildnum() {
  iwildnum_ = 0;
  clear_has_iwildnum();
}
inline ::google::protobuf::int32 Zone_UseSkill_Notify::iwildnum() const {
  return iwildnum_;
}
inline void Zone_UseSkill_Notify::set_iwildnum(::google::protobuf::int32 value) {
  set_has_iwildnum();
  iwildnum_ = value;
}

// optional .POS stWarHeadPos = 9;
inline bool Zone_UseSkill_Notify::has_stwarheadpos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Zone_UseSkill_Notify::set_has_stwarheadpos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Zone_UseSkill_Notify::clear_has_stwarheadpos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Zone_UseSkill_Notify::clear_stwarheadpos() {
  if (stwarheadpos_ != NULL) stwarheadpos_->::POS::Clear();
  clear_has_stwarheadpos();
}
inline const ::POS& Zone_UseSkill_Notify::stwarheadpos() const {
  return stwarheadpos_ != NULL ? *stwarheadpos_ : *default_instance_->stwarheadpos_;
}
inline ::POS* Zone_UseSkill_Notify::mutable_stwarheadpos() {
  set_has_stwarheadpos();
  if (stwarheadpos_ == NULL) stwarheadpos_ = new ::POS;
  return stwarheadpos_;
}
inline ::POS* Zone_UseSkill_Notify::release_stwarheadpos() {
  clear_has_stwarheadpos();
  ::POS* temp = stwarheadpos_;
  stwarheadpos_ = NULL;
  return temp;
}
inline void Zone_UseSkill_Notify::set_allocated_stwarheadpos(::POS* stwarheadpos) {
  delete stwarheadpos_;
  stwarheadpos_ = stwarheadpos;
  if (stwarheadpos) {
    set_has_stwarheadpos();
  } else {
    clear_has_stwarheadpos();
  }
}

// -------------------------------------------------------------------

// Zone_GetLimitNum_Request

// optional uint32 uin = 1;
inline bool Zone_GetLimitNum_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetLimitNum_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetLimitNum_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetLimitNum_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GetLimitNum_Request::uin() const {
  return uin_;
}
inline void Zone_GetLimitNum_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iZoneID = 2;
inline bool Zone_GetLimitNum_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetLimitNum_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetLimitNum_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetLimitNum_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_GetLimitNum_Request::izoneid() const {
  return izoneid_;
}
inline void Zone_GetLimitNum_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// -------------------------------------------------------------------

// LimitInfo

// optional int32 iExchangeID = 1;
inline bool LimitInfo::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitInfo::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitInfo::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitInfo::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 LimitInfo::iexchangeid() const {
  return iexchangeid_;
}
inline void LimitInfo::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// optional int32 iNum = 2;
inline bool LimitInfo::has_inum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitInfo::set_has_inum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitInfo::clear_has_inum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitInfo::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 LimitInfo::inum() const {
  return inum_;
}
inline void LimitInfo::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// -------------------------------------------------------------------

// Zone_GetLimitNum_Response

// optional int32 iResult = 1;
inline bool Zone_GetLimitNum_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetLimitNum_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetLimitNum_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetLimitNum_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetLimitNum_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetLimitNum_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// repeated .LimitInfo stLimits = 2;
inline int Zone_GetLimitNum_Response::stlimits_size() const {
  return stlimits_.size();
}
inline void Zone_GetLimitNum_Response::clear_stlimits() {
  stlimits_.Clear();
}
inline const ::LimitInfo& Zone_GetLimitNum_Response::stlimits(int index) const {
  return stlimits_.Get(index);
}
inline ::LimitInfo* Zone_GetLimitNum_Response::mutable_stlimits(int index) {
  return stlimits_.Mutable(index);
}
inline ::LimitInfo* Zone_GetLimitNum_Response::add_stlimits() {
  return stlimits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LimitInfo >&
Zone_GetLimitNum_Response::stlimits() const {
  return stlimits_;
}
inline ::google::protobuf::RepeatedPtrField< ::LimitInfo >*
Zone_GetLimitNum_Response::mutable_stlimits() {
  return &stlimits_;
}

// -------------------------------------------------------------------

// Zone_ChooseAimFish_Request

// optional uint32 uFishUniqID = 1;
inline bool Zone_ChooseAimFish_Request::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChooseAimFish_Request::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChooseAimFish_Request::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChooseAimFish_Request::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_ChooseAimFish_Request::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_ChooseAimFish_Request::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional int32 iFishIndex = 2;
inline bool Zone_ChooseAimFish_Request::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChooseAimFish_Request::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChooseAimFish_Request::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChooseAimFish_Request::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_ChooseAimFish_Request::ifishindex() const {
  return ifishindex_;
}
inline void Zone_ChooseAimFish_Request::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// -------------------------------------------------------------------

// Zone_ChooseAimFish_Response

// optional int32 iResult = 1;
inline bool Zone_ChooseAimFish_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChooseAimFish_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChooseAimFish_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChooseAimFish_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_ChooseAimFish_Response::iresult() const {
  return iresult_;
}
inline void Zone_ChooseAimFish_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uFishUniqID = 2;
inline bool Zone_ChooseAimFish_Response::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChooseAimFish_Response::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChooseAimFish_Response::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChooseAimFish_Response::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_ChooseAimFish_Response::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_ChooseAimFish_Response::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional int32 iFishIndex = 3;
inline bool Zone_ChooseAimFish_Response::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_ChooseAimFish_Response::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_ChooseAimFish_Response::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_ChooseAimFish_Response::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_ChooseAimFish_Response::ifishindex() const {
  return ifishindex_;
}
inline void Zone_ChooseAimFish_Response::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// -------------------------------------------------------------------

// Zone_ChooseAimFish_Notify

// optional uint32 uin = 1;
inline bool Zone_ChooseAimFish_Notify::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChooseAimFish_Notify::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChooseAimFish_Notify::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChooseAimFish_Notify::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_ChooseAimFish_Notify::uin() const {
  return uin_;
}
inline void Zone_ChooseAimFish_Notify::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 uFishUniqID = 2;
inline bool Zone_ChooseAimFish_Notify::has_ufishuniqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChooseAimFish_Notify::set_has_ufishuniqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChooseAimFish_Notify::clear_has_ufishuniqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChooseAimFish_Notify::clear_ufishuniqid() {
  ufishuniqid_ = 0u;
  clear_has_ufishuniqid();
}
inline ::google::protobuf::uint32 Zone_ChooseAimFish_Notify::ufishuniqid() const {
  return ufishuniqid_;
}
inline void Zone_ChooseAimFish_Notify::set_ufishuniqid(::google::protobuf::uint32 value) {
  set_has_ufishuniqid();
  ufishuniqid_ = value;
}

// optional int32 iFishIndex = 3;
inline bool Zone_ChooseAimFish_Notify::has_ifishindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_ChooseAimFish_Notify::set_has_ifishindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_ChooseAimFish_Notify::clear_has_ifishindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_ChooseAimFish_Notify::clear_ifishindex() {
  ifishindex_ = 0;
  clear_has_ifishindex();
}
inline ::google::protobuf::int32 Zone_ChooseAimFish_Notify::ifishindex() const {
  return ifishindex_;
}
inline void Zone_ChooseAimFish_Notify::set_ifishindex(::google::protobuf::int32 value) {
  set_has_ifishindex();
  ifishindex_ = value;
}

// -------------------------------------------------------------------

// Zone_GetUserAlms_Request

// -------------------------------------------------------------------

// Zone_GetUserAlms_Response

// optional int32 iResult = 1;
inline bool Zone_GetUserAlms_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetUserAlms_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetUserAlms_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetUserAlms_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetUserAlms_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetUserAlms_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_UpdateAlms_Notify

// optional int32 iGetNum = 1;
inline bool Zone_UpdateAlms_Notify::has_igetnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdateAlms_Notify::set_has_igetnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdateAlms_Notify::clear_has_igetnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdateAlms_Notify::clear_igetnum() {
  igetnum_ = 0;
  clear_has_igetnum();
}
inline ::google::protobuf::int32 Zone_UpdateAlms_Notify::igetnum() const {
  return igetnum_;
}
inline void Zone_UpdateAlms_Notify::set_igetnum(::google::protobuf::int32 value) {
  set_has_igetnum();
  igetnum_ = value;
}

// optional int32 iNextGetTime = 2;
inline bool Zone_UpdateAlms_Notify::has_inextgettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UpdateAlms_Notify::set_has_inextgettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UpdateAlms_Notify::clear_has_inextgettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UpdateAlms_Notify::clear_inextgettime() {
  inextgettime_ = 0;
  clear_has_inextgettime();
}
inline ::google::protobuf::int32 Zone_UpdateAlms_Notify::inextgettime() const {
  return inextgettime_;
}
inline void Zone_UpdateAlms_Notify::set_inextgettime(::google::protobuf::int32 value) {
  set_has_inextgettime();
  inextgettime_ = value;
}

// -------------------------------------------------------------------

// Zone_LimitLottery_Request

// optional bool bIsTenTimes = 1;
inline bool Zone_LimitLottery_Request::has_bistentimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LimitLottery_Request::set_has_bistentimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LimitLottery_Request::clear_has_bistentimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LimitLottery_Request::clear_bistentimes() {
  bistentimes_ = false;
  clear_has_bistentimes();
}
inline bool Zone_LimitLottery_Request::bistentimes() const {
  return bistentimes_;
}
inline void Zone_LimitLottery_Request::set_bistentimes(bool value) {
  set_has_bistentimes();
  bistentimes_ = value;
}

// optional uint32 uin = 2;
inline bool Zone_LimitLottery_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LimitLottery_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LimitLottery_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LimitLottery_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_LimitLottery_Request::uin() const {
  return uin_;
}
inline void Zone_LimitLottery_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 izoneid = 3;
inline bool Zone_LimitLottery_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_LimitLottery_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_LimitLottery_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_LimitLottery_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_LimitLottery_Request::izoneid() const {
  return izoneid_;
}
inline void Zone_LimitLottery_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional string strNickName = 4;
inline bool Zone_LimitLottery_Request::has_strnickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_LimitLottery_Request::set_has_strnickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_LimitLottery_Request::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_LimitLottery_Request::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& Zone_LimitLottery_Request::strnickname() const {
  return *strnickname_;
}
inline void Zone_LimitLottery_Request::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void Zone_LimitLottery_Request::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void Zone_LimitLottery_Request::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LimitLottery_Request::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* Zone_LimitLottery_Request::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LimitLottery_Request::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iLotteryType = 5;
inline bool Zone_LimitLottery_Request::has_ilotterytype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_LimitLottery_Request::set_has_ilotterytype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_LimitLottery_Request::clear_has_ilotterytype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_LimitLottery_Request::clear_ilotterytype() {
  ilotterytype_ = 0;
  clear_has_ilotterytype();
}
inline ::google::protobuf::int32 Zone_LimitLottery_Request::ilotterytype() const {
  return ilotterytype_;
}
inline void Zone_LimitLottery_Request::set_ilotterytype(::google::protobuf::int32 value) {
  set_has_ilotterytype();
  ilotterytype_ = value;
}

// -------------------------------------------------------------------

// Zone_LimitLottery_Response

// optional int32 iResult = 1;
inline bool Zone_LimitLottery_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LimitLottery_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LimitLottery_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LimitLottery_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_LimitLottery_Response::iresult() const {
  return iresult_;
}
inline void Zone_LimitLottery_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// repeated int32 iLotteryIDs = 2;
inline int Zone_LimitLottery_Response::ilotteryids_size() const {
  return ilotteryids_.size();
}
inline void Zone_LimitLottery_Response::clear_ilotteryids() {
  ilotteryids_.Clear();
}
inline ::google::protobuf::int32 Zone_LimitLottery_Response::ilotteryids(int index) const {
  return ilotteryids_.Get(index);
}
inline void Zone_LimitLottery_Response::set_ilotteryids(int index, ::google::protobuf::int32 value) {
  ilotteryids_.Set(index, value);
}
inline void Zone_LimitLottery_Response::add_ilotteryids(::google::protobuf::int32 value) {
  ilotteryids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Zone_LimitLottery_Response::ilotteryids() const {
  return ilotteryids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Zone_LimitLottery_Response::mutable_ilotteryids() {
  return &ilotteryids_;
}

// optional uint32 uin = 3;
inline bool Zone_LimitLottery_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_LimitLottery_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_LimitLottery_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_LimitLottery_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_LimitLottery_Response::uin() const {
  return uin_;
}
inline void Zone_LimitLottery_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iLotteryType = 4;
inline bool Zone_LimitLottery_Response::has_ilotterytype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_LimitLottery_Response::set_has_ilotterytype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_LimitLottery_Response::clear_has_ilotterytype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_LimitLottery_Response::clear_ilotterytype() {
  ilotterytype_ = 0;
  clear_has_ilotterytype();
}
inline ::google::protobuf::int32 Zone_LimitLottery_Response::ilotterytype() const {
  return ilotterytype_;
}
inline void Zone_LimitLottery_Response::set_ilotterytype(::google::protobuf::int32 value) {
  set_has_ilotterytype();
  ilotterytype_ = value;
}

// -------------------------------------------------------------------

// Zone_PayLotteryRecord_Request

// optional int32 iFrom = 1;
inline bool Zone_PayLotteryRecord_Request::has_ifrom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_PayLotteryRecord_Request::set_has_ifrom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_PayLotteryRecord_Request::clear_has_ifrom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_PayLotteryRecord_Request::clear_ifrom() {
  ifrom_ = 0;
  clear_has_ifrom();
}
inline ::google::protobuf::int32 Zone_PayLotteryRecord_Request::ifrom() const {
  return ifrom_;
}
inline void Zone_PayLotteryRecord_Request::set_ifrom(::google::protobuf::int32 value) {
  set_has_ifrom();
  ifrom_ = value;
}

// optional int32 iNum = 2;
inline bool Zone_PayLotteryRecord_Request::has_inum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_PayLotteryRecord_Request::set_has_inum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_PayLotteryRecord_Request::clear_has_inum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_PayLotteryRecord_Request::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 Zone_PayLotteryRecord_Request::inum() const {
  return inum_;
}
inline void Zone_PayLotteryRecord_Request::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// optional int32 izoneid = 3;
inline bool Zone_PayLotteryRecord_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_PayLotteryRecord_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_PayLotteryRecord_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_PayLotteryRecord_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_PayLotteryRecord_Request::izoneid() const {
  return izoneid_;
}
inline void Zone_PayLotteryRecord_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// -------------------------------------------------------------------

// PayLotteryRecord

// optional string strNickName = 1;
inline bool PayLotteryRecord::has_strnickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PayLotteryRecord::set_has_strnickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PayLotteryRecord::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PayLotteryRecord::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& PayLotteryRecord::strnickname() const {
  return *strnickname_;
}
inline void PayLotteryRecord::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void PayLotteryRecord::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void PayLotteryRecord::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PayLotteryRecord::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* PayLotteryRecord::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PayLotteryRecord::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iLotteryID = 2;
inline bool PayLotteryRecord::has_ilotteryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PayLotteryRecord::set_has_ilotteryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PayLotteryRecord::clear_has_ilotteryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PayLotteryRecord::clear_ilotteryid() {
  ilotteryid_ = 0;
  clear_has_ilotteryid();
}
inline ::google::protobuf::int32 PayLotteryRecord::ilotteryid() const {
  return ilotteryid_;
}
inline void PayLotteryRecord::set_ilotteryid(::google::protobuf::int32 value) {
  set_has_ilotteryid();
  ilotteryid_ = value;
}

// optional int32 iIndex = 3;
inline bool PayLotteryRecord::has_iindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PayLotteryRecord::set_has_iindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PayLotteryRecord::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PayLotteryRecord::clear_iindex() {
  iindex_ = 0;
  clear_has_iindex();
}
inline ::google::protobuf::int32 PayLotteryRecord::iindex() const {
  return iindex_;
}
inline void PayLotteryRecord::set_iindex(::google::protobuf::int32 value) {
  set_has_iindex();
  iindex_ = value;
}

// -------------------------------------------------------------------

// Zone_PayLotteryRecord_Response

// optional int32 iResult = 1;
inline bool Zone_PayLotteryRecord_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_PayLotteryRecord_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_PayLotteryRecord_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_PayLotteryRecord_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_PayLotteryRecord_Response::iresult() const {
  return iresult_;
}
inline void Zone_PayLotteryRecord_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// repeated .PayLotteryRecord stRecords = 2;
inline int Zone_PayLotteryRecord_Response::strecords_size() const {
  return strecords_.size();
}
inline void Zone_PayLotteryRecord_Response::clear_strecords() {
  strecords_.Clear();
}
inline const ::PayLotteryRecord& Zone_PayLotteryRecord_Response::strecords(int index) const {
  return strecords_.Get(index);
}
inline ::PayLotteryRecord* Zone_PayLotteryRecord_Response::mutable_strecords(int index) {
  return strecords_.Mutable(index);
}
inline ::PayLotteryRecord* Zone_PayLotteryRecord_Response::add_strecords() {
  return strecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PayLotteryRecord >&
Zone_PayLotteryRecord_Response::strecords() const {
  return strecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::PayLotteryRecord >*
Zone_PayLotteryRecord_Response::mutable_strecords() {
  return &strecords_;
}

// -------------------------------------------------------------------

// HorseLampInfo

// optional int32 iLampID = 1;
inline bool HorseLampInfo::has_ilampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseLampInfo::set_has_ilampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseLampInfo::clear_has_ilampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseLampInfo::clear_ilampid() {
  ilampid_ = 0;
  clear_has_ilampid();
}
inline ::google::protobuf::int32 HorseLampInfo::ilampid() const {
  return ilampid_;
}
inline void HorseLampInfo::set_ilampid(::google::protobuf::int32 value) {
  set_has_ilampid();
  ilampid_ = value;
}

// optional int32 iEndTime = 2;
inline bool HorseLampInfo::has_iendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseLampInfo::set_has_iendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseLampInfo::clear_has_iendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseLampInfo::clear_iendtime() {
  iendtime_ = 0;
  clear_has_iendtime();
}
inline ::google::protobuf::int32 HorseLampInfo::iendtime() const {
  return iendtime_;
}
inline void HorseLampInfo::set_iendtime(::google::protobuf::int32 value) {
  set_has_iendtime();
  iendtime_ = value;
}

// optional int32 iInterval = 3;
inline bool HorseLampInfo::has_iinterval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorseLampInfo::set_has_iinterval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorseLampInfo::clear_has_iinterval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorseLampInfo::clear_iinterval() {
  iinterval_ = 0;
  clear_has_iinterval();
}
inline ::google::protobuf::int32 HorseLampInfo::iinterval() const {
  return iinterval_;
}
inline void HorseLampInfo::set_iinterval(::google::protobuf::int32 value) {
  set_has_iinterval();
  iinterval_ = value;
}

// optional int32 iTimes = 4;
inline bool HorseLampInfo::has_itimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HorseLampInfo::set_has_itimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HorseLampInfo::clear_has_itimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HorseLampInfo::clear_itimes() {
  itimes_ = 0;
  clear_has_itimes();
}
inline ::google::protobuf::int32 HorseLampInfo::itimes() const {
  return itimes_;
}
inline void HorseLampInfo::set_itimes(::google::protobuf::int32 value) {
  set_has_itimes();
  itimes_ = value;
}

// repeated bytes strParams = 5;
inline int HorseLampInfo::strparams_size() const {
  return strparams_.size();
}
inline void HorseLampInfo::clear_strparams() {
  strparams_.Clear();
}
inline const ::std::string& HorseLampInfo::strparams(int index) const {
  return strparams_.Get(index);
}
inline ::std::string* HorseLampInfo::mutable_strparams(int index) {
  return strparams_.Mutable(index);
}
inline void HorseLampInfo::set_strparams(int index, const ::std::string& value) {
  strparams_.Mutable(index)->assign(value);
}
inline void HorseLampInfo::set_strparams(int index, const char* value) {
  strparams_.Mutable(index)->assign(value);
}
inline void HorseLampInfo::set_strparams(int index, const void* value, size_t size) {
  strparams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HorseLampInfo::add_strparams() {
  return strparams_.Add();
}
inline void HorseLampInfo::add_strparams(const ::std::string& value) {
  strparams_.Add()->assign(value);
}
inline void HorseLampInfo::add_strparams(const char* value) {
  strparams_.Add()->assign(value);
}
inline void HorseLampInfo::add_strparams(const void* value, size_t size) {
  strparams_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HorseLampInfo::strparams() const {
  return strparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HorseLampInfo::mutable_strparams() {
  return &strparams_;
}

// -------------------------------------------------------------------

// Zone_HorseLamp_Notify

// optional int32 iZoneID = 1;
inline bool Zone_HorseLamp_Notify::has_izoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_HorseLamp_Notify::set_has_izoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_HorseLamp_Notify::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_HorseLamp_Notify::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_HorseLamp_Notify::izoneid() const {
  return izoneid_;
}
inline void Zone_HorseLamp_Notify::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// repeated .HorseLampInfo stInfos = 2;
inline int Zone_HorseLamp_Notify::stinfos_size() const {
  return stinfos_.size();
}
inline void Zone_HorseLamp_Notify::clear_stinfos() {
  stinfos_.Clear();
}
inline const ::HorseLampInfo& Zone_HorseLamp_Notify::stinfos(int index) const {
  return stinfos_.Get(index);
}
inline ::HorseLampInfo* Zone_HorseLamp_Notify::mutable_stinfos(int index) {
  return stinfos_.Mutable(index);
}
inline ::HorseLampInfo* Zone_HorseLamp_Notify::add_stinfos() {
  return stinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HorseLampInfo >&
Zone_HorseLamp_Notify::stinfos() const {
  return stinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::HorseLampInfo >*
Zone_HorseLamp_Notify::mutable_stinfos() {
  return &stinfos_;
}

// -------------------------------------------------------------------

// Zone_EnterLasvegas_Request

// optional bool bIsEnter = 1;
inline bool Zone_EnterLasvegas_Request::has_bisenter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_EnterLasvegas_Request::set_has_bisenter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_EnterLasvegas_Request::clear_has_bisenter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_EnterLasvegas_Request::clear_bisenter() {
  bisenter_ = false;
  clear_has_bisenter();
}
inline bool Zone_EnterLasvegas_Request::bisenter() const {
  return bisenter_;
}
inline void Zone_EnterLasvegas_Request::set_bisenter(bool value) {
  set_has_bisenter();
  bisenter_ = value;
}

// -------------------------------------------------------------------

// Zone_EnterLasvegas_Response

// optional int32 iResult = 1;
inline bool Zone_EnterLasvegas_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_EnterLasvegas_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_EnterLasvegas_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_EnterLasvegas_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_EnterLasvegas_Response::iresult() const {
  return iresult_;
}
inline void Zone_EnterLasvegas_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional bool bIsEnter = 2;
inline bool Zone_EnterLasvegas_Response::has_bisenter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_EnterLasvegas_Response::set_has_bisenter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_EnterLasvegas_Response::clear_has_bisenter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_EnterLasvegas_Response::clear_bisenter() {
  bisenter_ = false;
  clear_has_bisenter();
}
inline bool Zone_EnterLasvegas_Response::bisenter() const {
  return bisenter_;
}
inline void Zone_EnterLasvegas_Response::set_bisenter(bool value) {
  set_has_bisenter();
  bisenter_ = value;
}

// -------------------------------------------------------------------

// Zone_LasvegasBet_Request

// optional .NumberBetInfo stBet = 1;
inline bool Zone_LasvegasBet_Request::has_stbet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LasvegasBet_Request::set_has_stbet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LasvegasBet_Request::clear_has_stbet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LasvegasBet_Request::clear_stbet() {
  if (stbet_ != NULL) stbet_->::NumberBetInfo::Clear();
  clear_has_stbet();
}
inline const ::NumberBetInfo& Zone_LasvegasBet_Request::stbet() const {
  return stbet_ != NULL ? *stbet_ : *default_instance_->stbet_;
}
inline ::NumberBetInfo* Zone_LasvegasBet_Request::mutable_stbet() {
  set_has_stbet();
  if (stbet_ == NULL) stbet_ = new ::NumberBetInfo;
  return stbet_;
}
inline ::NumberBetInfo* Zone_LasvegasBet_Request::release_stbet() {
  clear_has_stbet();
  ::NumberBetInfo* temp = stbet_;
  stbet_ = NULL;
  return temp;
}
inline void Zone_LasvegasBet_Request::set_allocated_stbet(::NumberBetInfo* stbet) {
  delete stbet_;
  stbet_ = stbet;
  if (stbet) {
    set_has_stbet();
  } else {
    clear_has_stbet();
  }
}

// -------------------------------------------------------------------

// Zone_LasvegasBet_Response

// optional int32 iResult = 1;
inline bool Zone_LasvegasBet_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LasvegasBet_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LasvegasBet_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LasvegasBet_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_LasvegasBet_Response::iresult() const {
  return iresult_;
}
inline void Zone_LasvegasBet_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .NumberBetInfo stBet = 2;
inline bool Zone_LasvegasBet_Response::has_stbet() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LasvegasBet_Response::set_has_stbet() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LasvegasBet_Response::clear_has_stbet() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LasvegasBet_Response::clear_stbet() {
  if (stbet_ != NULL) stbet_->::NumberBetInfo::Clear();
  clear_has_stbet();
}
inline const ::NumberBetInfo& Zone_LasvegasBet_Response::stbet() const {
  return stbet_ != NULL ? *stbet_ : *default_instance_->stbet_;
}
inline ::NumberBetInfo* Zone_LasvegasBet_Response::mutable_stbet() {
  set_has_stbet();
  if (stbet_ == NULL) stbet_ = new ::NumberBetInfo;
  return stbet_;
}
inline ::NumberBetInfo* Zone_LasvegasBet_Response::release_stbet() {
  clear_has_stbet();
  ::NumberBetInfo* temp = stbet_;
  stbet_ = NULL;
  return temp;
}
inline void Zone_LasvegasBet_Response::set_allocated_stbet(::NumberBetInfo* stbet) {
  delete stbet_;
  stbet_ = stbet;
  if (stbet) {
    set_has_stbet();
  } else {
    clear_has_stbet();
  }
}

// -------------------------------------------------------------------

// Zone_UpdateLasvegas_Notify

// optional .LasvegasInfo stInfo = 1;
inline bool Zone_UpdateLasvegas_Notify::has_stinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdateLasvegas_Notify::set_has_stinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdateLasvegas_Notify::clear_has_stinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdateLasvegas_Notify::clear_stinfo() {
  if (stinfo_ != NULL) stinfo_->::LasvegasInfo::Clear();
  clear_has_stinfo();
}
inline const ::LasvegasInfo& Zone_UpdateLasvegas_Notify::stinfo() const {
  return stinfo_ != NULL ? *stinfo_ : *default_instance_->stinfo_;
}
inline ::LasvegasInfo* Zone_UpdateLasvegas_Notify::mutable_stinfo() {
  set_has_stinfo();
  if (stinfo_ == NULL) stinfo_ = new ::LasvegasInfo;
  return stinfo_;
}
inline ::LasvegasInfo* Zone_UpdateLasvegas_Notify::release_stinfo() {
  clear_has_stinfo();
  ::LasvegasInfo* temp = stinfo_;
  stinfo_ = NULL;
  return temp;
}
inline void Zone_UpdateLasvegas_Notify::set_allocated_stinfo(::LasvegasInfo* stinfo) {
  delete stinfo_;
  stinfo_ = stinfo;
  if (stinfo) {
    set_has_stinfo();
  } else {
    clear_has_stinfo();
  }
}

// -------------------------------------------------------------------

// Zone_GetRewardInfo_Request

// optional int32 iFromIndex = 1;
inline bool Zone_GetRewardInfo_Request::has_ifromindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetRewardInfo_Request::set_has_ifromindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetRewardInfo_Request::clear_has_ifromindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetRewardInfo_Request::clear_ifromindex() {
  ifromindex_ = 0;
  clear_has_ifromindex();
}
inline ::google::protobuf::int32 Zone_GetRewardInfo_Request::ifromindex() const {
  return ifromindex_;
}
inline void Zone_GetRewardInfo_Request::set_ifromindex(::google::protobuf::int32 value) {
  set_has_ifromindex();
  ifromindex_ = value;
}

// optional int32 iNum = 2;
inline bool Zone_GetRewardInfo_Request::has_inum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetRewardInfo_Request::set_has_inum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetRewardInfo_Request::clear_has_inum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetRewardInfo_Request::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 Zone_GetRewardInfo_Request::inum() const {
  return inum_;
}
inline void Zone_GetRewardInfo_Request::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// -------------------------------------------------------------------

// Zone_GetRewardInfo_Response

// optional int32 iResult = 1;
inline bool Zone_GetRewardInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetRewardInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetRewardInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetRewardInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetRewardInfo_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetRewardInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// repeated .PrizeInfo stInfos = 2;
inline int Zone_GetRewardInfo_Response::stinfos_size() const {
  return stinfos_.size();
}
inline void Zone_GetRewardInfo_Response::clear_stinfos() {
  stinfos_.Clear();
}
inline const ::PrizeInfo& Zone_GetRewardInfo_Response::stinfos(int index) const {
  return stinfos_.Get(index);
}
inline ::PrizeInfo* Zone_GetRewardInfo_Response::mutable_stinfos(int index) {
  return stinfos_.Mutable(index);
}
inline ::PrizeInfo* Zone_GetRewardInfo_Response::add_stinfos() {
  return stinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PrizeInfo >&
Zone_GetRewardInfo_Response::stinfos() const {
  return stinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PrizeInfo >*
Zone_GetRewardInfo_Response::mutable_stinfos() {
  return &stinfos_;
}

// -------------------------------------------------------------------

// Zone_GetLoginReward_Request

// optional int32 iRewardID = 1;
inline bool Zone_GetLoginReward_Request::has_irewardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetLoginReward_Request::set_has_irewardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetLoginReward_Request::clear_has_irewardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetLoginReward_Request::clear_irewardid() {
  irewardid_ = 0;
  clear_has_irewardid();
}
inline ::google::protobuf::int32 Zone_GetLoginReward_Request::irewardid() const {
  return irewardid_;
}
inline void Zone_GetLoginReward_Request::set_irewardid(::google::protobuf::int32 value) {
  set_has_irewardid();
  irewardid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetLoginReward_Response

// optional int32 iResult = 1;
inline bool Zone_GetLoginReward_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetLoginReward_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetLoginReward_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetLoginReward_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetLoginReward_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetLoginReward_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iRewardID = 2;
inline bool Zone_GetLoginReward_Response::has_irewardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetLoginReward_Response::set_has_irewardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetLoginReward_Response::clear_has_irewardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetLoginReward_Response::clear_irewardid() {
  irewardid_ = 0;
  clear_has_irewardid();
}
inline ::google::protobuf::int32 Zone_GetLoginReward_Response::irewardid() const {
  return irewardid_;
}
inline void Zone_GetLoginReward_Response::set_irewardid(::google::protobuf::int32 value) {
  set_has_irewardid();
  irewardid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetPayRecord_Request

// optional uint32 uin = 1;
inline bool Zone_GetPayRecord_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetPayRecord_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetPayRecord_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetPayRecord_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GetPayRecord_Request::uin() const {
  return uin_;
}
inline void Zone_GetPayRecord_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// -------------------------------------------------------------------

// Zone_GetPayRecord_Response

// optional int32 iResult = 1;
inline bool Zone_GetPayRecord_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetPayRecord_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetPayRecord_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetPayRecord_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetPayRecord_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetPayRecord_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// repeated .RechargeRecord stRecords = 2;
inline int Zone_GetPayRecord_Response::strecords_size() const {
  return strecords_.size();
}
inline void Zone_GetPayRecord_Response::clear_strecords() {
  strecords_.Clear();
}
inline const ::RechargeRecord& Zone_GetPayRecord_Response::strecords(int index) const {
  return strecords_.Get(index);
}
inline ::RechargeRecord* Zone_GetPayRecord_Response::mutable_strecords(int index) {
  return strecords_.Mutable(index);
}
inline ::RechargeRecord* Zone_GetPayRecord_Response::add_strecords() {
  return strecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeRecord >&
Zone_GetPayRecord_Response::strecords() const {
  return strecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeRecord >*
Zone_GetPayRecord_Response::mutable_strecords() {
  return &strecords_;
}

// -------------------------------------------------------------------

// Zone_GetPayGift_Request

// optional int32 iGiftType = 1;
inline bool Zone_GetPayGift_Request::has_igifttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetPayGift_Request::set_has_igifttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetPayGift_Request::clear_has_igifttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetPayGift_Request::clear_igifttype() {
  igifttype_ = 0;
  clear_has_igifttype();
}
inline ::google::protobuf::int32 Zone_GetPayGift_Request::igifttype() const {
  return igifttype_;
}
inline void Zone_GetPayGift_Request::set_igifttype(::google::protobuf::int32 value) {
  set_has_igifttype();
  igifttype_ = value;
}

// -------------------------------------------------------------------

// Zone_GetPayGift_Response

// optional int32 iResult = 1;
inline bool Zone_GetPayGift_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetPayGift_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetPayGift_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetPayGift_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetPayGift_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetPayGift_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iGiftType = 2;
inline bool Zone_GetPayGift_Response::has_igifttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetPayGift_Response::set_has_igifttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetPayGift_Response::clear_has_igifttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetPayGift_Response::clear_igifttype() {
  igifttype_ = 0;
  clear_has_igifttype();
}
inline ::google::protobuf::int32 Zone_GetPayGift_Response::igifttype() const {
  return igifttype_;
}
inline void Zone_GetPayGift_Response::set_igifttype(::google::protobuf::int32 value) {
  set_has_igifttype();
  igifttype_ = value;
}

// -------------------------------------------------------------------

// Zone_UpdateMonthTime_Notify

// optional int32 iMonthEndTime = 1;
inline bool Zone_UpdateMonthTime_Notify::has_imonthendtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdateMonthTime_Notify::set_has_imonthendtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdateMonthTime_Notify::clear_has_imonthendtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdateMonthTime_Notify::clear_imonthendtime() {
  imonthendtime_ = 0;
  clear_has_imonthendtime();
}
inline ::google::protobuf::int32 Zone_UpdateMonthTime_Notify::imonthendtime() const {
  return imonthendtime_;
}
inline void Zone_UpdateMonthTime_Notify::set_imonthendtime(::google::protobuf::int32 value) {
  set_has_imonthendtime();
  imonthendtime_ = value;
}

// -------------------------------------------------------------------

// Zone_FishUserUpdate_Notify

// optional int32 iSeat = 1;
inline bool Zone_FishUserUpdate_Notify::has_iseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FishUserUpdate_Notify::set_has_iseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FishUserUpdate_Notify::clear_has_iseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FishUserUpdate_Notify::clear_iseat() {
  iseat_ = 0;
  clear_has_iseat();
}
inline ::google::protobuf::int32 Zone_FishUserUpdate_Notify::iseat() const {
  return iseat_;
}
inline void Zone_FishUserUpdate_Notify::set_iseat(::google::protobuf::int32 value) {
  set_has_iseat();
  iseat_ = value;
}

// optional int64 iAddCoins = 2;
inline bool Zone_FishUserUpdate_Notify::has_iaddcoins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_FishUserUpdate_Notify::set_has_iaddcoins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_FishUserUpdate_Notify::clear_has_iaddcoins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_FishUserUpdate_Notify::clear_iaddcoins() {
  iaddcoins_ = GOOGLE_LONGLONG(0);
  clear_has_iaddcoins();
}
inline ::google::protobuf::int64 Zone_FishUserUpdate_Notify::iaddcoins() const {
  return iaddcoins_;
}
inline void Zone_FishUserUpdate_Notify::set_iaddcoins(::google::protobuf::int64 value) {
  set_has_iaddcoins();
  iaddcoins_ = value;
}

// optional int64 iAddTickets = 3;
inline bool Zone_FishUserUpdate_Notify::has_iaddtickets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_FishUserUpdate_Notify::set_has_iaddtickets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_FishUserUpdate_Notify::clear_has_iaddtickets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_FishUserUpdate_Notify::clear_iaddtickets() {
  iaddtickets_ = GOOGLE_LONGLONG(0);
  clear_has_iaddtickets();
}
inline ::google::protobuf::int64 Zone_FishUserUpdate_Notify::iaddtickets() const {
  return iaddtickets_;
}
inline void Zone_FishUserUpdate_Notify::set_iaddtickets(::google::protobuf::int64 value) {
  set_has_iaddtickets();
  iaddtickets_ = value;
}

// optional .OneSlotInfo stAddItem = 4;
inline bool Zone_FishUserUpdate_Notify::has_stadditem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_FishUserUpdate_Notify::set_has_stadditem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_FishUserUpdate_Notify::clear_has_stadditem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_FishUserUpdate_Notify::clear_stadditem() {
  if (stadditem_ != NULL) stadditem_->::OneSlotInfo::Clear();
  clear_has_stadditem();
}
inline const ::OneSlotInfo& Zone_FishUserUpdate_Notify::stadditem() const {
  return stadditem_ != NULL ? *stadditem_ : *default_instance_->stadditem_;
}
inline ::OneSlotInfo* Zone_FishUserUpdate_Notify::mutable_stadditem() {
  set_has_stadditem();
  if (stadditem_ == NULL) stadditem_ = new ::OneSlotInfo;
  return stadditem_;
}
inline ::OneSlotInfo* Zone_FishUserUpdate_Notify::release_stadditem() {
  clear_has_stadditem();
  ::OneSlotInfo* temp = stadditem_;
  stadditem_ = NULL;
  return temp;
}
inline void Zone_FishUserUpdate_Notify::set_allocated_stadditem(::OneSlotInfo* stadditem) {
  delete stadditem_;
  stadditem_ = stadditem;
  if (stadditem) {
    set_has_stadditem();
  } else {
    clear_has_stadditem();
  }
}

// -------------------------------------------------------------------

// Zone_VipExpUpdate_Notify

// optional int32 iVipLevel = 1;
inline bool Zone_VipExpUpdate_Notify::has_iviplevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_VipExpUpdate_Notify::set_has_iviplevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_VipExpUpdate_Notify::clear_has_iviplevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_VipExpUpdate_Notify::clear_iviplevel() {
  iviplevel_ = 0;
  clear_has_iviplevel();
}
inline ::google::protobuf::int32 Zone_VipExpUpdate_Notify::iviplevel() const {
  return iviplevel_;
}
inline void Zone_VipExpUpdate_Notify::set_iviplevel(::google::protobuf::int32 value) {
  set_has_iviplevel();
  iviplevel_ = value;
}

// optional int32 iVipExp = 2;
inline bool Zone_VipExpUpdate_Notify::has_ivipexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_VipExpUpdate_Notify::set_has_ivipexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_VipExpUpdate_Notify::clear_has_ivipexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_VipExpUpdate_Notify::clear_ivipexp() {
  ivipexp_ = 0;
  clear_has_ivipexp();
}
inline ::google::protobuf::int32 Zone_VipExpUpdate_Notify::ivipexp() const {
  return ivipexp_;
}
inline void Zone_VipExpUpdate_Notify::set_ivipexp(::google::protobuf::int32 value) {
  set_has_ivipexp();
  ivipexp_ = value;
}

// optional int32 iVipPriv = 3;
inline bool Zone_VipExpUpdate_Notify::has_ivippriv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_VipExpUpdate_Notify::set_has_ivippriv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_VipExpUpdate_Notify::clear_has_ivippriv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_VipExpUpdate_Notify::clear_ivippriv() {
  ivippriv_ = 0;
  clear_has_ivippriv();
}
inline ::google::protobuf::int32 Zone_VipExpUpdate_Notify::ivippriv() const {
  return ivippriv_;
}
inline void Zone_VipExpUpdate_Notify::set_ivippriv(::google::protobuf::int32 value) {
  set_has_ivippriv();
  ivippriv_ = value;
}

// -------------------------------------------------------------------

// Zone_UserRecharge_Notify

// optional int32 iRechargeID = 1;
inline bool Zone_UserRecharge_Notify::has_irechargeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UserRecharge_Notify::set_has_irechargeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UserRecharge_Notify::clear_has_irechargeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UserRecharge_Notify::clear_irechargeid() {
  irechargeid_ = 0;
  clear_has_irechargeid();
}
inline ::google::protobuf::int32 Zone_UserRecharge_Notify::irechargeid() const {
  return irechargeid_;
}
inline void Zone_UserRecharge_Notify::set_irechargeid(::google::protobuf::int32 value) {
  set_has_irechargeid();
  irechargeid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetPayOrder_Request

// optional int32 uin = 1;
inline bool Zone_GetPayOrder_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetPayOrder_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetPayOrder_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetPayOrder_Request::clear_uin() {
  uin_ = 0;
  clear_has_uin();
}
inline ::google::protobuf::int32 Zone_GetPayOrder_Request::uin() const {
  return uin_;
}
inline void Zone_GetPayOrder_Request::set_uin(::google::protobuf::int32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iFromZoneID = 2;
inline bool Zone_GetPayOrder_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetPayOrder_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetPayOrder_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetPayOrder_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 Zone_GetPayOrder_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void Zone_GetPayOrder_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetPayOrder_Response

// optional int32 iResult = 1;
inline bool Zone_GetPayOrder_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetPayOrder_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetPayOrder_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetPayOrder_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetPayOrder_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetPayOrder_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional string strOrderID = 2;
inline bool Zone_GetPayOrder_Response::has_strorderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetPayOrder_Response::set_has_strorderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetPayOrder_Response::clear_has_strorderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetPayOrder_Response::clear_strorderid() {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    strorderid_->clear();
  }
  clear_has_strorderid();
}
inline const ::std::string& Zone_GetPayOrder_Response::strorderid() const {
  return *strorderid_;
}
inline void Zone_GetPayOrder_Response::set_strorderid(const ::std::string& value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void Zone_GetPayOrder_Response::set_strorderid(const char* value) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(value);
}
inline void Zone_GetPayOrder_Response::set_strorderid(const char* value, size_t size) {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  strorderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_GetPayOrder_Response::mutable_strorderid() {
  set_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    strorderid_ = new ::std::string;
  }
  return strorderid_;
}
inline ::std::string* Zone_GetPayOrder_Response::release_strorderid() {
  clear_has_strorderid();
  if (strorderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strorderid_;
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_GetPayOrder_Response::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete strorderid_;
  }
  if (strorderid) {
    set_has_strorderid();
    strorderid_ = strorderid;
  } else {
    clear_has_strorderid();
    strorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_FinGuide_Request

// optional int32 iGuideID = 1;
inline bool Zone_FinGuide_Request::has_iguideid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FinGuide_Request::set_has_iguideid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FinGuide_Request::clear_has_iguideid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FinGuide_Request::clear_iguideid() {
  iguideid_ = 0;
  clear_has_iguideid();
}
inline ::google::protobuf::int32 Zone_FinGuide_Request::iguideid() const {
  return iguideid_;
}
inline void Zone_FinGuide_Request::set_iguideid(::google::protobuf::int32 value) {
  set_has_iguideid();
  iguideid_ = value;
}

// -------------------------------------------------------------------

// Zone_FinGuide_Response

// optional int32 iResult = 1;
inline bool Zone_FinGuide_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FinGuide_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FinGuide_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FinGuide_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_FinGuide_Response::iresult() const {
  return iresult_;
}
inline void Zone_FinGuide_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iGuideID = 2;
inline bool Zone_FinGuide_Response::has_iguideid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_FinGuide_Response::set_has_iguideid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_FinGuide_Response::clear_has_iguideid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_FinGuide_Response::clear_iguideid() {
  iguideid_ = 0;
  clear_has_iguideid();
}
inline ::google::protobuf::int32 Zone_FinGuide_Response::iguideid() const {
  return iguideid_;
}
inline void Zone_FinGuide_Response::set_iguideid(::google::protobuf::int32 value) {
  set_has_iguideid();
  iguideid_ = value;
}

// -------------------------------------------------------------------

// Zone_UpdateName_Request

// optional string strNewName = 1;
inline bool Zone_UpdateName_Request::has_strnewname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdateName_Request::set_has_strnewname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdateName_Request::clear_has_strnewname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdateName_Request::clear_strnewname() {
  if (strnewname_ != &::google::protobuf::internal::kEmptyString) {
    strnewname_->clear();
  }
  clear_has_strnewname();
}
inline const ::std::string& Zone_UpdateName_Request::strnewname() const {
  return *strnewname_;
}
inline void Zone_UpdateName_Request::set_strnewname(const ::std::string& value) {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  strnewname_->assign(value);
}
inline void Zone_UpdateName_Request::set_strnewname(const char* value) {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  strnewname_->assign(value);
}
inline void Zone_UpdateName_Request::set_strnewname(const char* value, size_t size) {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  strnewname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_UpdateName_Request::mutable_strnewname() {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  return strnewname_;
}
inline ::std::string* Zone_UpdateName_Request::release_strnewname() {
  clear_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnewname_;
    strnewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_UpdateName_Request::set_allocated_strnewname(::std::string* strnewname) {
  if (strnewname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnewname_;
  }
  if (strnewname) {
    set_has_strnewname();
    strnewname_ = strnewname;
  } else {
    clear_has_strnewname();
    strnewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bIsSign = 2;
inline bool Zone_UpdateName_Request::has_bissign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UpdateName_Request::set_has_bissign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UpdateName_Request::clear_has_bissign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UpdateName_Request::clear_bissign() {
  bissign_ = false;
  clear_has_bissign();
}
inline bool Zone_UpdateName_Request::bissign() const {
  return bissign_;
}
inline void Zone_UpdateName_Request::set_bissign(bool value) {
  set_has_bissign();
  bissign_ = value;
}

// -------------------------------------------------------------------

// Zone_UpdateName_Response

// optional int32 iResult = 1;
inline bool Zone_UpdateName_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdateName_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdateName_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdateName_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_UpdateName_Response::iresult() const {
  return iresult_;
}
inline void Zone_UpdateName_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional string strNewName = 2;
inline bool Zone_UpdateName_Response::has_strnewname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UpdateName_Response::set_has_strnewname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UpdateName_Response::clear_has_strnewname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UpdateName_Response::clear_strnewname() {
  if (strnewname_ != &::google::protobuf::internal::kEmptyString) {
    strnewname_->clear();
  }
  clear_has_strnewname();
}
inline const ::std::string& Zone_UpdateName_Response::strnewname() const {
  return *strnewname_;
}
inline void Zone_UpdateName_Response::set_strnewname(const ::std::string& value) {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  strnewname_->assign(value);
}
inline void Zone_UpdateName_Response::set_strnewname(const char* value) {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  strnewname_->assign(value);
}
inline void Zone_UpdateName_Response::set_strnewname(const char* value, size_t size) {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  strnewname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_UpdateName_Response::mutable_strnewname() {
  set_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    strnewname_ = new ::std::string;
  }
  return strnewname_;
}
inline ::std::string* Zone_UpdateName_Response::release_strnewname() {
  clear_has_strnewname();
  if (strnewname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnewname_;
    strnewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_UpdateName_Response::set_allocated_strnewname(::std::string* strnewname) {
  if (strnewname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnewname_;
  }
  if (strnewname) {
    set_has_strnewname();
    strnewname_ = strnewname;
  } else {
    clear_has_strnewname();
    strnewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bIsSign = 3;
inline bool Zone_UpdateName_Response::has_bissign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_UpdateName_Response::set_has_bissign() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_UpdateName_Response::clear_has_bissign() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_UpdateName_Response::clear_bissign() {
  bissign_ = false;
  clear_has_bissign();
}
inline bool Zone_UpdateName_Response::bissign() const {
  return bissign_;
}
inline void Zone_UpdateName_Response::set_bissign(bool value) {
  set_has_bissign();
  bissign_ = value;
}

// -------------------------------------------------------------------

// Zone_UserRecharge_Request

// optional int32 iRechargeID = 1;
inline bool Zone_UserRecharge_Request::has_irechargeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UserRecharge_Request::set_has_irechargeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UserRecharge_Request::clear_has_irechargeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UserRecharge_Request::clear_irechargeid() {
  irechargeid_ = 0;
  clear_has_irechargeid();
}
inline ::google::protobuf::int32 Zone_UserRecharge_Request::irechargeid() const {
  return irechargeid_;
}
inline void Zone_UserRecharge_Request::set_irechargeid(::google::protobuf::int32 value) {
  set_has_irechargeid();
  irechargeid_ = value;
}

// -------------------------------------------------------------------

// Zone_UserRecharge_Response

// optional int32 iResult = 1;
inline bool Zone_UserRecharge_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UserRecharge_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UserRecharge_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UserRecharge_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_UserRecharge_Response::iresult() const {
  return iresult_;
}
inline void Zone_UserRecharge_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iRechargeID = 2;
inline bool Zone_UserRecharge_Response::has_irechargeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UserRecharge_Response::set_has_irechargeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UserRecharge_Response::clear_has_irechargeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UserRecharge_Response::clear_irechargeid() {
  irechargeid_ = 0;
  clear_has_irechargeid();
}
inline ::google::protobuf::int32 Zone_UserRecharge_Response::irechargeid() const {
  return irechargeid_;
}
inline void Zone_UserRecharge_Response::set_irechargeid(::google::protobuf::int32 value) {
  set_has_irechargeid();
  irechargeid_ = value;
}

// -------------------------------------------------------------------

// Zone_GetExchangeRec_Request

// optional int32 iFromIndex = 1;
inline bool Zone_GetExchangeRec_Request::has_ifromindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetExchangeRec_Request::set_has_ifromindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetExchangeRec_Request::clear_has_ifromindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetExchangeRec_Request::clear_ifromindex() {
  ifromindex_ = 0;
  clear_has_ifromindex();
}
inline ::google::protobuf::int32 Zone_GetExchangeRec_Request::ifromindex() const {
  return ifromindex_;
}
inline void Zone_GetExchangeRec_Request::set_ifromindex(::google::protobuf::int32 value) {
  set_has_ifromindex();
  ifromindex_ = value;
}

// optional int32 iNum = 2;
inline bool Zone_GetExchangeRec_Request::has_inum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetExchangeRec_Request::set_has_inum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetExchangeRec_Request::clear_has_inum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetExchangeRec_Request::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 Zone_GetExchangeRec_Request::inum() const {
  return inum_;
}
inline void Zone_GetExchangeRec_Request::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// optional int32 iZoneID = 3;
inline bool Zone_GetExchangeRec_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_GetExchangeRec_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_GetExchangeRec_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_GetExchangeRec_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_GetExchangeRec_Request::izoneid() const {
  return izoneid_;
}
inline void Zone_GetExchangeRec_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional uint32 uin = 4;
inline bool Zone_GetExchangeRec_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_GetExchangeRec_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_GetExchangeRec_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_GetExchangeRec_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GetExchangeRec_Request::uin() const {
  return uin_;
}
inline void Zone_GetExchangeRec_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// -------------------------------------------------------------------

// Zone_GetExchangeRec_Response

// optional int32 iResult = 1;
inline bool Zone_GetExchangeRec_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetExchangeRec_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetExchangeRec_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetExchangeRec_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetExchangeRec_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetExchangeRec_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iFromIndex = 2;
inline bool Zone_GetExchangeRec_Response::has_ifromindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetExchangeRec_Response::set_has_ifromindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetExchangeRec_Response::clear_has_ifromindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetExchangeRec_Response::clear_ifromindex() {
  ifromindex_ = 0;
  clear_has_ifromindex();
}
inline ::google::protobuf::int32 Zone_GetExchangeRec_Response::ifromindex() const {
  return ifromindex_;
}
inline void Zone_GetExchangeRec_Response::set_ifromindex(::google::protobuf::int32 value) {
  set_has_ifromindex();
  ifromindex_ = value;
}

// optional int32 iNum = 3;
inline bool Zone_GetExchangeRec_Response::has_inum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_GetExchangeRec_Response::set_has_inum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_GetExchangeRec_Response::clear_has_inum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_GetExchangeRec_Response::clear_inum() {
  inum_ = 0;
  clear_has_inum();
}
inline ::google::protobuf::int32 Zone_GetExchangeRec_Response::inum() const {
  return inum_;
}
inline void Zone_GetExchangeRec_Response::set_inum(::google::protobuf::int32 value) {
  set_has_inum();
  inum_ = value;
}

// repeated .ExchangeRec stRecords = 4;
inline int Zone_GetExchangeRec_Response::strecords_size() const {
  return strecords_.size();
}
inline void Zone_GetExchangeRec_Response::clear_strecords() {
  strecords_.Clear();
}
inline const ::ExchangeRec& Zone_GetExchangeRec_Response::strecords(int index) const {
  return strecords_.Get(index);
}
inline ::ExchangeRec* Zone_GetExchangeRec_Response::mutable_strecords(int index) {
  return strecords_.Mutable(index);
}
inline ::ExchangeRec* Zone_GetExchangeRec_Response::add_strecords() {
  return strecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExchangeRec >&
Zone_GetExchangeRec_Response::strecords() const {
  return strecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExchangeRec >*
Zone_GetExchangeRec_Response::mutable_strecords() {
  return &strecords_;
}

// optional uint32 uin = 5;
inline bool Zone_GetExchangeRec_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_GetExchangeRec_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_GetExchangeRec_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_GetExchangeRec_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GetExchangeRec_Response::uin() const {
  return uin_;
}
inline void Zone_GetExchangeRec_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ReqOperaType>() {
  return ::ReqOperaType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GMOperaType>() {
  return ::GMOperaType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LotteryType>() {
  return ::LotteryType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::QuestChangeType>() {
  return ::QuestChangeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MailOperaType>() {
  return ::MailOperaType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SkillType>() {
  return ::SkillType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PayGiftType>() {
  return ::PayGiftType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_5fZone_2eproto__INCLUDED
